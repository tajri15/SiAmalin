app\Helpers\FaceRecognitionHelper.php
<?php

namespace App\Helpers;

use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;
use App\Models\Karyawan;

class FaceRecognitionHelper
{
    public static function calculateDistance($lat1, $lon1, $lat2, $lon2)
    {
        $theta = $lon1 - $lon2;
        $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + 
                cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
        $dist = acos($dist);
        $dist = rad2deg($dist);
        $miles = $dist * 60 * 1.1515;
        $kilometers = $miles * 1.609344;
        $meters = $kilometers * 1000;
        
        return $meters;
    }

    public static function isWithinOfficeRadius($userLat, $userLng, $karyawan = null)
    {
        if (!$karyawan) {
            $karyawan = Auth::guard('karyawan')->user();
        }

        if (empty($karyawan->office_location)) {
            return [
                'within' => false,
                'distance' => 0,
                'max_distance' => 0,
                'error' => 'Lokasi kantor belum ditentukan'
            ];
        }

        $officeCoords = $karyawan->office_location['coordinates'];
        $officeLng = $officeCoords[0]; // Longitude
        $officeLat = $officeCoords[1]; // Latitude
        $maxDistance = $karyawan->office_radius ?? 55;
        
        $distance = self::calculateDistance($userLat, $userLng, $officeLat, $officeLng);
        
        Log::info('Distance Calculation:', [
            'user_lat' => $userLat,
            'user_lng' => $userLng,
            'office_lat' => $officeLat,
            'office_lng' => $officeLng,
            'distance' => $distance,
            'max_distance' => $maxDistance
        ]);
        
        return [
            'within' => $distance <= $maxDistance,
            'distance' => $distance,
            'max_distance' => $maxDistance,
            'error' => null
        ];
    }

    public static function logFaceRecognitionEvent($eventData)
    {
        try {
            $logPath = storage_path('logs/face_recognition.log');
            $logData = json_encode([
                'timestamp' => now()->toDateTimeString(),
                'event' => $eventData
            ]) . PHP_EOL;
            
            file_put_contents($logPath, $logData, FILE_APPEND);
        } catch (\Exception $e) {
            Log::error('Failed to log face recognition event: ' . $e->getMessage());
        }
    }
}

app\Http\Controllers\Admin\AdminBackupController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Carbon\Carbon;
use App\Models\Presensi;
use App\Models\Laporan;
use App\Models\Patrol;
use Illuminate\Support\Facades\Log;

class AdminBackupController extends Controller
{
    /**
     * Menampilkan halaman untuk melakukan backup data.
     */
    public function index()
    {
        // Data hanya dapat di-backup jika lebih dari 3 bulan.
        // Contoh: Jika sekarang Juni, data yg bisa di-backup adalah Februari dan sebelumnya.
        // Maka, bulan maksimum yang bisa dipilih sebagai end_month adalah bulan ke-4 sebelum bulan ini.
        $maxMonth = Carbon::now()->subMonths(3)->format('Y-m');
        return view('admin.backup.index', compact('maxMonth'));
    }

    /**
     * Memproses permintaan backup data.
     */
    public function processBackup(Request $request)
    {
        $request->validate([
            'type' => 'required|in:presensi,laporan,patroli',
            'start_month' => 'required|date_format:Y-m',
            'end_month' => 'required|date_format:Y-m|after_or_equal:start_month',
        ]);

        // Validasi aturan 3 bulan
        $endMonthSelected = Carbon::createFromFormat('Y-m', $request->end_month)->startOfMonth();
        $restrictionDate = Carbon::now()->subMonths(3)->startOfMonth();

        if ($endMonthSelected->gte($restrictionDate)) {
            return redirect()->back()
                ->with('error', 'Gagal! Anda hanya dapat mem-backup data yang usianya lebih dari 3 bulan.');
        }


        $type = $request->type;
        $startDate = Carbon::createFromFormat('Y-m', $request->start_month)->startOfMonth();
        $endDate = Carbon::createFromFormat('Y-m', $request->end_month)->endOfMonth();
        
        $model = null;
        $dateColumn = '';
        $originalCollection = '';
        $backupCollection = '';

        switch ($type) {
            case 'presensi':
                $model = new Presensi();
                $dateColumn = 'tgl_presensi';
                $originalCollection = 'presensi';
                $backupCollection = 'presensis_backups';
                break;
            case 'laporan':
                $model = new Laporan();
                $dateColumn = 'tanggal';
                $originalCollection = 'laporan';
                $backupCollection = 'laporans_backups';
                break;
            case 'patroli':
                $model = new Patrol();
                $dateColumn = 'start_time';
                $originalCollection = 'patrols';
                $backupCollection = 'patrols_backups';
                break;
        }

        if (!$model) {
            return redirect()->back()->with('error', 'Jenis data tidak valid.');
        }

        try {
            $documentsToMove = $model->whereBetween($dateColumn, [$startDate, $endDate])->get();
            $count = $documentsToMove->count();

            if ($count === 0) {
                return redirect()->back()->with('info', "Tidak ada data {$type} yang ditemukan pada periode yang dipilih untuk di-backup.");
            }

            // Konversi ke array untuk proses insert
            $documentsArray = $documentsToMove->toArray();
            
            // 1. Insert ke koleksi backup
            // PERBAIKAN: Menggunakan ->table() sebagai alias untuk ->collection()
            DB::connection('mongodb')->table($backupCollection)->insert($documentsArray);

            // 2. Hapus dari koleksi asli setelah berhasil di-insert
            $idsToDelete = $documentsToMove->pluck('_id');
            $model->whereIn('_id', $idsToDelete)->delete();

            Log::info("Backup success: Moved {$count} documents from '{$originalCollection}' to '{$backupCollection}' for period {$startDate->toDateString()} to {$endDate->toDateString()}.");

            return redirect()->route('admin.backup.index')
                             ->with('success', "Berhasil! Sebanyak {$count} data {$type} telah di-backup dan dihapus dari koleksi utama.");

        } catch (\Exception $e) {
            Log::error("Backup failed for '{$type}': " . $e->getMessage(), ['trace' => $e->getTraceAsString()]);
            return redirect()->back()->with('error', 'Terjadi kesalahan saat proses backup. Silakan coba lagi. Detail: ' . $e->getMessage());
        }
    }
}

app\Http\Controllers\Admin\AdminDashboardController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Karyawan;
use App\Models\Presensi;
use App\Models\Laporan;
use Carbon\Carbon;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Log;

class AdminDashboardController extends Controller
{
    public function index()
    {
        try {
            // Hitung jumlah total karyawan
            $jumlahKaryawan = Karyawan::count();
            
            // Data presensi hari ini dengan filter yang benar
            $hariIni = Carbon::now()->format('Y-m-d');
            $startOfDay = Carbon::now()->startOfDay()->timestamp * 1000;
            $endOfDay = Carbon::now()->endOfDay()->timestamp * 1000;
            
            $presensiHariIni = Presensi::where('tgl_presensi', '>=', new UTCDateTime($startOfDay))
                                      ->where('tgl_presensi', '<=', new UTCDateTime($endOfDay))
                                      ->whereNotNull('jam_in') // Hanya yang benar-benar hadir
                                      ->get();
            
            $hadirHariIni = $presensiHariIni->count();
            
            // Laporan yang belum ditinjau
            $laporanBelumDitinjau = Laporan::whereNull('status_admin')->count();

            // Data untuk chart rekap presensi bulanan
            $bulanIni = Carbon::now()->month;
            $tahunIni = Carbon::now()->year;
            $hariTerakhirBulan = Carbon::create($tahunIni, $bulanIni, 1)->daysInMonth;
            
            $rekapPresensiBulanan = Presensi::raw(function ($collection) use ($tahunIni, $bulanIni, $hariTerakhirBulan) {
                return $collection->aggregate([
                    [
                        '$match' => [
                            'tgl_presensi' => [
                                '$gte' => new UTCDateTime(Carbon::create($tahunIni, $bulanIni, 1)->startOfDay()->timestamp * 1000),
                                '$lte' => new UTCDateTime(Carbon::create($tahunIni, $bulanIni, $hariTerakhirBulan)->endOfDay()->timestamp * 1000)
                            ]
                        ]
                    ],
                    [
                        '$group' => [
                            '_id' => null,
                            'totalHadir' => ['$sum' => ['$cond' => [['$ne' => ['$jam_in', null]], 1, 0]]],
                            'totalTerlambat' => ['$sum' => ['$cond' => [['$eq' => ['$is_terlambat', true]], 1, 0]]],
                            'totalPulangAwal' => ['$sum' => ['$cond' => [['$eq' => ['$is_pulang_awal', true]], 1, 0]]]
                        ]
                    ]
                ]);
            })->first();

            return view('admin.dashboard', compact(
                'jumlahKaryawan',
                'hadirHariIni',
                'laporanBelumDitinjau',
                'rekapPresensiBulanan'
            ));

        } catch (\Exception $e) {
            Log::error('Error in AdminDashboardController: ' . $e->getMessage());
            
            // Fallback values if there's an error
            return view('admin.dashboard', [
                'jumlahKaryawan' => 0,
                'hadirHariIni' => 0,
                'laporanBelumDitinjau' => 0,
                'rekapPresensiBulanan' => (object)['totalHadir' => 0, 'totalTerlambat' => 0, 'totalPulangAwal' => 0]
            ]);
        }
    }
}

app\Http\Controllers\Admin\AdminFakultasController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Fakultas;
use Illuminate\Validation\Rule;

class AdminFakultasController extends Controller
{
    protected $daftarNamaFakultas = [
        'Fakultas Hukum (FH)',
        'Fakultas Ekonomika dan Bisnis (FEB)',
        'Fakultas Kedokteran (FK)',
        'Fakultas Teknik (FT)',
        'Fakultas Ilmu Sosial dan Ilmu Politik (FISIP)',
        'Fakultas Ilmu Budaya (FIB)',
        'Fakultas Peternakan dan Pertanian (FPP)',
        'Fakultas Sains dan Matematika (FSM)',
        'Fakultas Perikanan dan Ilmu Kelautan (FPIK)',
        'Fakultas Kesehatan Masyarakat (FKM)',
        'Fakultas Psikologi',
        'Sekolah Vokasi (SV)',
    ];

    // Data Program Studi Fakultas Teknik
    protected $daftarProdiTeknik = [
        ['nama_prodi' => 'Arsitektur', 'koordinat' => '-7.051548980978043, 110.43832160759905', 'radius' => '50'],
        ['nama_prodi' => 'Perencanaan Wilayah dan Kota', 'koordinat' => '-7.051357322625458, 110.4391262702633', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Elektro', 'koordinat' => '-7.049738031625554, 110.43994267975074', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Geodesi', 'koordinat' => '-7.051577851662326, 110.44042972256258', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Geologi', 'koordinat' => '-7.052262994626362, 110.4394890049726', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Industri', 'koordinat' => '-7.05107340508552, 110.44151837569481', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Kimia', 'koordinat' => '-7.052045739394591, 110.44117709441701', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Komputer', 'koordinat' => '-7.051106691509728, 110.44021151482586', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Lingkungan', 'koordinat' => '-7.050469281826524, 110.44026483963367', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Mesin', 'koordinat' => '-7.050159045754759, 110.44175646710545', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Perkapalan', 'koordinat' => '-7.050751018608915, 110.43993949004893', 'radius' => '50'],
        ['nama_prodi' => 'Teknik Sipil', 'koordinat' => '-7.052050709419995, 110.43906595798757', 'radius' => '50'],
    ];


    public function index()
    {
        $fakultasData = Fakultas::orderBy('nama', 'asc')->get();
        return view('admin.fakultas.index', compact('fakultasData'));
    }

    public function create()
    {
        $namaFakultasOptions = $this->daftarNamaFakultas;
        $prodiTeknikOptions = collect($this->daftarProdiTeknik)->sortBy('nama_prodi')->values()->all();
        return view('admin.fakultas.create', compact('namaFakultasOptions', 'prodiTeknikOptions'));
    }

    public function store(Request $request)
    {
        $namaProdiTeknikValues = collect($this->daftarProdiTeknik)->pluck('nama_prodi')->implode(',');

        $validatedData = $request->validate([
            'nama' => ['required', 'string', 'max:255', Rule::unique('fakultas', 'nama'), Rule::in($this->daftarNamaFakultas)],
            'tipe_fakultas' => 'required|in:Non-Teknik,Teknik',
            'koordinat_fakultas' => 'nullable|string|max:255',
            'radius_fakultas' => 'nullable|numeric|min:1',
            'program_studi' => 'nullable|array',
            'program_studi.*.nama_prodi' => 'required_with:program_studi|string|max:255',
            'detail_prodi' => 'nullable|array',
            'detail_prodi.*.nama_prodi' => ['required_if:tipe_fakultas,Teknik','nullable','string', Rule::in(explode(',', $namaProdiTeknikValues))],
            'detail_prodi.*.koordinat' => 'required_if:tipe_fakultas,Teknik|nullable|string|max:255',
            'detail_prodi.*.radius' => 'required_if:tipe_fakultas,Teknik|nullable|numeric|min:1',
        ]);

        $dataToCreate = [
            'nama' => $validatedData['nama'],
            'tipe_fakultas' => $validatedData['tipe_fakultas'],
        ];

        $defaultJenjang = ($validatedData['nama'] === 'Sekolah Vokasi (SV)') ? 'D4' : 'S1';

        if ($validatedData['tipe_fakultas'] === 'Non-Teknik') {
            $dataToCreate['koordinat_fakultas'] = $validatedData['koordinat_fakultas'] ?? null;
            $dataToCreate['radius_fakultas'] = isset($validatedData['radius_fakultas']) && is_numeric($validatedData['radius_fakultas']) ? $validatedData['radius_fakultas'] . ' meter' : null;
            
            $programStudiProcessed = [];
            if (isset($validatedData['program_studi']) && is_array($validatedData['program_studi'])) {
                foreach ($validatedData['program_studi'] as $prodi) {
                    if (is_array($prodi) && !empty(trim($prodi['nama_prodi'] ?? ''))) {
                        $programStudiProcessed[] = [
                            'jenjang' => $defaultJenjang,
                            'nama_prodi' => trim($prodi['nama_prodi'])
                        ];
                    }
                }
            }
            $dataToCreate['program_studi_json'] = !empty($programStudiProcessed) ? json_encode(array_values($programStudiProcessed)) : null;
            $dataToCreate['detail_prodi_json'] = null;
        } elseif ($validatedData['tipe_fakultas'] === 'Teknik') {
            $detailProdiProcessed = [];
            if (isset($validatedData['detail_prodi']) && is_array($validatedData['detail_prodi'])) {
                foreach ($validatedData['detail_prodi'] as $prodi) {
                    if (is_array($prodi) && !empty(trim($prodi['nama_prodi'] ?? ''))) {
                        // Saat CREATE, ambil koordinat & radius dari $daftarProdiTeknik berdasarkan nama_prodi yang dipilih
                        $selectedProdiData = collect($this->daftarProdiTeknik)->firstWhere('nama_prodi', $prodi['nama_prodi']);
                        $koordinatOtomatis = $selectedProdiData['koordinat'] ?? ($prodi['koordinat'] ?? null); // Fallback ke input jika tidak ada di master
                        $radiusOtomatis = $selectedProdiData['radius'] ?? ($prodi['radius'] ?? null); // Fallback ke input jika tidak ada di master

                        $detailProdiProcessed[] = [
                            'jenjang' => $defaultJenjang,
                            'nama_prodi' => trim($prodi['nama_prodi']),
                            'koordinat' => $koordinatOtomatis,
                            'radius' => isset($radiusOtomatis) && is_numeric($radiusOtomatis) ? $radiusOtomatis . ' meter' : null,
                        ];
                    }
                }
            }
            $dataToCreate['detail_prodi_json'] = !empty($detailProdiProcessed) ? json_encode(array_values($detailProdiProcessed)) : null;
            $dataToCreate['program_studi_json'] = null;
            $dataToCreate['koordinat_fakultas'] = null;
            $dataToCreate['radius_fakultas'] = null;
        }

        Fakultas::create($dataToCreate);

        return redirect()->route('admin.fakultas.index')
                         ->with('success', 'Data fakultas berhasil ditambahkan.');
    }

    public function edit(Fakultas $fakultas)
    {
        $namaFakultasOptions = $this->daftarNamaFakultas;
        $prodiTeknikOptions = collect($this->daftarProdiTeknik)->sortBy('nama_prodi')->values()->all();
        return view('admin.fakultas.edit', compact('fakultas', 'namaFakultasOptions', 'prodiTeknikOptions'));
    }

    public function update(Request $request, Fakultas $fakultas)
    {
        $namaProdiTeknikValues = collect($this->daftarProdiTeknik)->pluck('nama_prodi')->implode(',');

        $validatedData = $request->validate([
            'nama' => ['required', 'string', 'max:255', Rule::unique('fakultas', 'nama')->ignore($fakultas->_id, '_id'), Rule::in($this->daftarNamaFakultas)],
            'tipe_fakultas' => 'required|in:Non-Teknik,Teknik',
            'koordinat_fakultas' => 'nullable|string|max:255',
            'radius_fakultas' => 'nullable|numeric|min:1',
            'program_studi' => 'nullable|array',
            'program_studi.*.nama_prodi' => 'required_with:program_studi|string|max:255',
            'detail_prodi' => 'nullable|array',
            'detail_prodi.*.nama_prodi' => ['required_if:tipe_fakultas,Teknik','nullable','string', Rule::in(explode(',', $namaProdiTeknikValues))],
            'detail_prodi.*.koordinat' => 'required_if:tipe_fakultas,Teknik|nullable|string|max:255',
            'detail_prodi.*.radius' => 'required_if:tipe_fakultas,Teknik|nullable|numeric|min:1',
        ]);

        $dataToUpdate = [
            'nama' => $validatedData['nama'],
            'tipe_fakultas' => $validatedData['tipe_fakultas'],
        ];

        $defaultJenjang = ($validatedData['nama'] === 'Sekolah Vokasi (SV)') ? 'D4' : 'S1';

        if ($validatedData['tipe_fakultas'] === 'Non-Teknik') {
            $dataToUpdate['koordinat_fakultas'] = $validatedData['koordinat_fakultas'] ?? null;
            $dataToUpdate['radius_fakultas'] = isset($validatedData['radius_fakultas']) && is_numeric($validatedData['radius_fakultas']) ? $validatedData['radius_fakultas'] . ' meter' : null;
            $programStudiProcessed = [];
            if (isset($validatedData['program_studi']) && is_array($validatedData['program_studi'])) {
                foreach ($validatedData['program_studi'] as $prodi) {
                    if (is_array($prodi) && !empty(trim($prodi['nama_prodi'] ?? ''))) {
                        $programStudiProcessed[] = [
                            'jenjang' => $defaultJenjang,
                            'nama_prodi' => trim($prodi['nama_prodi'])
                        ];
                    }
                }
            }
            $dataToUpdate['program_studi_json'] = !empty($programStudiProcessed) ? json_encode(array_values($programStudiProcessed)) : null;
            $dataToUpdate['detail_prodi_json'] = null;
        } elseif ($validatedData['tipe_fakultas'] === 'Teknik') {
            $detailProdiProcessed = [];
            if (isset($validatedData['detail_prodi']) && is_array($validatedData['detail_prodi'])) {
                foreach ($validatedData['detail_prodi'] as $prodi) {
                    if (is_array($prodi) && !empty(trim($prodi['nama_prodi'] ?? ''))) {
                        // PERBAIKAN: Saat update, gunakan koordinat dan radius dari request (form)
                        // bukan dari $this->daftarProdiTeknik lagi, karena user mungkin mengubahnya di form
                        // (meskipun readonly, JS yang mengisinya dari data-attribute yang mungkin berbeda jika master list diubah)
                        // Namun, karena form FT sekarang dropdown untuk nama prodi dan koordinat/radius readonly diisi JS,
                        // maka nilai yang dikirim dari form ($prodi['koordinat'] dan $prodi['radius']) adalah yang terbaru dari JS.
                        $koordinatDariForm = $prodi['koordinat'] ?? null;
                        $radiusDariForm = $prodi['radius'] ?? null;
                        
                        $detailProdiProcessed[] = [
                            'jenjang' => $defaultJenjang,
                            'nama_prodi' => trim($prodi['nama_prodi']),
                            'koordinat' => $koordinatDariForm, // Gunakan data dari form
                            'radius' => isset($radiusDariForm) && is_numeric($radiusDariForm) ? $radiusDariForm . ' meter' : null, // Gunakan data dari form
                        ];
                    }
                }
            }
            $dataToUpdate['detail_prodi_json'] = !empty($detailProdiProcessed) ? json_encode(array_values($detailProdiProcessed)) : null;
            $dataToUpdate['program_studi_json'] = null;
            $dataToUpdate['koordinat_fakultas'] = null;
            $dataToUpdate['radius_fakultas'] = null;
        }

        $fakultas->update($dataToUpdate);

        return redirect()->route('admin.fakultas.index')
                         ->with('success', 'Data fakultas berhasil diperbarui.');
    }

    public function destroy(Fakultas $fakultas)
    {
        $fakultas->delete();
        return redirect()->route('admin.fakultas.index')
                         ->with('success', 'Data fakultas berhasil dihapus.');
    }

    public function getFakultasDetails(Request $request, $nama_fakultas)
    {
        $fakultas = Fakultas::where('nama', $nama_fakultas)->first();

        if (!$fakultas) {
            if ($nama_fakultas === 'Fakultas Teknik (FT)') {
                return response()->json([
                    'tipe_fakultas' => 'Teknik',
                    'program_studi' => collect($this->daftarProdiTeknik)->sortBy('nama_prodi')->values()->all(),
                ]);
            } else {
                $fakultasFromStatic = collect($this->getInitialFakultasData())->firstWhere('nama', $nama_fakultas);
                 if ($fakultasFromStatic) {
                     $prodiData = [];
                     if(isset($fakultasFromStatic['program_studi'])) {
                        foreach($fakultasFromStatic['program_studi'] as $ps) {
                            $prodiData[] = ['nama_prodi' => $ps['nama_prodi'], 'jenjang' => $ps['jenjang']];
                        }
                     }
                    return response()->json([
                        'tipe_fakultas' => $fakultasFromStatic['tipe_fakultas'] ?? 'Non-Teknik',
                        'program_studi' => $prodiData,
                        'koordinat_fakultas' => $fakultasFromStatic['koordinat'] ?? null,
                        'radius_fakultas' => isset($fakultasFromStatic['radius']) ? preg_replace('/[^0-9]/', '', $fakultasFromStatic['radius']) : null,
                    ]);
                }
                return response()->json(['error' => 'Data Fakultas tidak ditemukan dan tidak ada data statis.'], 404);
            }
        }

        $data = [
            'tipe_fakultas' => $fakultas->tipe_fakultas,
            'program_studi' => [],
            'koordinat_fakultas' => null,
            'radius_fakultas' => null,
            'detail_prodi_options' => []
        ];

        if ($fakultas->tipe_fakultas === 'Teknik') {
            $data['program_studi'] = $fakultas->detail_prodi; 
            $data['detail_prodi_options'] = collect($this->daftarProdiTeknik)->sortBy('nama_prodi')->values()->all();
        } else { 
            $data['program_studi'] = $fakultas->program_studi; 
            $data['koordinat_fakultas'] = $fakultas->koordinat_fakultas;
            $data['radius_fakultas'] = preg_replace('/[^0-9]/', '', $fakultas->radius_fakultas ?? '');
        }

        return response()->json($data);
    }
    
    private function getInitialFakultasData(){
        return [
             [
                'nama' => 'Fakultas Hukum (FH)',
                'tipe_fakultas' => 'Non-Teknik',
                'program_studi' => [['jenjang' => 'S1', 'nama_prodi' => 'Ilmu Hukum']],
                'koordinat' => '-7.051191, 110.436203',
                'radius' => '150 meter',
             ]
        ];
    }
    public function getProdiTeknikDataForJs() {
        return collect($this->daftarProdiTeknik)->sortBy('nama_prodi')->values()->all();
    }
}

app\Http\Controllers\Admin\AdminKaryawanController.php
<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Karyawan;
use App\Models\Fakultas;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Storage;
use App\Services\FaceRecognitionService;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Log;

class AdminKaryawanController extends Controller
{
    protected $faceRecognitionService;

    public function __construct(FaceRecognitionService $faceRecognitionService)
    {
        $this->faceRecognitionService = $faceRecognitionService;
    }

    public function index(Request $request)
    {
        $query = Karyawan::query();

        if ($request->filled('search')) {
            $search = $request->search;
            $query->where(function($q) use ($search) {
                $q->where('nama_lengkap', 'like', '%' . $search . '%')
                  ->orWhere('nik', 'like', '%' . $search . '%')
                  ->orWhere('jabatan', 'like', '%' . $search . '%');
            });
        }

        $sortBy = $request->get('sort_by', 'nama_lengkap');
        $sortOrder = $request->get('sort_order', 'asc');
        
        if (in_array($sortBy, ['nik', 'nama_lengkap', 'jabatan'])) {
            $query->orderBy($sortBy, $sortOrder);
        } else {
            $query->orderBy('nama_lengkap', 'asc');
        }

        $karyawans = $query->paginate(10)->appends($request->query());

        return view('admin.karyawan.index', compact('karyawans', 'sortBy', 'sortOrder'));
    }

    public function create()
    {
        $fakultasOptions = Fakultas::orderBy('nama')->pluck('nama', 'nama')->all();
        $jabatanOptions = [
            'Admin' => 'Admin',
            'Komandan' => 'Komandan',
            'Ketua Departemen' => 'Ketua Departemen',
            'Petugas Keamanan' => 'Petugas Keamanan',
        ];
        return view('admin.karyawan.create_step1', compact('fakultasOptions', 'jabatanOptions'));
    }

    public function storeStep1(Request $request)
    {
        $jabatan = $request->input('jabatan');

        $rules = [
            'nik' => 'required|string|unique:karyawans,nik',
            'nama_lengkap' => 'required|string|max:255',
            'jabatan' => 'required|string|in:Admin,Komandan,Ketua Departemen,Petugas Keamanan',
            'no_hp' => 'required|string|max:15',
            'password' => 'required|string|min:6|confirmed',
            'foto' => 'nullable|image|mimes:jpeg,png,jpg|max:2048',
        ];

        if ($jabatan === 'Komandan' || $jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $rules['fakultas_nama'] = 'required|string|exists:fakultas,nama';
        }
        if ($jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $rules['program_studi_nama'] = 'required|string|max:255';
        }
        if ($jabatan === 'Petugas Keamanan') {
            $rules['office_radius'] = 'required|numeric|min:1';
        }
        
        $request->validate($rules);

        $karyawanData = $request->except(['password_confirmation', '_token', 'foto']);
        $karyawanData['password'] = Hash::make($request->password);

        $karyawanData['is_admin'] = ($jabatan === 'Admin');
        $karyawanData['is_komandan'] = ($jabatan === 'Komandan');
        $karyawanData['is_ketua_departemen'] = ($jabatan === 'Ketua Departemen');
        
        $karyawanData['unit'] = null;
        $karyawanData['departemen'] = null;
        $karyawanData['office_location'] = null;
        $karyawanData['office_radius'] = null;

        if ($jabatan === 'Komandan' || $jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
             $karyawanData['unit'] = $request->fakultas_nama;
        }
        if ($jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $karyawanData['departemen'] = $request->program_studi_nama;
        }
        if ($jabatan === 'Petugas Keamanan') {
            $karyawanData['office_radius'] = (int)$request->office_radius;

            $fakultas = Fakultas::where('nama', $request->fakultas_nama)->first();
            $office_location_string = null;

            if ($fakultas) {
                if ($fakultas->tipe_fakultas === 'Teknik') {
                    $detailProdiArray = $fakultas->detail_prodi;
                    if (is_array($detailProdiArray)) {
                        foreach ($detailProdiArray as $prodi) {
                            if (isset($prodi['nama_prodi']) && $prodi['nama_prodi'] === $request->program_studi_nama && isset($prodi['koordinat'])) {
                                $office_location_string = $prodi['koordinat'];
                                break;
                            }
                        }
                    }
                } else { // Non-Teknik
                    $office_location_string = $fakultas->koordinat_fakultas;
                }
            }
            $karyawanData['office_location'] = $office_location_string;
        }

        $finalPath = null;
        if ($request->hasFile('foto')) {
            $filePath = $request->file('foto')->store('temp_uploads/karyawan_profile', 'public');
            if ($jabatan !== 'Petugas Keamanan') {
                $originalFile = new \Illuminate\Http\File(storage_path('app/public/' . $filePath));
                $newFileName = \Illuminate\Support\Str::random(40) . '.' . $originalFile->guessExtension();
                $finalPath = 'uploads/karyawan/' . $newFileName;
                Storage::disk('public')->move($filePath, $finalPath);
                $karyawanData['foto'] = $finalPath;
            } else { 
                $request->session()->put('karyawan_temp_foto_path', $filePath);
            }
        }

        if ($jabatan !== 'Petugas Keamanan') {
            try {
                Karyawan::create($karyawanData);
                return redirect()->route('admin.karyawan.index')->with('success', 'Karyawan (' . $jabatan . ') berhasil ditambahkan.');
            } catch (\Exception $e) {
                Log::error('Error creating user: ' . $e->getMessage());
                if (isset($finalPath) && Storage::disk('public')->exists($finalPath)) {
                    Storage::disk('public')->delete($finalPath);
                }
                return redirect()->back()->with('error', 'Gagal menambahkan karyawan: ' . $e->getMessage())->withInput();
            }
        } else {
            $request->session()->put('karyawan_temp_data', $karyawanData);
            return redirect()->route('admin.karyawan.face_registration');
        }
    }

    public function showFaceRegistration()
    {
        if (!session()->has('karyawan_temp_data')) {
            return redirect()->route('admin.karyawan.create')
                         ->with('error', 'Silakan isi data karyawan terlebih dahulu');
        }
        $tempData = session('karyawan_temp_data');
        if ($tempData['jabatan'] !== 'Petugas Keamanan') {
             return redirect()->route('admin.karyawan.index')->with('info', 'Hanya Petugas Keamanan yang memerlukan registrasi wajah.');
        }
        return view('admin.karyawan.create_step2');
    }

    public function completeRegistration(Request $request)
    {
        // Validasi sekarang untuk gambar base64, bukan deskriptor
        $request->validate([
            'face_image' => 'required|string',
        ]);

        $karyawanData = session('karyawan_temp_data');
        $tempFotoPath = session('karyawan_temp_foto_path');

        if (!$karyawanData) {
            return redirect()->route('admin.karyawan.create')
                             ->with('error', 'Sesi pendaftaran telah kadaluarsa atau data tidak lengkap.');
        }
        
        if ($karyawanData['jabatan'] !== 'Petugas Keamanan') {
            session()->forget(['karyawan_temp_data', 'karyawan_temp_foto_path']);
            Log::warning('Attempted face registration for non-security role in completeRegistration.');
            return redirect()->route('admin.karyawan.index')->with('info', 'User sudah terdaftar tanpa wajah.');
        }

        try {
            // Hasilkan deskriptor di backend dari gambar yang dikirim
            $descriptor = $this->faceRecognitionService->generateDescriptorFromImage($request->face_image);

            if (!$descriptor) {
                return redirect()->back()->with('error', 'Gagal mendeteksi wajah pada gambar. Silakan coba lagi dengan pencahayaan yang lebih baik dan posisi wajah lurus.')->withInput();
            }

            $faceEmbeddingData = [
                'embedding' => $descriptor,
                'version' => 'v2_py', // Tandai versi baru dari python
                'created_at' => now()->toDateTimeString()
            ];

            $karyawan = new Karyawan();
            $karyawan->fill($karyawanData);
            $karyawan->face_embedding = $faceEmbeddingData;

            if ($tempFotoPath && Storage::disk('public')->exists($tempFotoPath)) {
                $originalFile = new \Illuminate\Http\File(storage_path('app/public/' . $tempFotoPath));
                $newFileName = Str::random(40) . '.' . $originalFile->guessExtension();
                $finalPath = 'uploads/karyawan/' . $newFileName;
                Storage::disk('public')->move($tempFotoPath, $finalPath);
                $karyawan->foto = $finalPath;
            }
            
            $karyawan->save();
            
            session()->forget(['karyawan_temp_data', 'karyawan_temp_foto_path']);
            return redirect()->route('admin.karyawan.index')
                             ->with('success', 'Karyawan berhasil didaftarkan dengan data wajah dan lokasi kantor.');
        } catch (\Exception $e) {
            Log::error('Error completing registration: ' . $e->getMessage() . ' - Trace: ' . $e->getTraceAsString());
            session()->forget(['karyawan_temp_data', 'karyawan_temp_foto_path']);
            if (isset($finalPath) && Storage::disk('public')->exists($finalPath)) {
                Storage::disk('public')->delete($finalPath);
            }
            return redirect()->back()
                             ->with('error', 'Gagal memproses data wajah atau menyimpan karyawan: ' . $e->getMessage());
        }
    }

    
    public function show($id)
    {
        $karyawan = Karyawan::findOrFail($id);
        return view('admin.karyawan.show', compact('karyawan'));
    }

    public function edit($id)
    {
        $karyawan = Karyawan::findOrFail($id);
        $fakultasOptions = Fakultas::orderBy('nama')->pluck('nama', 'nama')->all();
        $jabatanOptions = [
            'Admin' => 'Admin',
            'Komandan' => 'Komandan',
            'Ketua Departemen' => 'Ketua Departemen',
            'Petugas Keamanan' => 'Petugas Keamanan',
        ];

        $programStudiOptions = [];
        $selectedFakultas = null;
        if ($karyawan->unit) {
            $selectedFakultas = Fakultas::where('nama', $karyawan->unit)->first();
            if ($selectedFakultas) {
                 if ($selectedFakultas->tipe_fakultas === 'Teknik') {
                    $prodiTeknikData = app(\App\Http\Controllers\Admin\AdminFakultasController::class)->getProdiTeknikDataForJs();
                    foreach($prodiTeknikData as $prodi) {
                        $programStudiOptions[] = ['nama_prodi' => $prodi['nama_prodi'], 'radius' => $prodi['radius'] ?? null, 'koordinat' => $prodi['koordinat'] ?? null];
                    }
                } else {
                    $prodiNonTeknik = $selectedFakultas->program_studi;
                    if (is_array($prodiNonTeknik)) {
                        foreach($prodiNonTeknik as $prodi) {
                            $programStudiOptions[] = ['nama_prodi' => $prodi['nama_prodi']];
                        }
                    }
                }
            }
        }

        return view('admin.karyawan.edit', compact('karyawan', 'fakultasOptions', 'jabatanOptions', 'programStudiOptions', 'selectedFakultas'));
    }

    public function update(Request $request, $id)
    {
        $karyawan = Karyawan::findOrFail($id);
        $jabatan = $request->input('jabatan');

        $rules = [
            'nik' => 'required|string|unique:karyawans,nik,' . $karyawan->_id . ',_id',
            'nama_lengkap' => 'required|string|max:255',
            'jabatan' => 'required|string|in:Admin,Komandan,Ketua Departemen,Petugas Keamanan',
            'no_hp' => 'required|string|max:15',
            'password' => 'nullable|string|min:6|confirmed',
            'foto' => 'nullable|image|mimes:jpeg,png,jpg|max:2048',
        ];

        if ($jabatan === 'Komandan' || $jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $rules['fakultas_nama'] = 'required|string|exists:fakultas,nama';
        }
        if ($jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $rules['program_studi_nama'] = 'required|string|max:255';
        }
        if ($jabatan === 'Petugas Keamanan') {
            $rules['office_radius'] = 'required|numeric|min:1';
        }

        $request->validate($rules);
        $data = $request->only(['nik', 'nama_lengkap', 'jabatan', 'no_hp']);

        $data['is_admin'] = ($jabatan === 'Admin');
        $data['is_komandan'] = ($jabatan === 'Komandan');
        $data['is_ketua_departemen'] = ($jabatan === 'Ketua Departemen');
        
        $data['unit'] = null;
        $data['departemen'] = null;
        $data['office_location'] = null;
        $data['office_radius'] = null;

        if ($jabatan === 'Komandan' || $jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
             $data['unit'] = $request->fakultas_nama;
        }
        if ($jabatan === 'Ketua Departemen' || $jabatan === 'Petugas Keamanan') {
            $data['departemen'] = $request->program_studi_nama;
        }
        if ($jabatan === 'Petugas Keamanan') {
            $data['office_radius'] = (int)$request->office_radius;

            $fakultas = Fakultas::where('nama', $request->fakultas_nama)->firstOrFail();
            $office_location_string = null;

            if ($fakultas->tipe_fakultas === 'Teknik') {
                $detailProdiArray = $fakultas->detail_prodi;
                if (is_array($detailProdiArray)) {
                    foreach ($detailProdiArray as $prodi) {
                        if (isset($prodi['nama_prodi']) && $prodi['nama_prodi'] === $request->program_studi_nama && isset($prodi['koordinat'])) {
                            $office_location_string = $prodi['koordinat'];
                            break;
                        }
                    }
                }
            } else {
                $office_location_string = $fakultas->koordinat_fakultas;
            }
            $data['office_location'] = $office_location_string;
        }

        if ($request->filled('password')) {
            $data['password'] = Hash::make($request->password);
        }

        if ($request->hasFile('foto')) {
            if ($karyawan->foto && Storage::disk('public')->exists($karyawan->foto)) {
                Storage::disk('public')->delete($karyawan->foto);
            }
            $filePath = $request->file('foto')->store('uploads/karyawan', 'public');
            $data['foto'] = $filePath;
        }

        if ($karyawan->jabatan === 'Petugas Keamanan' && $jabatan !== 'Petugas Keamanan') {
            $data['face_embedding'] = null;
        }

        $karyawan->update($data);
        return redirect()->route('admin.karyawan.index')->with('success', 'Data karyawan berhasil diperbarui.');
    }

    public function destroy($id)
    {
        $karyawan = Karyawan::findOrFail($id);
        if ($karyawan->foto && Storage::disk('public')->exists($karyawan->foto)) {
            Storage::disk('public')->delete($karyawan->foto);
        }
        $karyawan->delete();
        return redirect()->route('admin.karyawan.index')->with('success', 'Karyawan berhasil dihapus.');
    }

    public function resetFaceData(Request $request, $id)
    {
        $karyawan = Karyawan::findOrFail($id);
        $karyawan->face_embedding = null;
        $karyawan->save();
        return redirect()->back()->with('success', 'Data wajah karyawan berhasil direset. Karyawan perlu registrasi wajah ulang jika diperlukan.');
    }

    public function resetOfficeLocation(Request $request, $id)
    {
       $karyawan = Karyawan::findOrFail($id);
       $karyawan->office_location = null;
       $karyawan->office_radius = null;
       $karyawan->save();
       return redirect()->back()->with('success', 'Lokasi kantor karyawan berhasil direset.');
     }
}

app\Http\Controllers\Admin\AdminLaporanController.php
<?php
//app\Http\Controllers\Admin\AdminLaporanController.php
namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Laporan;
use App\Models\Karyawan;
use Carbon\Carbon;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;

class AdminLaporanController extends Controller
{
    /**
     * Menampilkan daftar semua laporan.
     */
    public function index(Request $request)
    {
        $query = Laporan::query()->with('karyawan');

        // Filter berdasarkan rentang tanggal
        if ($request->filled('tanggal_mulai') && $request->filled('tanggal_akhir')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->whereBetween('tanggal', [
                new UTCDateTime($tanggalMulai->timestamp * 1000),
                new UTCDateTime($tanggalAkhir->timestamp * 1000)
            ]);
        } elseif ($request->filled('tanggal_mulai')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $query->where('tanggal', '>=', new UTCDateTime($tanggalMulai->timestamp * 1000));
        } elseif ($request->filled('tanggal_akhir')) {
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->where('tanggal', '<=', new UTCDateTime($tanggalAkhir->timestamp * 1000));
        }

        // Filter berdasarkan NIK Karyawan
        if ($request->filled('nik_karyawan')) {
            $query->where('nik', 'like', '%' . $request->nik_karyawan . '%');
        }
        
        // Filter berdasarkan Nama Karyawan secara case-insensitive
        if ($request->filled('nama_karyawan')) {
            // Pertama, cari NIK dari karyawan yang namanya cocok
            $niksFromName = Karyawan::where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i")
                                      ->pluck('nik')
                                      ->toArray();

            // Jika tidak ada karyawan yang ditemukan, pastikan query tidak mengembalikan hasil
            if (empty($niksFromName)) {
                $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
            } else {
                // Filter laporan berdasarkan NIK yang ditemukan
                $query->whereIn('nik', $niksFromName);
            }
        }

        // Filter berdasarkan Jenis Laporan
        if ($request->filled('jenis_laporan')) {
            $query->where('jenis_laporan', $request->jenis_laporan);
        }

        // Filter berdasarkan Status Admin
        if ($request->filled('status_admin')) {
            if ($request->status_admin == 'belum_ditinjau') {
                $query->whereNull('status_admin');
            } else {
                $query->where('status_admin', $request->status_admin);
            }
        }

        $laporans = $query->orderBy('created_at', 'desc')->paginate(15);
        $karyawans = Karyawan::orderBy('nama_lengkap')->get(['nik', 'nama_lengkap']); // Untuk dropdown filter

        return view('admin.laporan.index', compact('laporans', 'karyawans'));
    }

    /**
     * Menampilkan detail laporan tertentu.
     */
    public function show($id)
    {
        $laporan = Laporan::with('karyawan')->findOrFail($id);
        return view('admin.laporan.show', compact('laporan'));
    }

    /**
     * Memperbarui status laporan oleh admin.
     */
    public function updateStatus(Request $request, $id)
    {
        $request->validate([
            'status_admin' => 'required|string|in:Diterima,Ditolak',
            'catatan_admin' => 'nullable|string|max:1000',
        ]);

        $laporan = Laporan::findOrFail($id);
        $laporan->status_admin = $request->status_admin;
        $laporan->catatan_admin = $request->catatan_admin;
        $laporan->admin_peninjau_id = auth()->guard('karyawan')->id();
        $laporan->tanggal_peninjauan_admin = new UTCDateTime(now()->timestamp * 1000);
        $laporan->save();

        return redirect()->route('admin.laporan.show', $id)->with('success', 'Status laporan berhasil diperbarui.');
    }

    /**
     * NEW: Menghapus laporan dan file-file terkait.
     *
     * @param  string  $id
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy($id)
    {
        try {
            $laporan = Laporan::findOrFail($id);
            
            // Hapus file foto utama jika ada
            if ($laporan->foto) {
                $this->deleteFileIfExists($laporan->foto);
            }
            
            // Hapus file foto verifikasi wajah jika ada
            if ($laporan->face_verification_image) {
                $this->deleteFileIfExists($laporan->face_verification_image);
            }
            
            // Hapus data laporan dari database
            $laporan->delete();
            
            Log::info('Laporan berhasil dihapus', [
                'laporan_id' => $id,
                'nik' => $laporan->nik,
                'admin_id' => auth()->guard('karyawan')->id()
            ]);
            
            return redirect()->route('admin.laporan.index')
                           ->with('success', 'Laporan berhasil dihapus beserta file-file terkait.');
                           
        } catch (\Exception $e) {
            Log::error('Error menghapus laporan: ' . $e->getMessage(), [
                'laporan_id' => $id,
                'admin_id' => auth()->guard('karyawan')->id()
            ]);
            
            return redirect()->route('admin.laporan.index')
                           ->with('error', 'Gagal menghapus laporan: ' . $e->getMessage());
        }
    }

    /**
     * Helper method untuk menghapus file dari storage
     *
     * @param  string  $filePath
     * @return void
     */
    private function deleteFileIfExists($filePath)
    {
        if ($filePath && Storage::disk('public')->exists($filePath)) {
            Storage::disk('public')->delete($filePath);
            Log::info('File berhasil dihapus: ' . $filePath);
        }
    }
}

app\Http\Controllers\Admin\AdminPatroliController.php
<?php
// File: app/Http/Controllers/Admin/AdminPatroliController.php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\Karyawan;
use App\Models\Patrol;
use App\Models\PatrolPoint;
use Illuminate\Http\Request;
use Carbon\Carbon;
use Illuminate\Support\Facades\Log;
use MongoDB\BSON\UTCDateTime;

class AdminPatroliController extends Controller
{
    /**
     * Display a listing of the patrol records.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\View\View
     */
    public function index(Request $request)
    {
        $query = Patrol::with('karyawan')
                       ->where('status', 'selesai');

        if ($request->filled('nik_karyawan')) {
            $query->where('karyawan_nik', 'like', '%' . $request->nik_karyawan . '%');
        }

        if ($request->filled('nama_karyawan')) {
            $niksFromName = Karyawan::where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i")
                                      ->pluck('nik')
                                      ->toArray();
            
            if (empty($niksFromName)) {
                $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
            } else {
                $query->whereIn('karyawan_nik', $niksFromName);
            }
        }

        if ($request->filled('tanggal_mulai')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $query->where('start_time', '>=', new UTCDateTime($tanggalMulai->timestamp * 1000));
        }

        if ($request->filled('tanggal_akhir')) {
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->where('start_time', '<=', new UTCDateTime($tanggalAkhir->timestamp * 1000));
        }

        $patrols = $query->orderBy('start_time', 'desc')->paginate(15);
        $karyawans = Karyawan::orderBy('nama_lengkap')->get(['nik', 'nama_lengkap']);

        return view('admin.patroli.index', compact('patrols', 'karyawans'));
    }

    /**
     * Display the specified patrol record.
     * MODIFIED: Eager load karyawan and pass office location/radius to view.
     */
    public function show($patrolId)
    {
        // --- PERBAIKAN: Menggunakan with() untuk eager loading ---
        $patrol = Patrol::with(['karyawan', 'points'])->find($patrolId);

        if (!$patrol) {
            return redirect()->route('admin.patroli.index')->with('error', 'Data patroli tidak ditemukan.');
        }

        $pathForMap = collect($patrol->path)->map(function ($point) {
            if (is_array($point) && count($point) >= 2) {
                return [$point[1], $point[0]];
            }
            return null; 
        })->filter()->toArray();

        // --- PERBAIKAN: Mengambil data lokasi dan radius dari relasi karyawan ---
        $officeLocation = $patrol->karyawan->office_location ?? null;
        $officeRadius = $patrol->karyawan->office_radius ?? null;

        return view('admin.patroli.show', compact('patrol', 'pathForMap', 'officeLocation', 'officeRadius'));
    }

    /**
     * Remove the specified patrol record from storage.
     *
     * @param  string  $patrolId
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy($patrolId)
    {
        try {
            $patrol = Patrol::findOrFail($patrolId);
            $patrol->delete();

            return redirect()->route('admin.patroli.index')->with('success', 'Data patroli berhasil dihapus.');
        } catch (\Exception $e) {
            Log::error('Error deleting patrol: ' . $e->getMessage());
            return redirect()->route('admin.patroli.index')->with('error', 'Gagal menghapus data patroli.');
        }
    }
}

app\Http\Controllers\Admin\AdminPresensiController.php
<?php
// File: app/Http/Controllers/Admin/AdminPresensiController.php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Presensi;
use App\Models\Karyawan;
use Carbon\Carbon;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Log;

class AdminPresensiController extends Controller
{
    /**
     * Menampilkan halaman rekapitulasi presensi utama.
     */
    public function rekapitulasi(Request $request)
    {
        $bulanIni = $request->input('bulan', date('m'));
        $tahunIni = $request->input('tahun', date('Y'));
        $searchNik = $request->input('nik');
        $searchNama = $request->input('nama');

        $query = Presensi::query();

        // Filter berdasarkan bulan dan tahun
        $startDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->endOfMonth();

        $query->where('tgl_presensi', '>=', new UTCDateTime($startDate->timestamp * 1000))
              ->where('tgl_presensi', '<=', new UTCDateTime($endDate->timestamp * 1000));

        if ($searchNama) {
            $niksFromName = Karyawan::where('nama_lengkap', 'regexp', "/.*$searchNama.*/i")
                                    ->pluck('nik')
                                    ->toArray();
            
            if (empty($niksFromName)) {
                $query->where('_id', 'no-results-found');
            } else {
                $query->whereIn('nik', $niksFromName);
            }
        }

        if ($searchNik) {
            $query->where('nik', 'regexp', "/.*$searchNik.*/i");
        }
        
        $presensiData = $query->with('karyawan')->orderBy('tgl_presensi', 'desc')->paginate(15);

        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('admin.presensi.rekapitulasi', compact('presensiData', 'bulanIni', 'tahunIni', 'namaBulan', 'searchNik', 'searchNama'));
    }

    /**
     * Menampilkan laporan harian presensi.
     */
    public function laporanHarian(Request $request)
    {
        $tanggal = $request->input('tanggal', date('Y-m-d'));
        
        $presensiHarian = Presensi::where('tgl_presensi', '>=', new UTCDateTime(strtotime($tanggal . " 00:00:00") * 1000))
                                    ->where('tgl_presensi', '<=', new UTCDateTime(strtotime($tanggal . " 23:59:59") * 1000))
                                    ->with('karyawan')
                                    ->orderBy('jam_in', 'asc')
                                    ->get();

        return view('admin.presensi.harian', compact('presensiHarian', 'tanggal'));
    }

    /**
     * Menampilkan detail presensi untuk karyawan tertentu.
     */
    public function detailKaryawan(Request $request, $nik)
    {
        $karyawan = Karyawan::where('nik', $nik)->firstOrFail();
        
        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));

        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();

        $historiPresensi = Presensi::where('nik', $nik)
                                    ->where('tgl_presensi', '>=', new UTCDateTime($startDate->timestamp * 1000))
                                    ->where('tgl_presensi', '<=', new UTCDateTime($endDate->timestamp * 1000))
                                    ->orderBy('tgl_presensi', 'asc')
                                    ->get();
        
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('admin.presensi.detail_karyawan', compact('karyawan', 'historiPresensi', 'bulan', 'tahun', 'namaBulan'));
    }

    /**
     * Menampilkan form untuk edit data presensi.
     */
    public function editPresensi($id)
    {
        $presensi = Presensi::with('karyawan')->findOrFail($id);
        return view('admin.presensi.edit', compact('presensi'));
    }

    /**
     * Memperbarui data presensi.
     */
    public function updatePresensi(Request $request, $id)
    {
        $presensi = Presensi::findOrFail($id);

        // --- PERBAIKAN ---
        // Menghapus aturan 'after_or_equal:jam_in_edit' untuk memperbolehkan input shift malam.
        $validator = Validator::make($request->all(), [
            'tgl_presensi_edit' => 'required|date',
            'jam_in_edit' => 'nullable|date_format:H:i:s',
            'jam_out_edit' => 'nullable|date_format:H:i:s',
        ]);
        // --- AKHIR PERBAIKAN ---

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }

        try {
            $original_jam_in = $presensi->jam_in;
            $original_jam_out = $presensi->jam_out;

            $updateData = [
                'tgl_presensi' => new UTCDateTime(Carbon::parse($request->tgl_presensi_edit)->startOfDay()->timestamp * 1000),
                'jam_in' => $request->jam_in_edit ?: null,
                'jam_out' => $request->jam_out_edit ?: null,
            ];

            if (is_null($original_jam_in) && !empty($request->jam_in_edit)) {
                $updateData['foto_in'] = 'admin';
                $updateData['lokasi_in'] = 'admin';
            }

            if (is_null($original_jam_out) && !empty($request->jam_out_edit)) {
                $updateData['foto_out'] = 'admin';
                $updateData['lokasi_out'] = 'admin';
            }

            $presensi->update($updateData);

            return redirect()->route('admin.presensi.rekapitulasi')->with('success', 'Data presensi berhasil diperbarui.');

        } catch (\Exception $e) {
            Log::error('Gagal memperbarui data presensi: ' . $e->getMessage(), ['trace' => $e->getTraceAsString()]);
            return redirect()->back()->with('error', 'Gagal memperbarui data presensi: ' . $e->getMessage())->withInput();
        }
    }

    /**
     * Mereset data presensi masuk.
     */
    public function resetMasuk($id)
    {
        try {
            $presensi = Presensi::findOrFail($id);
            $presensi->update([
                'jam_in' => null,
                'foto_in' => null,
                'lokasi_in' => null,
            ]);
            return redirect()->back()->with('success', 'Data presensi masuk berhasil direset.');
        } catch (\Exception $e) {
            Log::error('Gagal reset presensi masuk: ' . $e->getMessage());
            return redirect()->back()->with('error', 'Gagal mereset data presensi masuk.');
        }
    }

    /**
     * Mereset data presensi pulang.
     */
    public function resetPulang($id)
    {
        try {
            $presensi = Presensi::findOrFail($id);
            $presensi->update([
                'jam_out' => null,
                'foto_out' => null,
                'lokasi_out' => null,
            ]);
            return redirect()->back()->with('success', 'Data presensi pulang berhasil direset.');
        } catch (\Exception $e) {
            Log::error('Gagal reset presensi pulang: ' . $e->getMessage());
            return redirect()->back()->with('error', 'Gagal mereset data presensi pulang.');
        }
    }

    /**
     * Menghapus data presensi.
     */
    public function destroy($id)
    {
        try {
            $presensi = Presensi::findOrFail($id);
            $presensi->delete();
            return redirect()->back()->with('success', 'Data presensi berhasil dihapus.');
        } catch (\Exception $e) {
            Log::error('Gagal hapus presensi: ' . $e->getMessage());
            return redirect()->back()->with('error', 'Gagal menghapus data presensi.');
        }
    }
}


app\Http\Controllers\KetuaDepartemen\KetuaDepartemenDashboardController.php
<?php
// File: app/Http/Controllers/KetuaDepartemen/KetuaDepartemenDashboardController.php

namespace App\Http\Controllers\KetuaDepartemen;

use App\Http\Controllers\Controller;
use App\Http\Controllers\Komandan\KomandanJadwalShiftController;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Karyawan;
use App\Models\Presensi;
use App\Models\Laporan;
use App\Models\Patrol;
use App\Models\PatrolPoint;
use App\Models\JadwalShift;
use MongoDB\BSON\UTCDateTime;
use Carbon\Carbon;
use Carbon\CarbonPeriod;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Log;

class KetuaDepartemenDashboardController extends Controller
{
    /**
     * Get base query for employees under the Head of Department's supervision.
     */
    private function getScopedKaryawanQuery()
    {
        $ketua = Auth::guard('karyawan')->user();
        return Karyawan::where('unit', $ketua->unit)
                        ->where('departemen', $ketua->departemen)
                        ->where('jabatan', 'Petugas Keamanan');
    }

    /**
     * Display the main dashboard for the Head of Department.
     */
    public function index()
    {
        $ketua = Auth::guard('karyawan')->user();
        $fakultas = $ketua->unit;
        $departemen = $ketua->departemen;

        $petugasNiks = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();

        $jumlahPetugas = count($petugasNiks);
        
        $tglHariIniStart = new UTCDateTime(Carbon::today()->startOfDay()->timestamp * 1000);
        $tglHariIniEnd = new UTCDateTime(Carbon::today()->endOfDay()->timestamp * 1000);
        $hadirHariIni = !empty($petugasNiks) ? Presensi::whereIn('nik', $petugasNiks)->whereBetween('tgl_presensi', [$tglHariIniStart, $tglHariIniEnd])->count() : 0;

        $laporanBelumDitinjau = !empty($petugasNiks) ? Laporan::whereIn('nik', $petugasNiks)->whereNull('status_admin')->count() : 0;

        $startOfMonth = new UTCDateTime(Carbon::now()->startOfMonth()->startOfDay()->utc()->getTimestamp() * 1000);
        $endOfMonth = new UTCDateTime(Carbon::now()->endOfMonth()->endOfDay()->utc()->getTimestamp() * 1000);
        
        $totalLaporanBulanIni = !empty($petugasNiks) ? Laporan::whereIn('nik', $petugasNiks)->whereBetween('created_at', [$startOfMonth, $endOfMonth])->count() : 0;

        $totalPatroliBulanIni = !empty($petugasNiks) ? Patrol::whereIn('karyawan_nik', $petugasNiks)->where('status', 'selesai')->whereBetween('start_time', [$startOfMonth, $endOfMonth])->count() : 0;

        $rekapPresensiBulanan = null;
        if (!empty($petugasNiks)) {
            $rekapPresensiBulanan = Presensi::raw(function ($collection) use ($petugasNiks, $startOfMonth, $endOfMonth) {
                return $collection->aggregate([
                    ['$match' => ['nik' => ['$in' => $petugasNiks], 'tgl_presensi' => ['$gte' => $startOfMonth, '$lte' => $endOfMonth]]],
                    ['$group' => ['_id' => null, 'totalHadir' => ['$sum' => ['$cond' => [['$ne' => ['$jam_in', null]], 1, 0]]]]]
                ]);
            })->first();
        }

        return view('ketua-departemen.dashboard', compact(
            'fakultas', 'departemen', 'jumlahPetugas', 'hadirHariIni', 'laporanBelumDitinjau',
            'totalLaporanBulanIni', 'totalPatroliBulanIni', 'rekapPresensiBulanan'
        ));
    }
    
    /**
     * Display list of employees under supervision. (VIEW ONLY)
     */
    public function dataKaryawan(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        $fakultas = $ketua->unit;
        $departemen = $ketua->departemen;
        
        $query = $this->getScopedKaryawanQuery();

        if ($request->filled('search')) {
            $searchTerm = $request->search;
            $query->where(function ($q) use ($searchTerm) {
                $q->where('nama_lengkap', 'regexp', "/.*$searchTerm.*/i")
                    ->orWhere('nik', 'like', '%' . $searchTerm . '%');
            });
        }
        $karyawans = $query->orderBy('nama_lengkap')->paginate(10);
        
        return view('ketua-departemen.karyawan.index', compact('karyawans', 'fakultas', 'departemen'));
    }
    
    /**
     * Display attendance recapitulation. (VIEW ONLY)
     */
    public function rekapPresensi(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        $fakultas = $ketua->unit;
        $departemen = $ketua->departemen;

        $bulanIni = $request->input('bulan', date('m'));
        $tahunIni = $request->input('tahun', date('Y'));
        $searchNik = $request->input('nik');
        $searchNama = $request->input('nama');

        $karyawanQuery = $this->getScopedKaryawanQuery();
        if ($searchNik) {
            $karyawanQuery->where('nik', 'like', '%' . $searchNik . '%');
        }
        if ($searchNama) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*$searchNama.*/i");
        }
        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();

        $query = Presensi::query()->with('karyawan');
        
        if (empty($petugasNiksToSearch) && ($searchNik || $searchNama)) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('nik', $petugasNiksToSearch);
        }
            
        $startDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->endOfMonth();
        $query->whereBetween('tgl_presensi', [new UTCDateTime($startDate->timestamp * 1000), new UTCDateTime($endDate->timestamp * 1000)]);

        $presensiData = $query->orderBy('tgl_presensi', 'desc')->paginate(15);
        
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('ketua-departemen.presensi.rekapitulasi', compact('presensiData', 'bulanIni', 'tahunIni', 'namaBulan', 'fakultas', 'departemen', 'searchNik', 'searchNama'));
    }

    /**
     * Display daily attendance report. (VIEW ONLY)
     */
    public function laporanHarianPresensi(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        $fakultas = $ketua->unit;
        $departemen = $ketua->departemen;
        $tanggal = $request->input('tanggal', date('Y-m-d'));

        $petugasNiks = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();

        $presensiHarian = collect();
        if (!empty($petugasNiks)) {
            $tglStart = new UTCDateTime(Carbon::parse($tanggal)->startOfDay()->timestamp * 1000);
            $tglEnd = new UTCDateTime(Carbon::parse($tanggal)->endOfDay()->timestamp * 1000);
            $presensiHarian = Presensi::whereIn('nik', $petugasNiks)
                ->whereBetween('tgl_presensi', [$tglStart, $tglEnd])
                ->with('karyawan')->orderBy('jam_in', 'asc')->get();
        }

        return view('ketua-departemen.presensi.harian', compact('presensiHarian', 'tanggal', 'fakultas', 'departemen'));
    }
    
    /**
     * Display attendance detail for a specific employee. (VIEW ONLY)
     */
    public function detailPresensiKaryawan(Request $request, $nik)
    {
        $ketua = Auth::guard('karyawan')->user();
        $fakultas = $ketua->unit;
        $departemen = $ketua->departemen;

        $karyawan = $this->getScopedKaryawanQuery()->where('nik', $nik)->firstOrFail();
        
        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));
        
        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();
        
        $historiPresensi = Presensi::where('nik', $nik)
            ->whereBetween('tgl_presensi', [new UTCDateTime($startDate->timestamp * 1000), new UTCDateTime($endDate->timestamp * 1000)])
            ->orderBy('tgl_presensi', 'asc')->get();
            
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('ketua-departemen.presensi.detail_karyawan', compact('karyawan', 'historiPresensi', 'bulan', 'tahun', 'namaBulan', 'fakultas', 'departemen'));
    }
    
    public function laporanKaryawan(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();

        $karyawanQuery = $this->getScopedKaryawanQuery();
        if ($request->filled('nik_karyawan')) {
            $karyawanQuery->where('nik', 'like', '%' . $request->nik_karyawan . '%');
        }
        if ($request->filled('nama_karyawan')) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i");
        }
        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();

        $query = Laporan::with('karyawan');
        if (empty($petugasNiksToSearch) && ($request->filled('nik_karyawan') || $request->filled('nama_karyawan'))) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('nik', $petugasNiksToSearch);
        }

        if ($request->filled('tanggal_mulai') && $request->filled('tanggal_akhir')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->whereBetween('created_at', [new UTCDateTime($tanggalMulai->timestamp * 1000), new UTCDateTime($tanggalAkhir->timestamp * 1000)]);
        }
        
        if ($request->filled('jenis_laporan')) $query->where('jenis_laporan', $request->jenis_laporan);
        
        if ($request->filled('status_laporan')) {
            if ($request->status_laporan == 'belum_ditinjau') $query->whereNull('status_admin');
            else $query->where('status_admin', $request->status_laporan);
        }

        $laporans = $query->orderBy('created_at', 'desc')->paginate(15);
        $petugasFakultas = $this->getScopedKaryawanQuery()->get(['nik', 'nama_lengkap']);

        return view('ketua-departemen.laporan.index', [
            'laporans' => $laporans,
            'petugasFakultas' => $petugasFakultas,
            'fakultas' => $ketua->unit,
            'departemen' => $ketua->departemen
        ]);
    }

    public function showLaporanKaryawan($id)
    {
        $ketua = Auth::guard('karyawan')->user();
        $laporan = Laporan::with('karyawan')->findOrFail($id);

        if (!$laporan->karyawan || $laporan->karyawan->unit !== $ketua->unit || $laporan->karyawan->departemen !== $ketua->departemen) {
            abort(403, 'Anda tidak berhak mengakses laporan ini.');
        }

        return view('ketua-departemen.laporan.show', ['laporan' => $laporan, 'fakultas' => $ketua->unit, 'departemen' => $ketua->departemen]);
    }
    
    public function updateStatusLaporan(Request $request, $id)
    {
        $ketua = Auth::guard('karyawan')->user();
        $laporan = Laporan::with('karyawan')->findOrFail($id);
        
        if (!$laporan->karyawan || $laporan->karyawan->unit !== $ketua->unit || $laporan->karyawan->departemen !== $ketua->departemen) {
            abort(403, 'Anda tidak berhak mengubah status laporan ini.');
        }
        
        $request->validate([
            'status_admin' => 'required|string|in:Diterima,Ditolak',
            'catatan_admin' => 'nullable|string|max:1000',
        ]);

        $laporan->status_admin = $request->status_admin;
        $laporan->catatan_admin = $request->catatan_admin;
        $laporan->admin_peninjau_id = $ketua->nik; 
        $laporan->tanggal_peninjauan_admin = new UTCDateTime(now()->timestamp * 1000);
        $laporan->save();
        
        return redirect()->route('ketua-departemen.laporan.show', $id)->with('success', 'Status laporan berhasil diperbarui.');
    }

    public function patroliKaryawan(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        
        $karyawanQuery = $this->getScopedKaryawanQuery();
        if ($request->filled('nik_karyawan')) {
            $karyawanQuery->where('nik', 'like', '%' . $request->nik_karyawan . '%');
        }
        if ($request->filled('nama_karyawan')) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i");
        }
        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();

        $query = Patrol::with('karyawan')->where('status', 'selesai');
        if (empty($petugasNiksToSearch) && ($request->filled('nik_karyawan') || $request->filled('nama_karyawan'))) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('karyawan_nik', $petugasNiksToSearch);
        }

        if ($request->filled('tanggal_mulai')) $query->where('start_time', '>=', new UTCDateTime(Carbon::parse($request->tanggal_mulai)->startOfDay()->timestamp * 1000));
        if ($request->filled('tanggal_akhir')) $query->where('start_time', '<=', new UTCDateTime(Carbon::parse($request->tanggal_akhir)->endOfDay()->timestamp * 1000));
        
        $patrols = $query->orderBy('start_time', 'desc')->paginate(15);
        $petugasFakultas = $this->getScopedKaryawanQuery()->get(['nik', 'nama_lengkap']);

        return view('ketua-departemen.patroli.index', [
            'patrols' => $patrols,
            'petugasFakultas' => $petugasFakultas,
            'fakultas' => $ketua->unit,
            'departemen' => $ketua->departemen
        ]);
    }

    public function showPatroliKaryawan($patrolId)
    {
        $ketua = Auth::guard('karyawan')->user();
        $patrol = Patrol::with('karyawan')->findOrFail($patrolId);

        if (!$patrol->karyawan || $patrol->karyawan->unit !== $ketua->unit || $patrol->karyawan->departemen !== $ketua->departemen) {
            abort(403, 'Anda tidak berhak mengakses detail patroli ini.');
        }

        $pathForMap = collect($patrol->path)->map(fn ($point) => (is_array($point) && count($point) >= 2) ? [$point[1], $point[0]] : null)->filter()->toArray();
        
        // --- PERBAIKAN: Mengambil data lokasi dan radius dari relasi karyawan ---
        $officeLocation = $patrol->karyawan->office_location ?? null;
        $officeRadius = $patrol->karyawan->office_radius ?? null;

        return view('ketua-departemen.patroli.show', [
            'patrol' => $patrol, 
            'pathForMap' => $pathForMap, 
            'fakultas' => $ketua->unit, 
            'departemen' => $ketua->departemen,
            'officeLocation' => $officeLocation,
            'officeRadius' => $officeRadius
        ]);
    }
    
    public function monitoring()
    {
        return view('admin.patroli.monitoring');
    }

    public function getLivePatrolData()
    {
        $ketua = Auth::guard('karyawan')->user();
        $petugasNiks = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();

        $activePatrols = Patrol::with('karyawan:nik,nama_lengkap,foto')
                               ->whereIn('status', ['aktif', 'jeda'])
                               ->whereIn('karyawan_nik', $petugasNiks)
                               ->get(['_id', 'karyawan_nik', 'start_time', 'status']);

        $liveData = [];

        foreach ($activePatrols as $patrol) {
            $lastPoint = PatrolPoint::where('patrol_id', $patrol->_id)
                                    ->orderBy('timestamp', 'desc')
                                    ->first();

            if ($lastPoint && $patrol->karyawan) {
                $liveData[] = [
                    'patrol_id' => $patrol->_id,
                    'nik' => $patrol->karyawan_nik,
                    'nama_lengkap' => $patrol->karyawan->nama_lengkap,
                    'foto_url' => $patrol->karyawan->foto ? asset('storage/' . $patrol->karyawan->foto) : asset('assets/img/sample/avatar/avatar1.jpg'),
                    'latitude' => $lastPoint->latitude,
                    'longitude' => $lastPoint->longitude,
                    'status' => $patrol->status,
                    'last_update' => Carbon::parse($lastPoint->timestamp)->diffForHumans(),
                    'start_time' => Carbon::parse($patrol->start_time)->format('H:i:s'),
                ];
            }
        }

        return response()->json($liveData);
    }
    
    public function jadwalShift(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        $selectedDate = $request->input('tanggal') ? Carbon::parse($request->input('tanggal')) : Carbon::now();
        $startOfWeek = $selectedDate->copy()->startOfWeek(Carbon::MONDAY);
        $endOfWeek = $selectedDate->copy()->endOfWeek(Carbon::SUNDAY);
        
        $period = CarbonPeriod::create($startOfWeek, $endOfWeek);
        $datesOfWeek = collect($period)->map(fn($date) => $date->copy());

        $petugasKeamanan = $this->getScopedKaryawanQuery()->orderBy('nama_lengkap', 'asc')->get(['nik', 'nama_lengkap']);
        
        $jadwalMingguan = [];
        foreach ($petugasKeamanan as $petugas) {
            $shifts = JadwalShift::where('karyawan_nik', $petugas->nik)
                            ->whereBetween('tanggal', [
                                new UTCDateTime($startOfWeek->copy()->startOfDay()->timestamp * 1000),
                                new UTCDateTime($endOfWeek->copy()->startOfDay()->timestamp * 1000)
                            ])->get()->keyBy(fn($item) => $item->tanggal ? Carbon::parse($item->tanggal)->format('Y-m-d') : null);

            $jadwalMingguan[$petugas->nik] = ['nama_lengkap' => $petugas->nama_lengkap, 'shifts' => $shifts];
        }
        
        $definedShifts = (new \App\Http\Controllers\Komandan\KomandanJadwalShiftController)->definedShifts;
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('ketua-departemen.jadwal_shift.index', compact(
            'jadwalMingguan', 'datesOfWeek', 'startOfWeek', 'endOfWeek', 'selectedDate',
            'definedShifts', 'namaBulan', 'ketua'
        ));
    }

    private function getLaporanKinerjaData(Request $request)
    {
        $ketua = Auth::guard('karyawan')->user();
        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));
        
        $petugasList = $this->getScopedKaryawanQuery()->orderBy('nama_lengkap', 'asc')->get(['nik', 'nama_lengkap']);
        
        $laporanKinerjaData = [];
        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();

        foreach ($petugasList as $petugas) {
            $totalJamKerjaAktualDetik = 0;
            $totalJamKerjaJadwalDetik = 0;
            $jumlahHariHadir = 0;
            $jumlahHariKerjaTerjadwal = 0;

            $presensiBulanIni = Presensi::where('nik', $petugas->nik)->whereBetween('tgl_presensi', [new UTCDateTime($startDate->copy()->timestamp * 1000), new UTCDateTime($endDate->copy()->timestamp * 1000)])->get()->keyBy(fn ($item) => Carbon::parse($item->tgl_presensi)->format('Y-m-d'));
            $jadwalBulanIni = JadwalShift::where('karyawan_nik', $petugas->nik)->whereBetween('tanggal', [new UTCDateTime($startDate->copy()->startOfDay()->utc()->getTimestamp() * 1000), new UTCDateTime($endDate->copy()->startOfDay()->utc()->getTimestamp() * 1000)])->get()->keyBy(fn ($item) => $item->tanggal ? $item->tanggal->format('Y-m-d') : null);

            foreach (CarbonPeriod::create($startDate, $endDate) as $date) {
                $tanggalFormat = $date->format('Y-m-d');
                $jadwalHari = $jadwalBulanIni->get($tanggalFormat);

                if ($jadwalHari && strtoupper($jadwalHari->shift_nama) !== 'LIBUR' && !empty($jadwalHari->jam_mulai) && !empty($jadwalHari->jam_selesai)) {
                    $jumlahHariKerjaTerjadwal++;
                    try {
                        $jamMulaiJadwal = Carbon::parse($date->format('Y-m-d') . ' ' . $jadwalHari->jam_mulai);
                        $jamSelesaiJadwal = Carbon::parse($date->format('Y-m-d') . ' ' . $jadwalHari->jam_selesai);
                        if ($jamSelesaiJadwal->lt($jamMulaiJadwal)) $jamSelesaiJadwal->addDay();
                        $totalJamKerjaJadwalDetik += $jamMulaiJadwal->diffInSeconds($jamSelesaiJadwal);
                    } catch (\Exception $e) {}
                }

                $presensiHari = $presensiBulanIni->get($tanggalFormat);
                if ($presensiHari && $presensiHari->jam_in && $presensiHari->jam_out) {
                    $jumlahHariHadir++;
                    try {
                        $tglPresensiCarbon = Carbon::parse($presensiHari->tgl_presensi);
                        $jamMasuk = Carbon::parse($tglPresensiCarbon->format('Y-m-d') . ' ' . $presensiHari->jam_in);
                        $jamPulang = Carbon::parse($tglPresensiCarbon->format('Y-m-d') . ' ' . $presensiHari->jam_out);
                        if ($jamPulang->lt($jamMasuk)) $jamPulang->addDay();
                        $totalJamKerjaAktualDetik += $jamMasuk->diffInSeconds($jamPulang);
                    } catch (\Exception $e) {}
                }
            }

            $laporanKinerjaData[] = [
                'nik' => $petugas->nik,
                'nama_lengkap' => $petugas->nama_lengkap,
                'total_jam_kerja_aktual_format' => gmdate('H\j i\m s\d', $totalJamKerjaAktualDetik),
                'total_jam_kerja_jadwal_format' => gmdate('H\j i\m s\d', $totalJamKerjaJadwalDetik),
                'jumlah_hari_hadir' => $jumlahHariHadir,
                'jumlah_hari_kerja_terjadwal' => $jumlahHariKerjaTerjadwal,
                'persentase_kehadiran' => $jumlahHariKerjaTerjadwal > 0 ? round(($jumlahHariHadir / $jumlahHariKerjaTerjadwal) * 100, 2) : 0,
            ];
        }
        
        return [
            'laporanKinerjaData' => $laporanKinerjaData,
            'fakultas' => $ketua->unit,
            'departemen' => $ketua->departemen,
            'bulan' => $bulan,
            'tahun' => $tahun,
            'namaBulan' => ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
        ];
    }

    public function laporanKinerja(Request $request)
    {
        $data = $this->getLaporanKinerjaData($request);
        return view('ketua-departemen.laporan_kinerja.index', $data);
    }

    public function cetakLaporanKinerja(Request $request)
    {
        $data = $this->getLaporanKinerjaData($request);
        $data['ketua'] = Auth::guard('karyawan')->user();
        return view('ketua-departemen.laporan_kinerja.cetak', $data);
    }
}

app\Http\Controllers\Komandan\KomandanDashboardController.php
<?php
// File: app/Http/Controllers/Komandan/KomandanDashboardController.php

namespace App\Http\Controllers\Komandan;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Karyawan;
use App\Models\Presensi;
use App\Models\Laporan;
use App\Models\Patrol;
use App\Models\PatrolPoint;
use MongoDB\BSON\UTCDateTime;
use Carbon\Carbon;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Log;

class KomandanDashboardController extends Controller
{
    private function getScopedKaryawanQuery()
    {
        $komandan = Auth::guard('karyawan')->user();
        return Karyawan::where('unit', $komandan->unit)
                        ->where('jabatan', 'Petugas Keamanan')
                        ->where('is_admin', false)
                        ->where('is_komandan', false);
    }

    public function index()
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        if (!$fakultasKomandan) {
            Auth::guard('karyawan')->logout();
            request()->session()->invalidate();
            request()->session()->regenerateToken();
            return redirect()->route('admin.login.form')->with('error', 'Fakultas tidak terdefinisi untuk akun Komandan Anda.');
        }

        $petugasNiks = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();
        
        $jumlahPetugas = count($petugasNiks);

        $tglHariIniStart = new UTCDateTime(Carbon::today()->startOfDay()->timestamp * 1000);
        $tglHariIniEnd = new UTCDateTime(Carbon::today()->endOfDay()->timestamp * 1000);
        $hadirHariIni = !empty($petugasNiks) ? Presensi::whereIn('nik', $petugasNiks)->whereBetween('tgl_presensi', [$tglHariIniStart, $tglHariIniEnd])->count() : 0;

        $laporanBelumDitinjau = !empty($petugasNiks) ? Laporan::whereIn('nik', $petugasNiks)->whereNull('status_admin')->count() : 0;
        
        $startOfMonth = new UTCDateTime(Carbon::now()->startOfMonth()->startOfDay()->utc()->getTimestamp() * 1000);
        $endOfMonth = new UTCDateTime(Carbon::now()->endOfMonth()->endOfDay()->utc()->getTimestamp() * 1000);
        
        $totalLaporanBulanIni = !empty($petugasNiks) ? Laporan::whereIn('nik', $petugasNiks)->whereBetween('created_at', [$startOfMonth, $endOfMonth])->count() : 0;

        $totalPatroliBulanIni = !empty($petugasNiks) ? Patrol::whereIn('karyawan_nik', $petugasNiks)->where('status', 'selesai')->whereBetween('start_time', [$startOfMonth, $endOfMonth])->count() : 0;
        
        $rekapPresensiBulanan = null;
        if (!empty($petugasNiks)) {
            $rekapPresensiBulanan = Presensi::raw(function ($collection) use ($petugasNiks, $startOfMonth, $endOfMonth) {
                return $collection->aggregate([
                    ['$match' => ['nik' => ['$in' => $petugasNiks], 'tgl_presensi' => ['$gte' => $startOfMonth, '$lte' => $endOfMonth]]],
                    ['$group' => ['_id' => null, 'totalHadir' => ['$sum' => ['$cond' => [['$ne' => ['$jam_in', null]], 1, 0]]]]]
                ]);
            })->first();
        }

        return view('komandan.dashboard', compact(
            'fakultasKomandan', 'jumlahPetugas', 'hadirHariIni',
            'laporanBelumDitinjau', 'totalLaporanBulanIni', 'totalPatroliBulanIni', 'rekapPresensiBulanan'
        ));
    }
    
    public function dataKaryawan(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $query = $this->getScopedKaryawanQuery();

        if ($request->filled('search')) {
            $searchTerm = $request->search;
            $query->where(function ($q) use ($searchTerm) {
                $q->where('nama_lengkap', 'regexp', "/.*$searchTerm.*/i")
                  ->orWhere('nik', 'like', '%' . $searchTerm . '%');
            });
        }
        $karyawans = $query->orderBy('nama_lengkap')->paginate(10);
        return view('komandan.karyawan.index', compact('karyawans', 'fakultasKomandan'));
    }

    public function rekapPresensi(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $bulanIni = $request->input('bulan', date('m'));
        $tahunIni = $request->input('tahun', date('Y'));
        $searchNik = $request->input('nik');
        $searchNama = $request->input('nama');

        $karyawanQuery = $this->getScopedKaryawanQuery();

        if ($searchNik) {
            $karyawanQuery->where('nik', 'like', '%' . $searchNik . '%');
        }
        if ($searchNama) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*$searchNama.*/i");
        }

        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();
        
        $query = Presensi::query()->with('karyawan');

        if (empty($petugasNiksToSearch) && ($searchNik || $searchNama)) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('nik', $petugasNiksToSearch);
        }

        $startDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahunIni, $bulanIni, 1)->endOfMonth();
        $query->whereBetween('tgl_presensi', [new UTCDateTime($startDate->timestamp * 1000), new UTCDateTime($endDate->timestamp * 1000)]);
        
        $presensiData = $query->orderBy('tgl_presensi', 'desc')->paginate(15);
        
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('komandan.presensi.rekapitulasi', compact('presensiData', 'bulanIni', 'tahunIni', 'namaBulan', 'searchNik', 'searchNama', 'fakultasKomandan'));
    }

    public function laporanHarianPresensi(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $tanggal = $request->input('tanggal', date('Y-m-d'));
        
        $petugasNiksInFakultas = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();
        
        $query = Presensi::query()->with('karyawan');
        
        if (empty($petugasNiksInFakultas)) {
            $query->where('nik', 'mustahil-ditemukan');
        } else {
            $tglStart = new UTCDateTime(Carbon::parse($tanggal)->startOfDay()->timestamp * 1000);
            $tglEnd = new UTCDateTime(Carbon::parse($tanggal)->endOfDay()->timestamp * 1000);
            $query->whereIn('nik', $petugasNiksInFakultas)
                  ->whereBetween('tgl_presensi', [$tglStart, $tglEnd]);
        }
        
        $presensiHarian = $query->orderBy('jam_in', 'asc')->get();

        return view('komandan.presensi.harian', compact('presensiHarian', 'tanggal', 'fakultasKomandan'));
    }

    public function detailPresensiKaryawan(Request $request, $nik)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $karyawan = $this->getScopedKaryawanQuery()->where('nik', $nik)->firstOrFail();
        
        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));

        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();

        $historiPresensi = Presensi::where('nik', $nik)
            ->whereBetween('tgl_presensi', [new UTCDateTime($startDate->timestamp * 1000), new UTCDateTime($endDate->timestamp * 1000)])
            ->orderBy('tgl_presensi', 'asc')->get();
        
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];
        return view('komandan.presensi.detail_karyawan', compact('karyawan', 'historiPresensi', 'bulan', 'tahun', 'namaBulan', 'fakultasKomandan'));
    }

    public function editPresensi($id)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $presensi = Presensi::where('_id', $id)
            ->whereHas('karyawan', fn($q) => $q->where('unit', $fakultasKomandan)->where('jabatan', 'Petugas Keamanan'))
            ->with('karyawan')->firstOrFail();
                                
        return view('komandan.presensi.edit', compact('presensi', 'fakultasKomandan'));
    }

    public function updatePresensi(Request $request, $id)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $presensi = Presensi::where('_id', $id)
            ->whereHas('karyawan', fn($q) => $q->where('unit', $fakultasKomandan)->where('jabatan', 'Petugas Keamanan'))
            ->firstOrFail();

        $validator = Validator::make($request->all(), [
            'tgl_presensi_edit' => 'required|date',
            'jam_in_edit' => 'nullable|date_format:H:i:s',
            'jam_out_edit' => 'nullable|date_format:H:i:s',
        ]);

        if ($validator->fails()) {
            return redirect()->back()->withErrors($validator)->withInput();
        }

        try {
            $presensi->update([
                'tgl_presensi' => new UTCDateTime(Carbon::parse($request->tgl_presensi_edit)->startOfDay()->utc()->getTimestamp() * 1000),
                'jam_in' => $request->jam_in_edit ?: null,
                'jam_out' => $request->jam_out_edit ?: null,
            ]);
            return redirect()->route('komandan.presensi.rekapitulasi')->with('success', 'Data presensi berhasil diperbarui.');
        } catch (\Exception $e) {
            return redirect()->back()->with('error', 'Gagal memperbarui data presensi: ' . $e->getMessage())->withInput();
        }
    }

    public function laporanKaryawan(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $karyawanQuery = $this->getScopedKaryawanQuery();

        if ($request->filled('nik_karyawan')) {
            $karyawanQuery->where('nik', 'like', '%' . $request->nik_karyawan . '%');
        }
        if ($request->filled('nama_karyawan')) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i");
        }

        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();
        
        $query = Laporan::with('karyawan');

        if (empty($petugasNiksToSearch) && ($request->filled('nik_karyawan') || $request->filled('nama_karyawan'))) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('nik', $petugasNiksToSearch);
        }

        if ($request->filled('tanggal_mulai') && $request->filled('tanggal_akhir')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->whereBetween('created_at', [ new UTCDateTime($tanggalMulai->utc()->getTimestamp() * 1000), new UTCDateTime($tanggalAkhir->utc()->getTimestamp() * 1000)]);
        } elseif ($request->filled('tanggal_mulai')) {
            $tanggalMulai = Carbon::parse($request->tanggal_mulai)->startOfDay();
            $query->where('created_at', '>=', new UTCDateTime($tanggalMulai->utc()->getTimestamp() * 1000));
        } elseif ($request->filled('tanggal_akhir')) {
            $tanggalAkhir = Carbon::parse($request->tanggal_akhir)->endOfDay();
            $query->where('created_at', '<=', new UTCDateTime($tanggalAkhir->utc()->getTimestamp() * 1000));
        }

        if ($request->filled('jenis_laporan')) $query->where('jenis_laporan', $request->jenis_laporan);
        if ($request->filled('status_laporan')) { 
            if ($request->status_laporan == 'belum_ditinjau') $query->whereNull('status_admin');
            else $query->where('status_admin', $request->status_laporan);
        }
        
        $laporans = $query->orderBy('created_at', 'desc')->paginate(15);
        
        $petugasFakultas = $this->getScopedKaryawanQuery()->orderBy('nama_lengkap')->get(['nik', 'nama_lengkap']);

        return view('komandan.laporan.index', compact('laporans', 'petugasFakultas', 'fakultasKomandan'));
    }

    public function showLaporanKaryawan($id)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $laporan = Laporan::with('karyawan')->find($id);

        if (!$laporan || !$laporan->karyawan || $laporan->karyawan->unit !== $fakultasKomandan) {
            return redirect()->route('komandan.laporan.index')->with('error', 'Anda tidak berhak mengakses detail laporan ini atau laporan tidak valid.');
        }
        
        return view('komandan.laporan.show', compact('laporan', 'fakultasKomandan'));
    }

    public function updateStatusLaporan(Request $request, $id)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $laporan = Laporan::with('karyawan')->find($id);

        if (!$laporan || !$laporan->karyawan || $laporan->karyawan->unit !== $fakultasKomandan) {
            return redirect()->route('komandan.laporan.show', $id)->with('error', 'Anda tidak berhak memperbarui status laporan ini.');
        }
        
        $request->validate(['status_admin' => 'required|string|in:Diterima,Ditolak', 'catatan_admin' => 'nullable|string|max:1000']);
        
        $laporan->update([
            'status_admin' => $request->status_admin,
            'catatan_admin' => $request->catatan_admin,
            'admin_peninjau_id' => $komandan->nik,
            'tanggal_peninjauan_admin' => new UTCDateTime(now()->timestamp * 1000)
        ]);

        return redirect()->route('komandan.laporan.show', $id)->with('success', 'Status laporan berhasil diperbarui.');
    }

    public function patroliKaryawan(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $karyawanQuery = $this->getScopedKaryawanQuery();

        if ($request->filled('nik_karyawan')) {
            $karyawanQuery->where('nik', 'like', '%' . $request->nik_karyawan . '%');
        }
        if ($request->filled('nama_karyawan')) {
            $karyawanQuery->where('nama_lengkap', 'regexp', "/.*{$request->nama_karyawan}.*/i");
        }

        $petugasNiksToSearch = $karyawanQuery->pluck('nik')->toArray();
        
        $query = Patrol::with('karyawan')->where('status', 'selesai'); 

        if (empty($petugasNiksToSearch) && ($request->filled('nik_karyawan') || $request->filled('nama_karyawan'))) {
            $query->whereRaw(fn($q) => $q->where('_id', '=', '0'));
        } else {
            $query->whereIn('karyawan_nik', $petugasNiksToSearch);
        }

        if ($request->filled('tanggal_mulai')) $query->where('start_time', '>=', new UTCDateTime(Carbon::parse($request->tanggal_mulai)->startOfDay()->timestamp * 1000));
        if ($request->filled('tanggal_akhir')) $query->where('start_time', '<=', new UTCDateTime(Carbon::parse($request->tanggal_akhir)->endOfDay()->timestamp * 1000));

        $patrols = $query->orderBy('start_time', 'desc')->paginate(15);
        
        $petugasFakultas = $this->getScopedKaryawanQuery()->orderBy('nama_lengkap')->get(['nik', 'nama_lengkap']);

        return view('komandan.patroli.index', compact('patrols', 'petugasFakultas', 'fakultasKomandan'));
    }

    /**
     * Display the specified patrol record for Komandan.
     * MODIFIED: Eager load karyawan and pass office location/radius to view.
     */
    public function showPatroliKaryawan($patrolId)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $patrol = Patrol::with('karyawan')->find($patrolId);

        if (!$patrol || !$patrol->karyawan || $patrol->karyawan->unit !== $fakultasKomandan) {
            return redirect()->route('komandan.patroli.index')->with('error', 'Anda tidak berhak mengakses detail patroli ini.');
        }
        
        $pathForMap = collect($patrol->path)->map(fn($point) => (is_array($point) && count($point) >= 2 && is_numeric($point[0]) && is_numeric($point[1])) ? [$point[1], $point[0]] : null)->filter()->toArray(); 

        // --- PERBAIKAN: Mengambil data lokasi dan radius dari relasi karyawan ---
        $officeLocation = $patrol->karyawan->office_location ?? null;
        $officeRadius = $patrol->karyawan->office_radius ?? null;

        return view('komandan.patroli.show', compact('patrol', 'pathForMap', 'fakultasKomandan', 'officeLocation', 'officeRadius'));
    }

    public function monitoring()
    {
        return view('admin.patroli.monitoring');
    }

    public function getLivePatrolData()
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;
        $petugasNiks = $this->getScopedKaryawanQuery()->pluck('nik')->toArray();

        $activePatrols = Patrol::with('karyawan:nik,nama_lengkap,foto')
            ->whereIn('status', ['aktif', 'jeda'])
            ->whereIn('karyawan_nik', $petugasNiks)
            ->get(['_id', 'karyawan_nik', 'start_time', 'status']);

        $liveData = [];
        foreach ($activePatrols as $patrol) {
            $lastPoint = PatrolPoint::where('patrol_id', $patrol->_id)->orderBy('timestamp', 'desc')->first();
            if ($lastPoint && $patrol->karyawan) {
                $liveData[] = [
                    'patrol_id' => $patrol->_id,
                    'nik' => $patrol->karyawan_nik,
                    'nama_lengkap' => $patrol->karyawan->nama_lengkap,
                    'foto_url' => $patrol->karyawan->foto ? asset('storage/' . $patrol->karyawan->foto) : asset('assets/img/sample/avatar/avatar1.jpg'),
                    'latitude' => $lastPoint->latitude,
                    'longitude' => $lastPoint->longitude,
                    'status' => $patrol->status,
                    'last_update' => Carbon::parse($lastPoint->timestamp)->diffForHumans(),
                    'start_time' => Carbon::parse($patrol->start_time)->format('H:i:s'),
                ];
            }
        }
        return response()->json($liveData);
    }
}

app\Http\Controllers\Komandan\KomandanJadwalShiftController.php
<?php

namespace App\Http\Controllers\Komandan;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Karyawan;
use App\Models\JadwalShift;
use Carbon\Carbon;
use Carbon\CarbonPeriod;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Log;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Validator;

class KomandanJadwalShiftController extends Controller
{
    // Diubah dari protected menjadi public agar bisa diakses oleh controller lain
    public $definedShifts = [
        'PAGI' => ['mulai' => '07:00', 'selesai' => '19:00', 'label' => 'Pagi (07:00-19:00)'],
        'MALAM' => ['mulai' => '19:00', 'selesai' => '07:00', 'label' => 'Malam (19:00-07:00)'],
        'LIBUR' => ['mulai' => null, 'selesai' => null, 'label' => 'Libur'],
    ];

    public function index(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        if (!$fakultasKomandan) {
            Auth::guard('karyawan')->logout();
            $request->session()->invalidate();
            $request->session()->regenerateToken();
            return redirect()->route('admin.login.form')->with('error', 'Fakultas tidak terdefinisi untuk akun Komandan Anda.');
        }

        $selectedDate = $request->input('tanggal') ? Carbon::parse($request->input('tanggal')) : Carbon::now();
        $startOfWeek = $selectedDate->copy()->startOfWeek(Carbon::MONDAY);
        $endOfWeek = $selectedDate->copy()->endOfWeek(Carbon::SUNDAY);
        
        $period = CarbonPeriod::create($startOfWeek, $endOfWeek);
        $datesOfWeek = [];
        foreach ($period as $date) {
            $datesOfWeek[] = $date->copy();
        }

        $petugasKeamanan = Karyawan::where('unit', $fakultasKomandan)
            ->where('jabatan', 'Petugas Keamanan')
            ->where('is_admin', false)
            ->where('is_komandan', false)
            ->orderBy('nama_lengkap', 'asc')
            ->get(['nik', 'nama_lengkap']);

        $jadwalMingguan = [];
        foreach ($petugasKeamanan as $petugas) {
            $jadwalPetugas = [];
            foreach ($datesOfWeek as $tanggalCarbon) {
                $tanggalUtcQuery = new UTCDateTime($tanggalCarbon->copy()->startOfDay()->utc()->getTimestamp() * 1000);
                $shift = JadwalShift::where('karyawan_nik', $petugas->nik)
                    ->where('tanggal', $tanggalUtcQuery)
                    ->first();
                $jadwalPetugas[$tanggalCarbon->format('Y-m-d')] = $shift;
            }
            $jadwalMingguan[$petugas->nik] = [
                'nama_lengkap' => $petugas->nama_lengkap,
                'nik' => $petugas->nik,
                'shifts' => $jadwalPetugas,
            ];
        }
        
        $definedShifts = $this->definedShifts;
        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        return view('komandan.jadwal_shift.index', compact(
            'fakultasKomandan',
            'jadwalMingguan',
            'datesOfWeek',
            'startOfWeek',
            'endOfWeek',
            'selectedDate',
            'definedShifts',
            'namaBulan'
        ));
    }

    public function storeOrUpdate(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandanDariAuth = $komandan->unit;

        Log::info('--- KOMANDAN JADWAL SHIFT: storeOrUpdate Attempt (Return Shift Data) ---');
        Log::info('Komandan NIK: ' . $komandan->nik . ', Fakultas Komandan (dari Auth): \'' . $fakultasKomandanDariAuth . '\'');
        Log::info('Request Data: ', $request->all());
        $nikKaryawanRequest = $request->karyawan_nik;

        $baseValidator = Validator::make($request->all(), [
            'karyawan_nik' => 'required|string|exists:karyawans,nik',
            'tanggal' => 'required|date_format:Y-m-d',
            'shift_nama' => 'required|string',
            'jam_mulai' => 'nullable|required_if:shift_nama,CUSTOM|date_format:H:i',
            'jam_selesai' => 'nullable|required_if:shift_nama,CUSTOM|date_format:H:i',
            'keterangan' => 'nullable|string|max:255',
        ]);

        if ($baseValidator->fails()) {
            Log::warning('KOMANDAN JADWAL SHIFT: Base validation failed. Errors:', $baseValidator->errors()->toArray());
            return response()->json(['success' => false, 'message' => 'Data input tidak valid.', 'errors' => $baseValidator->errors()], 422);
        }

        $targetKaryawan = Karyawan::where('nik', $nikKaryawanRequest)->first();

        if (!$targetKaryawan) {
            Log::warning('KOMANDAN JADWAL SHIFT: Manual Karyawan Check - NIK \'' . $nikKaryawanRequest . '\' NOT FOUND.');
             return response()->json(['success' => false, 'message' => 'NIK Petugas tidak ditemukan.', 'errors' => ['karyawan_nik' => ['NIK Petugas tidak valid.']]], 422);
        }
        
        $customErrorsKaryawan = [];
        if ($targetKaryawan->unit !== $fakultasKomandanDariAuth) {
            $customErrorsKaryawan[] = 'Petugas ini bukan dari fakultas Anda.';
        }
        if ($targetKaryawan->jabatan !== 'Petugas Keamanan') {
            $customErrorsKaryawan[] = 'Karyawan yang dipilih bukan berjabatan "Petugas Keamanan".';
        }
        if ($targetKaryawan->is_admin === true) {
            $customErrorsKaryawan[] = 'Karyawan yang dipilih memiliki role Admin.';
        }
        if ($targetKaryawan->is_komandan === true) {
            $customErrorsKaryawan[] = 'Karyawan yang dipilih memiliki role Komandan.';
        }

        if (!empty($customErrorsKaryawan)) {
            Log::warning('KOMANDAN JADWAL SHIFT: Manual Karyawan validation conditions not met for NIK: ' . $nikKaryawanRequest . '. Errors:', ['karyawan_nik' => $customErrorsKaryawan]);
            return response()->json(['success' => false, 'message' => 'Karyawan tidak memenuhi kriteria.', 'errors' => ['karyawan_nik' => $customErrorsKaryawan]], 422);
        }
        
        $shiftData = [
            'karyawan_nik' => $request->karyawan_nik,
            'nama_karyawan' => $targetKaryawan->nama_lengkap,
            'fakultas' => $fakultasKomandanDariAuth,
            'shift_nama' => strtoupper($request->shift_nama),
            'dibuat_oleh_nik' => $komandan->nik,
            'dibuat_oleh_nama' => $komandan->nama_lengkap,
            'keterangan' => $request->keterangan,
        ];

        if (strtoupper($request->shift_nama) === 'CUSTOM') {
            $shiftData['jam_mulai'] = $request->jam_mulai;
            $shiftData['jam_selesai'] = $request->jam_selesai;
        } elseif (isset($this->definedShifts[strtoupper($request->shift_nama)])) {
            $definedShift = $this->definedShifts[strtoupper($request->shift_nama)];
            $shiftData['jam_mulai'] = $definedShift['mulai'];
            $shiftData['jam_selesai'] = $definedShift['selesai'];
        } else {
            $shiftData['jam_mulai'] = null;
            $shiftData['jam_selesai'] = null;
            $shiftData['shift_nama'] = 'LIBUR'; 
        }
        
        if ($shiftData['shift_nama'] === 'LIBUR') {
            $shiftData['jam_mulai'] = null;
            $shiftData['jam_selesai'] = null;
        }
        $shiftData['tanggal'] = $request->tanggal;

        try {
            $jadwalShift = JadwalShift::updateOrCreate(
                [
                    'karyawan_nik' => $request->karyawan_nik,
                    'tanggal' => new UTCDateTime(Carbon::parse($request->tanggal)->startOfDay()->utc()->getTimestamp() * 1000)
                ],
                $shiftData
            );
            Log::info('KOMANDAN JADWAL SHIFT: Shift schedule successfully stored/updated for NIK: ' . $request->karyawan_nik . ' on ' . $request->tanggal);
            
            return response()->json([
                'success' => true, 
                'message' => 'Jadwal shift berhasil disimpan.',
                'shift' => [ // Data ini akan digunakan untuk update UI
                    'shift_nama' => $jadwalShift->shift_nama,
                    'jam_mulai' => $jadwalShift->jam_mulai,
                    'jam_selesai' => $jadwalShift->jam_selesai,
                    'keterangan' => $jadwalShift->keterangan,
                ]
            ]);
        } catch (\Exception $e) {
            Log::error("KOMANDAN JADWAL SHIFT: Error saving shift for NIK: " . $request->karyawan_nik . " on " . $request->tanggal . ". Error: " . $e->getMessage() . "\nStack Trace:\n" . $e->getTraceAsString());
            return response()->json(['success' => false, 'message' => 'Gagal menyimpan jadwal shift: Terjadi kesalahan internal server.'], 500);
        }
    }
}

app\Http\Controllers\Komandan\KomandanLaporanKinerjaController.php
<?php

namespace App\Http\Controllers\Komandan;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Karyawan;
use App\Models\Presensi;
use App\Models\JadwalShift;
use Carbon\Carbon;
use Carbon\CarbonPeriod;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Log;

class KomandanLaporanKinerjaController extends Controller
{
    // Helper function to format total seconds into HHj MMm SSd
    private function formatDurationFromSeconds($totalSeconds) {
        if ($totalSeconds <= 0) {
            return '00j 00m 00d';
        }
        $hours = floor($totalSeconds / 3600);
        $minutes = floor(($totalSeconds % 3600) / 60);
        $seconds = $totalSeconds % 60;
        return sprintf('%02dj %02dm %02dd', $hours, $minutes, $seconds);
    }

    /**
     * Helper function to calculate work duration for a day
     */
    private function calculateWorkDuration($date, $startTime, $endTime, $timezone = 'Asia/Jakarta')
    {
        try {
            $start = Carbon::parse($date->format('Y-m-d') . ' ' . $startTime, $timezone);
            $end = Carbon::parse($date->format('Y-m-d') . ' ' . $endTime, $timezone);

            if ($end <= $start) {
                $end->addDay(); // Handle overnight shifts
            }

            return $start->diffInSeconds($end);
        } catch (\Exception $e) {
            Log::error("Error calculating work duration: " . $e->getMessage());
            return 0;
        }
    }

    /**
     * Get performance report data for a given period
     */
    private function getPerformanceReportData($petugasList, $startDate, $endDate)
    {
        $laporanKinerjaData = [];

        foreach ($petugasList as $petugas) {
            Log::info("Memproses Kinerja untuk NIK: {$petugas->nik} - Nama: {$petugas->nama_lengkap}");
            
            $totalJamKerjaAktualDetik = 0;
            $totalJamKerjaJadwalDetik = 0;
            $jumlahHariHadir = 0;
            $jumlahHariKerjaTerjadwal = 0;

            // Get presences for the period
            $presensiBulanIni = Presensi::where('nik', $petugas->nik)
                ->where('tgl_presensi', '>=', new UTCDateTime($startDate->copy()->timestamp * 1000))
                ->where('tgl_presensi', '<=', new UTCDateTime($endDate->copy()->timestamp * 1000))
                ->get()
                ->keyBy(function ($item) {
                    return $item->tgl_presensi ? Carbon::parse($item->tgl_presensi)->format('Y-m-d') : null;
                })->filter();

            // Get schedules for the period
            $jadwalBulanIni = JadwalShift::where('karyawan_nik', $petugas->nik)
                ->where('tanggal', '>=', new UTCDateTime($startDate->copy()->startOfDay()->utc()->getTimestamp() * 1000))
                ->where('tanggal', '<=', new UTCDateTime($endDate->copy()->startOfDay()->utc()->getTimestamp() * 1000))
                ->get()
                ->keyBy(function ($item) {
                    return $item->tanggal ? $item->tanggal->format('Y-m-d') : null;
                })->filter();

            $period = CarbonPeriod::create($startDate, $endDate);

            foreach ($period as $date) {
                $tanggalFormat = $date->format('Y-m-d');
                $jadwalHari = $jadwalBulanIni->get($tanggalFormat);

                // Calculate scheduled work duration
                if ($jadwalHari && strtoupper($jadwalHari->shift_nama) !== 'LIBUR') {
                    if (!empty($jadwalHari->jam_mulai) && !empty($jadwalHari->jam_selesai)) {
                        $jumlahHariKerjaTerjadwal++;
                        
                        $durasiJadwalDetik = $this->calculateWorkDuration(
                            $date,
                            $jadwalHari->jam_mulai,
                            $jadwalHari->jam_selesai,
                            config('app.timezone')
                        );
                        
                        $totalJamKerjaJadwalDetik += $durasiJadwalDetik;
                        Log::debug("[NIK: {$petugas->nik}, Tgl: {$tanggalFormat}] Durasi Jadwal Hari Ini (detik): {$durasiJadwalDetik}. Total Terjadwal (detik): {$totalJamKerjaJadwalDetik}");
                    }
                }

                // Calculate actual work duration from presence
                $presensiHari = $presensiBulanIni->get($tanggalFormat);
                if ($presensiHari && $presensiHari->jam_in && $presensiHari->jam_out) {
                    $jumlahHariHadir++;
                    
                    $durasiAktualDetik = $this->calculateWorkDuration(
                        Carbon::parse($presensiHari->tgl_presensi),
                        $presensiHari->jam_in,
                        $presensiHari->jam_out,
                        config('app.timezone')
                    );
                    
                    $totalJamKerjaAktualDetik += $durasiAktualDetik;
                }
            }

            $laporanKinerjaData[] = [
                'nik' => $petugas->nik,
                'nama_lengkap' => $petugas->nama_lengkap,
                'total_jam_kerja_aktual_format' => $this->formatDurationFromSeconds($totalJamKerjaAktualDetik),
                'total_jam_kerja_jadwal_format' => $this->formatDurationFromSeconds($totalJamKerjaJadwalDetik),
                'jumlah_hari_hadir' => $jumlahHariHadir,
                'jumlah_hari_kerja_terjadwal' => $jumlahHariKerjaTerjadwal,
                'persentase_kehadiran' => $jumlahHariKerjaTerjadwal > 0 ? round(($jumlahHariHadir / $jumlahHariKerjaTerjadwal) * 100, 2) : 0,
            ];
            
            Log::info("[NIK: {$petugas->nik}] Selesai Kinerja: Hadir={$jumlahHariHadir}/{$jumlahHariKerjaTerjadwal}, Jam Aktual={$totalJamKerjaAktualDetik}s, Jam Jadwal={$totalJamKerjaJadwalDetik}s");
        }

        return $laporanKinerjaData;
    }

    public function index(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));

        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        $petugasList = Karyawan::where('unit', $fakultasKomandan)
            ->where('jabatan', 'Petugas Keamanan')
            ->where('is_admin', false)
            ->where('is_komandan', false)
            ->orderBy('nama_lengkap', 'asc')
            ->get(['nik', 'nama_lengkap']);

        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();
        
        Log::info("Laporan Kinerja - Periode: {$startDate->toDateString()} s/d {$endDate->toDateString()} untuk Fakultas: {$fakultasKomandan}");

        $laporanKinerjaData = $this->getPerformanceReportData($petugasList, $startDate, $endDate);

        return view('komandan.laporan_kinerja.index', compact(
            'fakultasKomandan',
            'laporanKinerjaData',
            'bulan',
            'tahun',
            'namaBulan'
        ));
    }

    public function cetak(Request $request)
    {
        $komandan = Auth::guard('karyawan')->user();
        $fakultasKomandan = $komandan->unit;

        $bulan = $request->input('bulan', date('m'));
        $tahun = $request->input('tahun', date('Y'));

        $namaBulan = ["", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];

        $petugasList = Karyawan::where('unit', $fakultasKomandan)
            ->where('jabatan', 'Petugas Keamanan')
            ->where('is_admin', false)
            ->where('is_komandan', false)
            ->orderBy('nama_lengkap', 'asc')
            ->get(['nik', 'nama_lengkap']);

        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();

        $laporanKinerjaData = $this->getPerformanceReportData($petugasList, $startDate, $endDate);

        return view('komandan.laporan_kinerja.cetak', compact(
            'fakultasKomandan',
            'laporanKinerjaData',
            'bulan',
            'tahun',
            'namaBulan',
            'komandan'
        ));
    }
}

app\Http\Controllers\AuthController.php
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Karyawan;
use App\Services\FaceRecognitionService; // Assuming this is still used elsewhere or for Petugas
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Log;
use Carbon\Carbon;

class AuthController extends Controller
{
    protected $faceRecognitionService;

    public function __construct(FaceRecognitionService $faceRecognitionService)
    {
        $this->faceRecognitionService = $faceRecognitionService;
    }

    // Menampilkan form login KARYAWAN (Petugas Keamanan)
    public function showLoginForm()
    {
        if (Auth::guard('karyawan')->check()) {
            $user = Auth::guard('karyawan')->user();
            if ($user->is_admin) {
                return redirect()->route('admin.dashboard');
            } elseif ($user->is_komandan) {
                return redirect()->route('komandan.dashboard');
            } elseif ($user->is_ketua_departemen) {
                return redirect()->route('ketua-departemen.dashboard');
            }
            return redirect()->route('dashboard'); // Dashboard Petugas Keamanan
        }
        return view('auth.login'); // View untuk login karyawan (Petugas)
    }

    // Proses login KARYAWAN (Petugas Keamanan)
    public function proseslogin(Request $request)
    {
        $request->validate([
            'nik' => 'required|string',
            'password' => 'required|string',
        ]);

        $karyawan = Karyawan::where('nik', $request->nik)->first();

        if ($karyawan && Hash::check($request->password, $karyawan->password)) {
            // Prevent Admin, Komandan, or Ketua Departemen from logging in via the regular employee form
            if ($karyawan->is_admin || $karyawan->is_komandan || $karyawan->is_ketua_departemen) {
                return redirect()->route('login')->withErrors([
                    'login' => 'Akun Anda harus login melalui halaman login panel.',
                ]);
            }

            Auth::guard('karyawan')->login($karyawan);
            return redirect()->route('dashboard')->with('success', 'Login berhasil!');
        }

        return redirect()->route('login')->withErrors([
            'login' => 'NIK atau password salah!',
        ]);
    }

    /**
     * Menampilkan form login ADMIN / KOMANDAN / KETUA DEPARTEMEN.
     */
    public function showAdminLoginForm(Request $request)
    {
        if (Auth::guard('karyawan')->check()) {
            $user = Auth::guard('karyawan')->user();
            if ($user->is_admin) {
                return redirect()->route('admin.dashboard');
            } elseif ($user->is_komandan) {
                return redirect()->route('komandan.dashboard');
            } elseif ($user->is_ketua_departemen) {
                return redirect()->route('ketua-departemen.dashboard');
            }
            // If a regular Petugas Keamanan is logged in and tries to access admin/komandan login,
            // log them out first.
            Auth::guard('karyawan')->logout();
            $request->session()->invalidate();
            $request->session()->regenerateToken();
            return redirect()->route('admin.login.form')->with('info', 'Anda telah logout. Silakan login kembali.');
        }
        return view('auth.admin-login');
    }

    /**
     * Memproses login ADMIN / KOMANDAN / KETUA DEPARTEMEN.
     */
    public function prosesAdminLogin(Request $request)
    {
        $request->validate([
            'nik' => 'required|string',
            'password' => 'required|string',
        ]);

        $karyawan = Karyawan::where('nik', $request->nik)->first();

        if ($karyawan && Hash::check($request->password, $karyawan->password)) {
            if ($karyawan->is_admin) {
                Auth::guard('karyawan')->login($karyawan);
                return redirect()->route('admin.dashboard')->with('success', 'Login sebagai Admin berhasil!');
            } elseif ($karyawan->is_komandan) {
                Auth::guard('karyawan')->login($karyawan);
                return redirect()->route('komandan.dashboard')->with('success', 'Login sebagai Komandan berhasil!');
            } elseif ($karyawan->is_ketua_departemen) {
                Auth::guard('karyawan')->login($karyawan);
                return redirect()->route('ketua-departemen.dashboard')->with('success', 'Login sebagai Ketua Departemen berhasil!');
            }
             else {
                // NIK and password are correct, but the user does not have a panel role
                return redirect()->route('admin.login.form')->withErrors([
                    'login' => 'Akun ini tidak memiliki akses ke panel.',
                ]);
            }
        }

        return redirect()->route('admin.login.form')->withErrors([
            'login' => 'NIK atau password salah!',
        ]);
    }

    // Proses logout
    public function proseslogout(Request $request)
    {
        $user = Auth::guard('karyawan')->user();
        $isPanelUser = $user && ($user->is_admin || $user->is_komandan || $user->is_ketua_departemen);

        Auth::guard('karyawan')->logout();
        $request->session()->invalidate();
        $request->session()->regenerateToken();

        if ($isPanelUser) {
            return redirect()->route('admin.login.form')->with('success', 'Anda berhasil logout.');
        }
        return redirect()->route('login')->with('success', 'Anda berhasil logout.');
    }

    // Verifikasi wajah (API) - unchanged, assuming for Petugas Keamanan
    public function verifyFace(Request $request)
    {
        // Ambil data dan decode descriptor jika perlu
        $data = $request->all();
        if (isset($data['face_descriptor']) && is_string($data['face_descriptor'])) {
            $decodedDescriptor = json_decode($data['face_descriptor'], true);
            if (json_last_error() === JSON_ERROR_NONE) {
                $data['face_descriptor'] = $decodedDescriptor;
            }
        }

        $validator = Validator::make($data, [
            'nik' => 'required|string|exists:karyawans,nik',
            'face_descriptor' => 'required|array'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'success' => false,
                'message' => 'Input tidak valid',
                'errors' => $validator->errors()
            ], 400);
        }

        try {
            // Panggil service dengan descriptor
            $verificationResult = $this->faceRecognitionService->verifyFaceDescriptor(
                $data['face_descriptor'],
                $data['nik']
            );
            
            // Kembalikan hasil dari service
            return response()->json($verificationResult);

        } catch (\Exception $e) {
            Log::error('Face verification API error: ' . $e->getMessage());
            return response()->json([
                'success' => false,
                'match' => false,
                'message' => 'Terjadi kesalahan internal saat verifikasi wajah.'
            ], 500);
        }
    }

    /**
     * Menyimpan status verifikasi wajah ke session.
     */
    public function setFaceVerifiedSession(Request $request)
    {
        $request->validate([
            'verified' => 'required|boolean',
            'timestamp' => 'required|numeric'
        ]);

        Session::put('face_verified_status', $request->verified);
        Session::put('face_verified_timestamp', $request->timestamp);

        return response()->json(['success' => true, 'message' => 'Status verifikasi wajah disimpan.']);
    }

    /**
     * Memeriksa status verifikasi wajah dari session.
     */
    public function checkFaceVerifiedSession(Request $request)
    {
        $verified = Session::get('face_verified_status', false);
        $timestamp = Session::get('face_verified_timestamp', 0);

        // Tentukan batas waktu validitas verifikasi (misalnya 5 menit)
        $validityDuration = 5 * 60 * 1000; // 5 menit dalam milidetik

        if ($verified && (microtime(true) * 1000 - $timestamp) < $validityDuration) {
            return response()->json(['verified' => true]);
        }

        // Jika tidak valid atau sudah kadaluarsa, hapus session
        Session::forget(['face_verified_status', 'face_verified_timestamp']);
        return response()->json(['verified' => false, 'message' => 'Verifikasi wajah tidak valid atau sudah kadaluarsa. Silakan verifikasi ulang.'], 401);
    }
}

app\Http\Controllers\Controller.php
<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}

app\Http\Controllers\DashboardController.php
<?php
// File: app/Http/Controllers/DashboardController.php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use App\Models\Presensi;
use App\Models\JadwalShift;
use Carbon\Carbon;

class DashboardController extends Controller
{
    public function index()
    {
        $nik = Auth::guard('karyawan')->user()->nik;

        // --- PERBAIKAN LOGIKA SHIFT MALAM & SHIFT BIASA v5 ---
        // 1. Cari presensi yang masih aktif (belum absen pulang) dalam 48 jam terakhir
        //    (diperluas untuk menangani shift malam yang lintas hari)
        $presensihariini = Presensi::where('nik', $nik)
            ->whereNull('jam_out')
            ->where('tgl_presensi', '>=', now()->subHours(48))
            ->orderBy('tgl_presensi', 'desc')
            ->first();

        // 2. Jika tidak ada yang aktif, cek jadwal yang berlaku dan lihat apakah sudah ada presensi selesai
        if (!$presensihariini) {
            $jadwalAktif = $this->getJadwalAktifUntukDashboard($nik);
            
            if ($jadwalAktif) {
                // Query berdasarkan tanggal jadwal yang tepat
                $tanggalJadwalUTC = new \MongoDB\BSON\UTCDateTime($jadwalAktif->tanggal->copy()->startOfDay()->timestamp * 1000);
                $presensihariini = Presensi::where('nik', $nik)
                    ->where('tgl_presensi', $tanggalJadwalUTC)
                    ->whereNotNull('jam_out')
                    ->first();
            }
        }
        // --- AKHIR PERBAIKAN ---

        $bulanini = date("m");
        $tahunini = date("Y");
        
        $historibulanini = Presensi::where('nik', $nik)
            ->whereMonth('tgl_presensi', $bulanini)
            ->whereYear('tgl_presensi', $tahunini)
            ->orderBy('tgl_presensi')
            ->get();
            
        $rekappresensi = Presensi::raw(function ($collection) use ($nik, $bulanini, $tahunini) {
            $startOfMonth = Carbon::createFromDate($tahunini, $bulanini, 1)->startOfMonth();
            $endOfMonth = Carbon::createFromDate($tahunini, $bulanini, 1)->endOfMonth();
            return $collection->aggregate([
                ['$match' => [
                    'nik' => $nik,
                    'tgl_presensi' => [
                        '$gte' => new \MongoDB\BSON\UTCDateTime($startOfMonth->timestamp * 1000),
                        '$lte' => new \MongoDB\BSON\UTCDateTime($endOfMonth->timestamp * 1000)
                    ]
                ]],
                ['$group' => ['_id' => null, 'jmlhadir' => ['$sum' => 1]]]
            ]);
        })->first();

        $startOfDayForLeaderboard = Carbon::today()->startOfDay();
        $endOfDayForLeaderboard = Carbon::today()->endOfDay();
        $leaderboard = Presensi::whereBetween('tgl_presensi', [$startOfDayForLeaderboard, $endOfDayForLeaderboard])
            ->with('karyawan') // Eager load
            ->orderBy('jam_in', 'asc')
            ->get();

        return view('dashboard.dashboard', compact('presensihariini', 'historibulanini', 'rekappresensi', 'leaderboard'));
    }

    private function getJadwalAktifUntukDashboard($nik)
    {
        $waktuSekarang = Carbon::now();
        
        // Cek jadwal kemarin untuk shift malam yang masih berlanjut
        $jadwalKemarin = JadwalShift::where('karyawan_nik', $nik)
                                    ->where('tanggal', new \MongoDB\BSON\UTCDateTime($waktuSekarang->copy()->subDay()->startOfDay()->timestamp * 1000))
                                    ->first();

        if ($jadwalKemarin && $jadwalKemarin->jam_mulai && $jadwalKemarin->jam_selesai) {
            $jamMulaiKemarin = Carbon::parse($jadwalKemarin->tanggal->format('Y-m-d') . ' ' . $jadwalKemarin->jam_mulai);
            $jamSelesaiKemarin = Carbon::parse($jadwalKemarin->tanggal->format('Y-m-d') . ' ' . $jadwalKemarin->jam_selesai);
            
            // Jika jam selesai lebih kecil dari jam mulai, berarti shift melewati tengah malam
            if ($jamSelesaiKemarin->lt($jamMulaiKemarin)) {
                $jamSelesaiKemarin->addDay();
                // Jika waktu sekarang masih dalam rentang shift kemarin, return jadwal kemarin
                if ($waktuSekarang->lt($jamSelesaiKemarin)) {
                    return $jadwalKemarin;
                }
            }
        }

        // Jika tidak ada shift kemarin yang masih aktif, cek jadwal hari ini
        $jadwalHariIni = JadwalShift::where('karyawan_nik', $nik)
                                    ->where('tanggal', new \MongoDB\BSON\UTCDateTime($waktuSekarang->copy()->startOfDay()->timestamp * 1000))
                                    ->first();
        
        return $jadwalHariIni;
    }
}

app\Http\Controllers\FaceRecognitionController.php
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Validator;
use App\Services\FaceRecognitionService;
use App\Models\Karyawan;
use Carbon\Carbon;

class FaceRecognitionController extends Controller
{
    protected $faceRecognitionService;

    public function __construct(FaceRecognitionService $faceRecognitionService)
    {
        $this->faceRecognitionService = $faceRecognitionService;
    }

    public function verifyFace(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'face_image' => 'required|string',
            'nik' => 'required|string'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'success' => false,
                'message' => 'Invalid input',
                'errors' => $validator->errors()
            ], 400);
        }

        try {
            $startTime = microtime(true);
            $karyawan = Karyawan::where('nik', $request->nik)->first();

            if (!$karyawan || empty($karyawan->face_embedding)) {
                return response()->json([
                    'success' => false,
                    'message' => 'Wajah belum terdaftar'
                ], 404);
            }

            // Check for spoofing if enabled
            if (config('face_recognition.enable_anti_spoofing')) {
                $isReal = $this->faceRecognitionService->checkAntiSpoofing($request->face_image);
                if (!$isReal) {
                    return response()->json([
                        'success' => false,
                        'message' => 'Deteksi upaya spoofing (wajah tidak asli)'
                    ], 403);
                }
            }

            // Extract embedding from uploaded image
            $image_parts = explode(";base64,", $request->face_image);
            $image_base64 = base64_decode($image_parts[1]);
            $uploadedEmbedding = $this->faceRecognitionService->generateFaceEmbedding($image_base64);

            // Calculate similarity score
            $similarity = $this->faceRecognitionService->calculateSimilarity(
                $uploadedEmbedding['embedding'],
                $karyawan->face_embedding['embedding']
            );

            $threshold = config('face_recognition.threshold');
            $isMatch = $similarity >= $threshold;

            // Log verification result if enabled
            if (config('face_recognition.log_verification_results')) {
                $this->faceRecognitionService->logVerificationResult([
                    'nik' => $request->nik,
                    'similarity' => $similarity,
                    'threshold' => $threshold,
                    'is_match' => $isMatch,
                    'processing_time' => microtime(true) - $startTime,
                    'timestamp' => Carbon::now()
                ]);
            }

            return response()->json([
                'success' => true,
                'match' => $isMatch,
                'similarity' => $similarity,
                'threshold' => $threshold,
                'message' => $isMatch ? 'Wajah terverifikasi' : 'Wajah tidak cocok'
            ]);
        } catch (\Exception $e) {
            Log::error('Face verification error: ' . $e->getMessage());
            return response()->json([
                'success' => false,
                'message' => 'Terjadi kesalahan saat verifikasi wajah'
            ], 500);
        }
    }

    /**
     * Generate face embedding using FaceRecognitionService
     *
     * @param string $imageData Raw image data
     * @param bool $checkSpoofing Whether to perform anti-spoofing check
     * @return array
     */
    public function generateFaceEmbedding($imageData, $checkSpoofing = false)
    {
        return $this->faceRecognitionService->generateFaceEmbedding($imageData, $checkSpoofing);
    }

    /**
     * Calculate similarity between two embeddings (delegated to service)
     */
    private function calculateSimilarity($embedding1, $embedding2)
    {
        return $this->faceRecognitionService->calculateSimilarity($embedding1, $embedding2);
    }

    /**
     * Check for face spoofing (delegated to service)
     */
    private function checkAntiSpoofing($imageData)
    {
        return $this->faceRecognitionService->checkAntiSpoofing($imageData);
    }

    /**
     * Log verification result (delegated to service)
     */
    private function logVerificationResult($data)
    {
        $this->faceRecognitionService->logVerificationResult($data);
    }
}

app\Http\Controllers\LaporanController.php
<?php

//app\Http\Controllers\LaporanController.php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Laporan;
use App\Models\Karyawan;
use App\Services\FaceRecognitionService;
use Illuminate\Support\Facades\Auth;
use MongoDB\BSON\UTCDateTime;
use Carbon\Carbon;
use Illuminate\Support\Facades\Validator;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;

class LaporanController extends Controller
{
    protected $faceRecognitionService;

    public function __construct(FaceRecognitionService $faceRecognitionService)
    {
        $this->faceRecognitionService = $faceRecognitionService;
    }

    public function index()
    {
        $nik = Auth::guard('karyawan')->user()->nik;
        $laporan = Laporan::where('nik', $nik)
                          ->orderBy('created_at', 'desc')
                          ->get()
                          ->map(function($item) {
                              if ($item->tanggal instanceof UTCDateTime) {
                                  $item->tanggal_formatted = Carbon::parse($item->tanggal->toDateTime())->isoFormat('D MMM YY');
                              } elseif ($item->tanggal instanceof \DateTimeInterface) {
                                  $item->tanggal_formatted = Carbon::parse($item->tanggal)->isoFormat('D MMM YY');
                              } else {
                                  $item->tanggal_formatted = 'Tanggal tidak valid';
                              }
                              return $item;
                          });

        return view('presensi.lapor', compact('laporan'));
    }

    public function create()
    {
        $karyawan = Auth::guard('karyawan')->user();
        if (!$karyawan) {
            return redirect()->route('login')->with('error', 'Anda harus login untuk membuat laporan.');
        }

        $faceDescriptor = null;
        // Periksa apakah pengguna memiliki data wajah yang tersimpan
        if ($karyawan && !empty($karyawan->face_embedding['embedding'])) {
            // Encode descriptor ke format JSON agar bisa dibaca JavaScript
            $faceDescriptor = json_encode($karyawan->face_embedding['embedding']);
        }
        
        // Kirim variabel $faceDescriptor ke view
        return view('presensi.buatlaporan', compact('karyawan', 'faceDescriptor'));
    }

public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'tgl_laporan' => 'required|date',
            'jam' => 'required|date_format:H:i',
            'jenis_laporan' => 'required|in:harian,kegiatan,masalah',
            'keterangan' => 'required|string|max:2000',
            'lokasi' => 'required|string|max:255',
            'foto' => 'required|string', 
            'face_image' => 'required|string',
            'nik' => 'required|string|exists:karyawans,nik'
        ]);

        if ($validator->fails()) {
            return response()->json([
                'success' => false,
                'message' => 'Validasi gagal',
                'errors' => $validator->errors()
            ], 422);
        }

        if (Auth::guard('karyawan')->user()->nik !== $request->nik) {
             return response()->json([
                'success' => false,
                'message' => 'Aksi tidak diizinkan. NIK tidak sesuai.'
            ], 403);
        }
        
        // =====================================================================
        // BLOK VERIFIKASI WAJAH DI SERVER DIHAPUS DARI SINI
        // Server sekarang langsung percaya hasil verifikasi dari browser
        // =====================================================================

        try {
            $currentDate = now();
            $yearMonth = $currentDate->format('Y/m');
            
            $fotoPath = $this->processBase64Image(
                $request->foto,
                "laporans/{$yearMonth}/evidence",
                'evidence_' . $request->nik . '_' . time()
            );
            
            $faceImagePath = $this->processBase64Image(
                $request->face_image,
                "laporans/{$yearMonth}/verification",
                'faceverify_' . $request->nik . '_' . time()
            );

            $laporan = new Laporan([
                'nik' => $request->nik,
                'tanggal' => new UTCDateTime(Carbon::parse($request->tgl_laporan)->timestamp * 1000),
                'jam' => $request->jam,
                'jenis_laporan' => $request->jenis_laporan,
                'keterangan' => $request->keterangan,
                'lokasi' => $request->lokasi,
                'foto' => $fotoPath['storage_path'], 
                'face_verification_image' => $faceImagePath['storage_path'], 
                'created_at' => new UTCDateTime($currentDate->timestamp * 1000),
                'updated_at' => new UTCDateTime($currentDate->timestamp * 1000),
                'status_admin' => null, 
                'catatan_admin' => null,
            ]);
            
            $laporan->save();

            return response()->json([
                'success' => true,
                'message' => 'Laporan berhasil disimpan',
                'data' => $laporan,
                'redirect_url' => route('laporan.index') 
            ]);

        } catch (\Exception $e) {
            Log::error('Laporan Store Error: '.$e->getMessage().' in '.$e->getFile().':'.$e->getLine(), ['trace' => $e->getTraceAsString()]);
            
            return response()->json([
                'success' => false,
                'message' => 'Gagal menyimpan laporan. Silakan coba lagi.',
                'error' => config('app.debug') ? $e->getMessage() : 'Terjadi kesalahan internal.',
            ], 500);
        }
    }

    private function processBase64Image($base64Image, $folderPath, $fileNamePrefix = 'img_')
    {
        try {
            if (!preg_match('/^data:image\/(jpeg|png|jpg);base64,/', $base64Image, $typeMatch)) {
                throw new \Exception('Format gambar tidak valid. Hanya menerima JPEG/JPG/PNG');
            }

            $imageType = $typeMatch[1]; 
            $data = explode(',', $base64Image)[1];
            $decodedImage = base64_decode($data);

            if (!$decodedImage) {
                throw new \Exception('Gagal mendekode gambar base64');
            }

            $storageRelativePath = "{$folderPath}/{$fileNamePrefix}" . uniqid() . '.' . $imageType;
            
            Storage::disk('public')->put($storageRelativePath, $decodedImage);

            return [
                'storage_path' => $storageRelativePath, 
                'full_path' => storage_path("app/public/{$storageRelativePath}"), 
                'mime_type' => 'image/'.$imageType
            ];

        } catch (\Exception $e) {
            Log::error('Error proses gambar base64: '.$e->getMessage());
            throw $e; 
        }
    }
}

app\Http\Controllers\PatroliController.php
<?php
// File: app/Http/Controllers/PatroliController.php

namespace App\Http\Controllers;

use App\Models\Patrol;
use App\Models\PatrolPoint;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log; 
use Illuminate\Support\Facades\Storage;
use MongoDB\BSON\UTCDateTime;
use App\Helpers\FaceRecognitionHelper;

class PatroliController extends Controller
{
    /**
     * Display the patrol page for employees.
     * MODIFIED: Pass office location and radius to the view.
     */
    public function index()
    {
        $karyawan = Auth::guard('karyawan')->user();
        $activePatrol = Patrol::where('karyawan_nik', $karyawan->nik)
                               ->whereIn('status', ['aktif', 'jeda'])
                               ->orderBy('start_time', 'desc')
                               ->first();
        
        $patrolData = null;
        if ($activePatrol) {
            $currentDurationSeconds = $activePatrol->duration_seconds ?? 0;
            if ($activePatrol->status === 'aktif' && $activePatrol->updated_at) {
                $currentDurationSeconds += (now()->timestamp - $activePatrol->updated_at->timestamp);
            }

            $patrolData = [
                'id' => $activePatrol->_id,
                'status' => $activePatrol->status,
                'start_time' => $activePatrol->start_time->timestamp * 1000, 
                'total_distance_meters' => $activePatrol->total_distance_meters ?? 0,
                'duration_seconds' => $currentDurationSeconds, 
                'face_verified' => $activePatrol->face_verified ?? false, // NEW: Face verification status
                'path' => $activePatrol->points()->orderBy('timestamp', 'asc')->get(['latitude', 'longitude'])->map(function($point) {
                    return [$point->latitude, $point->longitude]; 
                })->toArray()
            ];
        }

        // Get office location and radius for the view
        $officeLocation = $karyawan->office_location;
        $officeRadius = $karyawan->office_radius;

        // NEW: Pass face descriptor for verification
        $faceDescriptor = null;
        if ($karyawan && !empty($karyawan->face_embedding['embedding'])) {
            $faceDescriptor = json_encode($karyawan->face_embedding['embedding']);
        }

        return view('patroli.index', compact('karyawan', 'patrolData', 'officeLocation', 'officeRadius', 'faceDescriptor'));
    }

    /**
     * Start a new patrol session.
     * MODIFIED: Add radius validation before starting a patrol.
     */
    public function startPatrol(Request $request)
    {
        $request->validate([
            'latitude' => 'required|numeric',
            'longitude' => 'required|numeric',
        ]);

        $karyawan = Auth::guard('karyawan')->user();

        // --- PERBAIKAN: Validasi Radius Lokasi ---
        if (empty($karyawan->office_location)) {
            return response()->json(['success' => false, 'message' => 'Patroli gagal dimulai. Lokasi kerja Anda belum diatur oleh Admin.'], 400);
        }

        $jarakResult = FaceRecognitionHelper::isWithinOfficeRadius($request->latitude, $request->longitude, $karyawan);

        if (!$jarakResult['within']) {
            return response()->json([
                'success' => false, 
                'message' => 'Patroli tidak dapat dimulai. Anda berada di luar radius lokasi kerja Anda. Jarak: ' . round($jarakResult['distance']) . 'm.'
            ], 403);
        }
        // --- AKHIR PERBAIKAN ---

        // Batalkan patroli sebelumnya yang mungkin masih aktif
        Patrol::where('karyawan_nik', $karyawan->nik)
            ->whereIn('status', ['aktif', 'jeda'])
            ->update([
                'status' => 'dibatalkan', 
                'end_time' => new UTCDateTime(now()->timestamp * 1000)
            ]);

        try {
            $patrol = Patrol::create([
                'karyawan_nik' => $karyawan->nik,
                'start_time' => new UTCDateTime(now()->timestamp * 1000),
                'status' => 'aktif',
                'total_distance_meters' => 0,
                'duration_seconds' => 0,
                'face_verified' => false, // NEW: Face verification status
                'face_verification_image' => null, // NEW: Face verification image
                'path' => []
            ]);

            return response()->json([
                'success' => true,
                'patrol_id' => $patrol->_id,
                'start_time' => $patrol->start_time->timestamp * 1000, 
                'message' => 'Patroli berhasil dimulai.'
            ]);
        } catch (\Exception $e) {
            Log::error('Error startPatrol: ' . $e->getMessage());
            return response()->json(['success' => false, 'message' => 'Gagal memulai patroli: ' . $e->getMessage()], 500);
        }
    }

    /**
     * NEW: Verify face for patrol
     */
    public function verifyFace(Request $request)
    {
        $request->validate([
            'patrol_id' => 'required|string',
            'face_image' => 'required|string',
        ]);

        $karyawan = Auth::guard('karyawan')->user();

        try {
            $patrol = Patrol::where('_id', $request->patrol_id)
                            ->where('karyawan_nik', $karyawan->nik)
                            ->whereIn('status', ['aktif', 'jeda'])
                            ->first();

            if (!$patrol) {
                return response()->json(['success' => false, 'message' => 'Patroli tidak ditemukan atau sudah selesai.'], 404);
            }

            if ($patrol->face_verified) {
                return response()->json(['success' => true, 'message' => 'Wajah sudah terverifikasi untuk patroli ini.']);
            }

            // Save face verification image
            $currentDate = now();
            $yearMonth = $currentDate->format('Y/m');
            
            $faceImagePath = $this->processBase64Image(
                $request->face_image,
                "patroli/{$yearMonth}/verification",
                'patrol_faceverify_' . $karyawan->nik . '_' . time()
            );

            // Update patrol with face verification
            $patrol->update([
                'face_verified' => true,
                'face_verification_image' => $faceImagePath['storage_path'],
                'face_verification_time' => new UTCDateTime($currentDate->timestamp * 1000)
            ]);

            return response()->json([
                'success' => true,
                'message' => 'Verifikasi wajah berhasil.'
            ]);

        } catch (\Exception $e) {
            Log::error('Error verifyFace: ' . $e->getMessage());
            return response()->json(['success' => false, 'message' => 'Gagal memverifikasi wajah: ' . $e->getMessage()], 500);
        }
    }

    /**
     * Store a new patrol point.
     * MODIFIED: Add radius validation before storing point.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function storePoint(Request $request)
    {
        $request->validate([
            'patrol_id' => 'required|string',
            'latitude' => 'required|numeric',
            'longitude' => 'required|numeric',
            'timestamp' => 'required|numeric', 
            'accuracy' => 'nullable|numeric',
            'speed' => 'nullable|numeric',
        ]);

        $karyawan = Auth::guard('karyawan')->user();

        try {
            $patrol = Patrol::where('_id', $request->patrol_id)
                            ->where('karyawan_nik', $karyawan->nik)
                            ->where('status', 'aktif') 
                            ->first();

            if (!$patrol) {
                return response()->json(['success' => false, 'message' => 'Patroli tidak aktif atau tidak ditemukan.'], 404);
            }

            // --- TAMBAHAN: Validasi Radius Real-time ---
            $jarakResult = FaceRecognitionHelper::isWithinOfficeRadius($request->latitude, $request->longitude, $karyawan);

            if (!$jarakResult['within']) {
                return response()->json([
                    'success' => false, 
                    'message' => 'Titik patroli tidak disimpan. Anda berada di luar radius lokasi kerja.',
                    'outside_radius' => true,
                    'distance' => round($jarakResult['distance'])
                ], 403);
            }
            // --- AKHIR TAMBAHAN ---

            PatrolPoint::create([
                'patrol_id' => $request->patrol_id,
                'karyawan_nik' => $karyawan->nik,
                'latitude' => $request->latitude,
                'longitude' => $request->longitude,
                'accuracy' => $request->accuracy,
                'speed' => $request->speed,
                'timestamp' => new UTCDateTime($request->timestamp), 
            ]);
            
            $patrol->touch(); 

            return response()->json([
                'success' => true, 
                'message' => 'Titik patroli disimpan.',
                'outside_radius' => false
            ]);
        } catch (\Exception $e) {
            Log::error('Error storePoint: ' . $e->getMessage());
            return response()->json(['success' => false, 'message' => 'Gagal menyimpan titik patroli: ' . $e->getMessage()], 500);
        }
    }

    /**
     * Check if current location is within office radius.
     * NEW METHOD: For real-time radius checking.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function checkRadius(Request $request)
    {
        $request->validate([
            'latitude' => 'required|numeric',
            'longitude' => 'required|numeric',
        ]);

        $karyawan = Auth::guard('karyawan')->user();

        if (empty($karyawan->office_location)) {
            return response()->json([
                'success' => false,
                'message' => 'Lokasi kantor belum diatur.',
                'within_radius' => false,
                'distance' => 0
            ]);
        }

        $jarakResult = FaceRecognitionHelper::isWithinOfficeRadius($request->latitude, $request->longitude, $karyawan);

        return response()->json([
            'success' => true,
            'within_radius' => $jarakResult['within'],
            'distance' => round($jarakResult['distance']),
            'message' => $jarakResult['within'] ? 'Dalam radius kerja' : 'Di luar radius kerja'
        ]);
    }

    /**
     * Pause an active patrol session.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function pausePatrol(Request $request)
    {
        $request->validate(['patrol_id' => 'required|string']);
        $karyawan = Auth::guard('karyawan')->user();

        try {
            $patrol = Patrol::where('_id', $request->patrol_id)
                            ->where('karyawan_nik', $karyawan->nik)
                            ->where('status', 'aktif')
                            ->first();

            if (!$patrol) {
                return response()->json(['success' => false, 'message' => 'Patroli tidak aktif atau tidak ditemukan untuk dijeda.'], 404);
            }

            $currentSegmentDuration = 0;
            if ($patrol->updated_at) { 
                $currentSegmentDuration = now()->timestamp - $patrol->updated_at->timestamp;
            } elseif ($patrol->start_time) { 
                $currentSegmentDuration = now()->timestamp - $patrol->start_time->timestamp;
            }
            
            $newDuration = ($patrol->duration_seconds ?? 0) + $currentSegmentDuration;

            $patrol->update([
                'status' => 'jeda',
                'duration_seconds' => $newDuration
            ]);

            return response()->json(['success' => true, 'message' => 'Patroli dijeda.']);
        } catch (\Exception $e) {
            Log::error('Error pausePatrol: ' . $e->getMessage());
            return response()->json(['success' => false, 'message' => 'Gagal menjeda patroli: ' . $e->getMessage()], 500);
        }
    }

    /**
     * Resume a paused patrol session.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function resumePatrol(Request $request)
    {
        $request->validate(['patrol_id' => 'required|string']);
        $karyawan = Auth::guard('karyawan')->user();

        try {
            $patrol = Patrol::where('_id', $request->patrol_id)
                            ->where('karyawan_nik', $karyawan->nik)
                            ->where('status', 'jeda')
                            ->first();

            if (!$patrol) {
                return response()->json(['success' => false, 'message' => 'Patroli tidak dijeda atau tidak ditemukan untuk dilanjutkan.'], 404);
            }
            $patrol->update(['status' => 'aktif']); 

            return response()->json(['success' => true, 'message' => 'Patroli dilanjutkan.']);
        } catch (\Exception $e) {
            Log::error('Error resumePatrol: ' . $e->getMessage());
            return response()->json(['success' => false, 'message' => 'Gagal melanjutkan patroli: ' . $e->getMessage()], 500);
        }
    }

    /**
     * Stop an active or paused patrol session.
     * MODIFIED: Add face verification check before allowing stop
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function stopPatrol(Request $request)
    {
        $request->validate([
            'patrol_id' => 'required|string',
            'total_distance_meters' => 'required|numeric',
            'duration_seconds' => 'required|integer',
        ]);
        $karyawan = Auth::guard('karyawan')->user();

        try {
            $patrol = Patrol::where('_id', $request->patrol_id)
                            ->where('karyawan_nik', $karyawan->nik)
                            ->whereIn('status', ['aktif', 'jeda'])
                            ->first();

            if (!$patrol) {
                return response()->json(['success' => false, 'message' => 'Patroli tidak ditemukan atau sudah selesai.'], 404);
            }

            // NEW: Check if face verification is required
            if (!$patrol->face_verified) {
                return response()->json([
                    'success' => false, 
                    'message' => 'Patroli tidak dapat dihentikan. Anda harus melakukan verifikasi wajah terlebih dahulu.',
                    'face_verification_required' => true
                ], 403);
            }

            $points = PatrolPoint::where('patrol_id', $patrol->_id)
                                ->orderBy('timestamp', 'asc')
                                ->get(['longitude', 'latitude']); 

            $pathCoordinates = $points->map(function ($point) {
                return [$point->longitude, $point->latitude]; 
            })->toArray();

            $finalDurationSeconds = (int) $request->duration_seconds;
            
            $updateData = [
                'status' => 'selesai',
                'end_time' => new UTCDateTime(now()->timestamp * 1000),
                'total_distance_meters' => (float) $request->total_distance_meters,
                'duration_seconds' => $finalDurationSeconds,
                'path' => $pathCoordinates 
            ];
            
            $patrol->update($updateData);

            return response()->json(['success' => true, 'message' => 'Patroli berhasil dihentikan dan disimpan.']);
        } catch (\Exception $e) {
            Log::error('Error stopPatrol: ' . $e->getMessage() . ' Line: ' . $e->getLine() . ' File: ' . $e->getFile() );
            return response()->json(['success' => false, 'message' => 'Gagal menghentikan patroli: ' . $e->getMessage()], 500);
        }
    }

    /**
     * Display patrol history for the logged-in employee.
     *
     * @return \Illuminate\Http\Response
     */
    public function historiPatroli(Request $request)
    {
        $request->session()->forget('error');

        $karyawan = Auth::guard('karyawan')->user();
        $patrols = Patrol::where('karyawan_nik', $karyawan->nik)
                         ->where('status', 'selesai') 
                         ->orderBy('start_time', 'desc')
                         ->paginate(10); 

        return view('patroli.histori', compact('patrols', 'karyawan'));
    }

    /**
     * Display detail of a specific patrol.
     *
     * @param  string  $patrolId
     * @return \Illuminate\View\View|\Illuminate\Http\RedirectResponse
     */
    public function detailHistoriPatroli($patrolId)
    {
        $karyawan = Auth::guard('karyawan')->user();
        $patrol = Patrol::where('_id', $patrolId)
                        ->where('karyawan_nik', $karyawan->nik)
                        ->first();

        if (!$patrol) {
            return redirect()->route('patroli.histori')->with('error', 'Data patroli tidak ditemukan.');
        }
        
        $pathForMap = collect($patrol->path)->map(function ($point) {
            if (is_array($point) && count($point) >= 2) {
                return [$point[1], $point[0]];
            }
            return null;
        })->filter()->toArray();

        return view('patroli.detail', compact('patrol', 'karyawan', 'pathForMap'));
    }

    /**
     * NEW: Process base64 image for face verification
     */
    private function processBase64Image($base64Image, $folderPath, $fileNamePrefix = 'img_')
    {
        try {
            if (!preg_match('/^data:image\/(jpeg|png|jpg);base64,/', $base64Image, $typeMatch)) {
                throw new \Exception('Format gambar tidak valid. Hanya menerima JPEG/JPG/PNG');
            }

            $imageType = $typeMatch[1]; 
            $data = explode(',', $base64Image)[1];
            $decodedImage = base64_decode($data);

            if (!$decodedImage) {
                throw new \Exception('Gagal mendekode gambar base64');
            }

            $storageRelativePath = "{$folderPath}/{$fileNamePrefix}" . uniqid() . '.' . $imageType;
            
            Storage::disk('public')->put($storageRelativePath, $decodedImage);

            return [
                'storage_path' => $storageRelativePath, 
                'full_path' => storage_path("app/public/{$storageRelativePath}"), 
                'mime_type' => 'image/'.$imageType
            ];

        } catch (\Exception $e) {
            Log::error('Error proses gambar base64: '.$e->getMessage());
            throw $e; 
        }
    }
}

app\Http\Controllers\PresensiController.php
<?php
// File: app/Http/Controllers/PresensiController.php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;
use App\Models\Presensi;
use App\Models\Karyawan;
use App\Models\JadwalShift;
use MongoDB\BSON\UTCDateTime;
use Illuminate\Support\Facades\Validator;
use Carbon\Carbon;
use App\Helpers\FaceRecognitionHelper;
use App\Services\FaceRecognitionService;
use Illuminate\Support\Facades\Redirect;
use Illuminate\Support\Facades\Hash;

class PresensiController extends Controller
{
    protected $faceRecognitionService;

    public function __construct(FaceRecognitionService $faceRecognitionService)
    {
        $this->faceRecognitionService = $faceRecognitionService;
    }

    private function getJadwalAktif($nik)
    {
        $waktuSekarang = Carbon::now();
        
        // Cek jadwal kemarin untuk shift malam yang masih berlanjut
        $jadwalKemarin = JadwalShift::where('karyawan_nik', $nik)
                                    ->where('tanggal', new UTCDateTime($waktuSekarang->copy()->subDay()->startOfDay()->timestamp * 1000))
                                    ->first();

        if ($jadwalKemarin && $jadwalKemarin->jam_mulai && $jadwalKemarin->jam_selesai) {
            $jamMulaiKemarin = Carbon::parse($jadwalKemarin->tanggal->format('Y-m-d') . ' ' . $jadwalKemarin->jam_mulai);
            $jamSelesaiKemarin = Carbon::parse($jadwalKemarin->tanggal->format('Y-m-d') . ' ' . $jadwalKemarin->jam_selesai);
            
            // Jika jam selesai lebih kecil dari jam mulai, berarti shift melewati tengah malam
            if ($jamSelesaiKemarin->lt($jamMulaiKemarin)) {
                $jamSelesaiKemarin->addDay();
                // Jika waktu sekarang masih dalam rentang shift kemarin, return jadwal kemarin
                if ($waktuSekarang->lt($jamSelesaiKemarin)) {
                    return $jadwalKemarin;
                }
            }
        }

        // Jika tidak ada shift kemarin yang masih aktif, cek jadwal hari ini
        $jadwalHariIni = JadwalShift::where('karyawan_nik', $nik)
                                    ->where('tanggal', new UTCDateTime($waktuSekarang->copy()->startOfDay()->timestamp * 1000))
                                    ->first();
        
        return $jadwalHariIni;
    }

    public function create()
    {
        $user = Auth::guard('karyawan')->user();
        $pesanJadwal = null; 
        $faceDescriptor = null;
        $waktuSekarang = Carbon::now();

        if ($user && !empty($user->face_embedding['embedding'])) {
            $faceDescriptor = json_encode($user->face_embedding['embedding']);
        }

        // PERBAIKAN: Cari presensi aktif dengan rentang waktu yang lebih luas (48 jam)
        // untuk menangani shift malam yang bisa berlangsung lintas hari
        $presensiAktif = Presensi::where('nik', $user->nik)
                        ->whereNotNull('jam_in')
                        ->whereNull('jam_out')
                        ->where('tgl_presensi', '>=', new UTCDateTime($waktuSekarang->copy()->subHours(48)->timestamp * 1000))
                        ->orderBy('tgl_presensi', 'desc')
                        ->first();
        
        // Jika tidak ada presensi aktif, cek apakah ada jadwal yang sudah selesai hari ini
        if (!$presensiAktif) {
            $jadwalHariIni = $this->getJadwalAktif($user->nik);
            if ($jadwalHariIni) {
                $tanggalJadwalUTC = new UTCDateTime($jadwalHariIni->tanggal->copy()->startOfDay()->timestamp * 1000);
                $presensiSelesaiHariIni = Presensi::where('nik', $user->nik)
                    ->where('tgl_presensi', $tanggalJadwalUTC)
                    ->whereNotNull('jam_out')
                    ->first();
                
                if ($presensiSelesaiHariIni) {
                    $presensiAktif = $presensiSelesaiHariIni;
                }
            }
        }

        if ($user->jabatan === 'Petugas Keamanan') {
            if (empty($user->office_location)) {
                session()->flash('error_presensi_create', 'Lokasi kantor Anda belum ditentukan. Harap hubungi Komandan atau Admin.');
            }
            
            if (!$presensiAktif || !$presensiAktif->jam_out) {
                // PERBAIKAN: Tentukan jadwal yang tepat untuk validasi
                if ($presensiAktif) {
                    // Jika ada presensi aktif, gunakan jadwal dari tanggal presensi tersebut
                    $jadwalUntukValidasi = JadwalShift::where('karyawan_nik', $user->nik)
                        ->where('tanggal', $presensiAktif->tgl_presensi)
                        ->first();
                } else {
                    // Jika tidak ada presensi aktif, cari jadwal yang sedang berlaku
                    $jadwalUntukValidasi = $this->getJadwalAktif($user->nik);
                }

                if (!$jadwalUntukValidasi) {
                    if (!$presensiAktif) {
                        $pesanJadwal = "Anda tidak memiliki jadwal shift aktif saat ini. Presensi tidak dapat dilakukan.";
                    }
                } elseif (strtoupper($jadwalUntukValidasi->shift_nama) === 'LIBUR') {
                    if (!$presensiAktif) {
                        $pesanJadwal = "Anda dijadwalkan LIBUR hari ini. Presensi tidak dapat dilakukan.";
                    }
                } else {
                    $tanggalJadwal = Carbon::parse($jadwalUntukValidasi->tanggal);
                    $jamMulai = Carbon::parse($tanggalJadwal->format('Y-m-d') . ' ' . $jadwalUntukValidasi->jam_mulai);
                    $jamSelesai = Carbon::parse($tanggalJadwal->format('Y-m-d') . ' ' . $jadwalUntukValidasi->jam_selesai);

                    // Handle shift malam (jam selesai < jam mulai)
                    if ($jamSelesai->lt($jamMulai)) {
                        $jamSelesai->addDay();
                    }

                    if ($presensiAktif) {
                        // Jika sudah ada presensi aktif, berarti ini untuk absen pulang
                        if ($waktuSekarang->lt($jamSelesai)) {
                            $pesanJadwal = "Anda baru dapat melakukan absen pulang setelah shift berakhir pada pukul " . $jamSelesai->format('H:i') . ".";
                        }
                    } else { 
                        // Jika belum ada presensi aktif, ini untuk absen masuk
                        // PERBAIKAN: Untuk shift malam, izinkan absen masuk dari jam mulai hingga jam selesai (lintas hari)
                        $sekarangDalamShift = $waktuSekarang->between($jamMulai, $jamSelesai);
                        
                        if (!$sekarangDalamShift) {
                            $pesanJadwal = "Absen masuk hanya bisa dilakukan selama jam shift Anda ({$jamMulai->format('H:i')} - {$jamSelesai->format('H:i')}).";
                        }
                    }
                }
            } else {
                $pesanJadwal = "Anda sudah menyelesaikan presensi untuk shift ini.";
            }
        }

        return view('presensi.create', compact('presensiAktif', 'user', 'pesanJadwal', 'faceDescriptor'));
    }

    public function store(Request $request)
    {
        $validator = Validator::make($request->all(), [
            'lokasi' => 'required|string',
            'image' => 'required|string',
            'nik' => 'required|string|exists:karyawans,nik',
        ]);

        if ($validator->fails()) {
            return response()->json(['error' => $validator->errors()->first()], 400);
        }

        $user = Karyawan::where('nik', $request->nik)->firstOrFail();
        $waktuSekarang = Carbon::now();
        
        // PERBAIKAN: Cari presensi aktif dengan rentang waktu yang lebih luas (48 jam)
        $presensiAktif = Presensi::where('nik', $user->nik)
            ->whereNotNull('jam_in')
            ->whereNull('jam_out')
            ->where('tgl_presensi', '>=', new UTCDateTime($waktuSekarang->copy()->subHours(48)->timestamp * 1000))
            ->orderBy('tgl_presensi', 'desc')
            ->first();
        
        $isClockOutAction = !is_null($presensiAktif);
        
        // PERBAIKAN: Tentukan jadwal yang tepat untuk validasi
        if ($isClockOutAction) {
            // Jika ada presensi aktif, gunakan jadwal dari tanggal presensi tersebut
            $jadwalUntukValidasi = JadwalShift::where('karyawan_nik', $user->nik)
                ->where('tanggal', $presensiAktif->tgl_presensi)
                ->first();
        } else {
            // Jika tidak ada presensi aktif, cari jadwal yang sedang berlaku
            $jadwalUntukValidasi = $this->getJadwalAktif($user->nik);
        }

        if ($user->jabatan === 'Petugas Keamanan') {
            if (!$jadwalUntukValidasi) {
                return response()->json(['error' => 'Presensi ditolak. Jadwal shift Anda tidak ditemukan.'], 403);
            }
            if (strtoupper($jadwalUntukValidasi->shift_nama) === 'LIBUR') {
                return response()->json(['error' => 'Presensi ditolak. Anda dijadwalkan LIBUR.'], 403);
            }

            $tanggalJadwal = Carbon::parse($jadwalUntukValidasi->tanggal);
            $jamMulai = Carbon::parse($tanggalJadwal->format('Y-m-d') . ' ' . $jadwalUntukValidasi->jam_mulai);
            $jamSelesai = Carbon::parse($tanggalJadwal->format('Y-m-d') . ' ' . $jadwalUntukValidasi->jam_selesai);

            // Handle shift malam
            if ($jamSelesai->lt($jamMulai)) {
                $jamSelesai->addDay();
            }

            if ($isClockOutAction) {
                // Validasi waktu absen pulang - harus setelah jam selesai shift
                if ($waktuSekarang->lt($jamSelesai)) {
                    return response()->json(['error' => "Absen pulang hanya bisa dilakukan setelah shift berakhir pada pukul {$jamSelesai->format('H:i')}."], 403);
                }
            } else {
                // Validasi waktu absen masuk - harus dalam rentang shift
                $sekarangDalamShift = $waktuSekarang->between($jamMulai, $jamSelesai);
                
                if (!$sekarangDalamShift) {
                    return response()->json(['error' => "Absen masuk hanya bisa dilakukan selama jam shift Anda ({$jamMulai->format('H:i')} - {$jamSelesai->format('H:i')})."], 403);
                }
            }
        }

        if ($user->jabatan === 'Petugas Keamanan') {
            if (empty($user->office_location)) {
                return response()->json(['error' => 'Lokasi kantor Anda belum ditentukan.'], 400);
            }
            $lokasiuser = explode(",", $request->lokasi);
            if (count($lokasiuser) < 2 || !is_numeric($lokasiuser[0]) || !is_numeric($lokasiuser[1])) {
                return response()->json(['error' => 'Format lokasi tidak valid.'], 400);
            }
            $jarakResult = FaceRecognitionHelper::isWithinOfficeRadius(floatval($lokasiuser[0]), floatval($lokasiuser[1]), $user);
            if (!$jarakResult['within']) {
                return response()->json(['error' => "Anda berada di luar radius kantor. Jarak: " . round($jarakResult['distance']) . "m."], 400);
            }
        }
        
        $jam_sekarang_str = $waktuSekarang->format("H:i:s");
        
        if ($isClockOutAction && !empty($presensiAktif->jam_out) && $presensiAktif->jam_out !== '00:00:00') {
             return response()->json(['error' => 'Anda sudah melakukan presensi masuk dan pulang untuk shift ini.'], 400);
        }

        $tanggalFile = $isClockOutAction ? Carbon::parse($presensiAktif->tgl_presensi)->format('Y-m-d') : Carbon::parse($jadwalUntukValidasi->tanggal)->format('Y-m-d');
        $actionType = $isClockOutAction ? "out" : "in";
        $fileName = "{$user->nik}-{$tanggalFile}-{$actionType}.png";
        $folderPath = "uploads/absensi/";
        $fullPath = $folderPath . $fileName;

        $image_parts = explode(";base64,", $request->image);
        if(count($image_parts) < 2){ return response()->json(['error' => 'Format gambar tidak valid.'], 400); }
        $image_base64 = base64_decode($image_parts[1]);
        
        try {
            Storage::disk('public')->put($fullPath, $image_base64);
            $savedPath = $fullPath;

            if ($isClockOutAction) {
                $presensiAktif->update([
                    "jam_out" => $jam_sekarang_str,
                    "foto_out" => $savedPath,
                    "lokasi_out" => $request->lokasi
                ]);
                return response()->json(['success' => 'Terimakasih, hati-hati di jalan!', 'status' => 'out', 'redirect_url' => url('/dashboard')]);
            } else {
                Presensi::updateOrCreate(
                    [
                        'nik' => $user->nik,
                        'tgl_presensi' => new UTCDateTime(Carbon::parse($jadwalUntukValidasi->tanggal)->startOfDay()->timestamp * 1000)
                    ],
                    [
                        'jam_in' => $jam_sekarang_str,
                        'foto_in' => $savedPath,
                        'lokasi_in' => $request->lokasi,
                        'jam_out' => null,
                        'foto_out' => null,
                        'lokasi_out' => null
                    ]
                );
                return response()->json(['success' => 'Terimakasih, selamat bekerja!', 'status' => 'in', 'redirect_url' => url('/dashboard')]);
            }
        } catch (\Exception $e) {
            Log::error('Kesalahan saat menyimpan presensi: ' . $e->getMessage(), ['trace' => $e->getTraceAsString()]);
            return response()->json(['error' => 'Gagal menyimpan presensi.'], 500);
        }
    }
    
    public function updateprofile(Request $request)
    {
        $nik = Auth::guard('karyawan')->user()->nik;
        $karyawan = Karyawan::where('nik', $nik)->firstOrFail();
        $validator = Validator::make($request->all(), [
            'nama_lengkap' => 'required|string|max:255',
            'no_hp' => 'required|string|max:15',
            'email' => 'nullable|email|max:255|unique:karyawans,email,' . $karyawan->_id . ',_id',
            'password' => 'nullable|string|min:6|confirmed',
            'foto' => 'nullable|image|mimes:jpeg,png,jpg|max:2048'
        ]);
        if ($validator->fails()) { return Redirect::back()->withErrors($validator)->withInput(); }
        $dataToUpdate = ['nama_lengkap' => $request->nama_lengkap, 'no_hp' => $request->no_hp, 'email' => $request->email];
        if ($request->filled('password')) { $dataToUpdate['password'] = Hash::make($request->password); }
        if ($request->hasFile('foto')) {
            if ($karyawan->foto) { Storage::disk('public')->delete($karyawan->foto); }
            $dataToUpdate['foto'] = $request->file('foto')->store('uploads/karyawan', 'public');
        }
        $karyawan->update($dataToUpdate);
        return Redirect::back()->with(['success' => 'Data Berhasil Diupdate']);
    }

    public function histori()
    {
        $namabulan = ["","Januari","Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"];
        return view('presensi.histori', compact('namabulan'));
    }

    public function gethistori(Request $request)
    {
        $bulan = (int) $request->bulan;
        $tahun = (int) $request->tahun;
        $nik = Auth::guard('karyawan')->user()->nik;
        $startDate = Carbon::createFromDate($tahun, $bulan, 1)->startOfMonth();
        $endDate = Carbon::createFromDate($tahun, $bulan, 1)->endOfMonth();
        $histori = Presensi::where('nik', $nik)
            ->whereBetween('tgl_presensi', [new UTCDateTime($startDate->timestamp * 1000), new UTCDateTime($endDate->timestamp * 1000)])
            ->orderBy('tgl_presensi', 'asc')
            ->get();
        return view('presensi.gethistori', compact('histori'));
    }
}

app\Http\Middleware\AdminMiddleware.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class AdminMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next
     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse
     */
    public function handle(Request $request, Closure $next)
    {
        // Pastikan pengguna sudah login dan merupakan admin
        // Sesuaikan 'is_admin' dengan field yang Anda gunakan di model Karyawan
        if (Auth::guard('karyawan')->check() && Auth::guard('karyawan')->user()->is_admin) {
            return $next($request);
        }

        // Jika bukan admin, redirect atau berikan error
        // Anda bisa redirect ke halaman login karyawan atau halaman error khusus
        return redirect('/')->with('error', 'Akses ditolak. Anda bukan admin.');
    }
}

app\Http\Middleware\ClearRegistrationSession.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Support\Facades\Log;

class ClearRegistrationSession
{
    public function handle($request, Closure $next)
    {
        // Hanya bersihkan session jika mengakses halaman registrasi awal (GET)
        if ($request->is('register') && $request->isMethod('GET')) {
            Log::info('Membersihkan session registrasi.');
            $request->session()->forget(['register_data', 'register_face']);
        }

        return $next($request);
    }
}

app\Http\Middleware\KetuaDepartemenMiddleware.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class KetuaDepartemenMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        // Pastikan pengguna sudah login dan merupakan Ketua Departemen
        if (Auth::guard('karyawan')->check() && Auth::guard('karyawan')->user()->is_ketua_departemen) {
            // Periksa juga apakah Ketua Departemen memiliki fakultas dan departemen yang ditugaskan
            if (empty(Auth::guard('karyawan')->user()->unit) || empty(Auth::guard('karyawan')->user()->departemen)) {
                // Jika tidak lengkap, logout dan redirect dengan pesan error
                Auth::guard('karyawan')->logout();
                $request->session()->invalidate();
                $request->session()->regenerateToken();
                return redirect()->route('admin.login.form')->with('error', 'Akun Ketua Departemen Anda belum lengkap. Harap hubungi Administrator.');
            }
            return $next($request);
        }

        // Jika bukan Ketua Departemen atau belum login, redirect ke halaman login panel
        if (Auth::guard('karyawan')->check()) {
            if(Auth::guard('karyawan')->user()->is_admin) {
                 return redirect()->route('admin.dashboard')->with('error', 'Akses ditolak. Anda adalah Admin.');
            }
             if(Auth::guard('karyawan')->user()->is_komandan) {
                 return redirect()->route('komandan.dashboard')->with('error', 'Akses ditolak. Anda adalah Komandan.');
            }
        }

        return redirect()->route('admin.login.form')->with('error', 'Akses ditolak. Anda bukan Ketua Departemen atau sesi Anda telah berakhir.');
    }
}

app\Http\Middleware\KomandanMiddleware.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpFoundation\Response;

class KomandanMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        // Pastikan pengguna sudah login dan merupakan komandan
        if (Auth::guard('karyawan')->check() && Auth::guard('karyawan')->user()->is_komandan) {
            // Periksa juga apakah Komandan memiliki fakultas yang ditugaskan
            if (empty(Auth::guard('karyawan')->user()->unit)) {
                // Jika Komandan tidak memiliki fakultas, logout dan redirect dengan pesan error
                Auth::guard('karyawan')->logout();
                $request->session()->invalidate();
                $request->session()->regenerateToken();
                return redirect()->route('admin.login.form')->with('error', 'Akun Komandan Anda belum ditugaskan ke fakultas. Harap hubungi Administrator.');
            }
            return $next($request);
        }

        // Jika bukan komandan atau belum login, redirect ke halaman login admin
        // atau berikan pesan error yang sesuai.
        if (Auth::guard('karyawan')->check() && Auth::guard('karyawan')->user()->is_admin) {
            // Jika admin mencoba akses halaman komandan, redirect ke dashboard admin
            return redirect()->route('admin.dashboard')->with('error', 'Akses ditolak. Anda adalah Admin, bukan Komandan.');
        }

        return redirect()->route('admin.login.form')->with('error', 'Akses ditolak. Anda bukan Komandan atau sesi Anda telah berakhir.');
    }
}

app\Http\Middleware\PreventCaching.php
<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class PreventCaching
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        // Jalankan request terlebih dahulu untuk mendapatkan response
        $response = $next($request);

        // Tambahkan header untuk mencegah caching
        // Ini adalah pendekatan "belt and suspenders" untuk kompatibilitas maksimal
        $response->headers->set('Cache-Control', 'no-store, no-cache, must-revalidate, max-age=0');
        $response->headers->set('Pragma', 'no-cache');
        $response->headers->set('Expires', 'Fri, 01 Jan 1990 00:00:00 GMT');

        return $response;
    }
}

app\Http\Kernel.php
<?php

namespace App\Http;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

class Kernel extends HttpKernel
{
    /**
     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array<int, class-string|string>
     */
    protected $middleware = [
        \App\Http\Middleware\TrustProxies::class,
        \Illuminate\Http\Middleware\HandleCors::class,
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        \App\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    ];

    /**
     * The application's route middleware groups.
     *
     * @var array<string, array<int, class-string|string>>
     */
    protected $middlewareGroups = [
        'web' => [
            \App\Http\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \App\Http\Middleware\VerifyCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
            \App\Http\Middleware\ClearRegistrationSession::class,
        ],

        'api' => [
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],
    ];

    /**
     * The application's middleware aliases.
     *
     * Aliases may be used to conveniently assign middleware to routes and groups.
     *
     * @deprecated Preferre to register middleware aliases in bootstrap/app.php
     * @var array<string, class-string|string>
     */
    // protected $routeMiddleware = [ // Anda bisa hapus atau komentari bagian ini
    //     'auth' => \App\Http\Middleware\Authenticate::class,
    //     'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
    //     'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
    //     'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
    //     'can' => \Illuminate\Auth\Middleware\Authorize::class,
    //     'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
    //     'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
    //     'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
    //     'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
    //     'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
    //     'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
    //     'admin' => \App\Http\Middleware\AdminMiddleware::class,
    // ];
}

app\Models\Fakultas.php
<?php

namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use Illuminate\Support\Facades\Log;

class Fakultas extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'fakultas'; 

    protected $fillable = [
        'nama',                 
        'tipe_fakultas', // 'Teknik' atau 'Non-Teknik'      
        'program_studi_json',   // Untuk Non-Teknik: [{"jenjang": "S1", "nama_prodi": "Nama Prodi"}]
        'koordinat_fakultas',   // Untuk Non-Teknik
        'radius_fakultas',      // Untuk Non-Teknik
        'detail_prodi_json',    // Untuk Teknik: [{"jenjang": "S1", "nama_prodi": "Nama Prodi", "koordinat": "...", "radius": "..."}]
    ];

    protected $casts = [
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * Accessor untuk program_studi fakultas Non-Teknik.
     * Mengembalikan array program studi.
     */
    public function getProgramStudiAttribute()
    {
        if (isset($this->attributes['program_studi_json']) && !is_null($this->attributes['program_studi_json'])) {
            $decoded = json_decode($this->attributes['program_studi_json'], true);
            if (is_null($decoded) && $this->attributes['program_studi_json'] !== 'null' && json_last_error() !== JSON_ERROR_NONE) {
                Log::error('JSON Decode Error for program_studi_json on Fakultas ID ' . ($this->attributes['_id'] ?? 'N/A') . ': ' . json_last_error_msg() . ' | Data: ' . $this->attributes['program_studi_json']);
                return [];
            }
            return is_array($decoded) ? $decoded : [];
        }
        return [];
    }

    /**
     * Accessor untuk detail_prodi Fakultas Teknik.
     * Mengembalikan array detail program studi.
     */
    public function getDetailProdiAttribute()
    {
        if (isset($this->attributes['detail_prodi_json']) && !is_null($this->attributes['detail_prodi_json'])) {
            $decoded = json_decode($this->attributes['detail_prodi_json'], true);
            if (is_null($decoded) && $this->attributes['detail_prodi_json'] !== 'null' && json_last_error() !== JSON_ERROR_NONE) {
                Log::error('JSON Decode Error for detail_prodi_json on Fakultas ID ' . ($this->attributes['_id'] ?? 'N/A') . ': ' . json_last_error_msg() . ' | Data: ' . $this->attributes['detail_prodi_json']);
                return [];
            }
            return is_array($decoded) ? $decoded : [];
        }
        return [];
    }
}

app\Models\JadwalShift.php
<?php
// File: app/Models/JadwalShift.php

namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use MongoDB\BSON\UTCDateTime;
use Carbon\Carbon;
use Illuminate\Support\Facades\Log;

class JadwalShift extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'jadwal_shifts';

    protected $fillable = [
        'karyawan_nik',
        'nama_karyawan',
        'fakultas',
        'tanggal',      // Akan disimpan sebagai UTCDateTime
        'shift_nama',
        'jam_mulai',    // HH:MM
        'jam_selesai',  // HH:MM
        'dibuat_oleh_nik',
        'dibuat_oleh_nama',
        'keterangan',
    ];

    protected $casts = [
        // 'tanggal' => 'datetime:Y-m-d', // Dihapus, ditangani oleh accessor/mutator
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    /**
     * Relasi ke model Karyawan (Petugas).
     */
    public function karyawan()
    {
        return $this->belongsTo(Karyawan::class, 'karyawan_nik', 'nik');
    }

    /**
     * Mutator untuk field 'tanggal'.
     * Memastikan tanggal disimpan sebagai UTCDateTime di MongoDB, distandarisasi ke awal hari (00:00:00 UTC).
     */
    public function setTanggalAttribute($value)
    {
        if ($value instanceof Carbon) {
            // Konversi Carbon ke UTC, lalu ambil timestamp untuk UTCDateTime
            $this->attributes['tanggal'] = new UTCDateTime($value->copy()->startOfDay()->utc()->getTimestamp() * 1000);
        } elseif (is_string($value)) {
            try {
                // Parse string sebagai tanggal, standarisasi ke awal hari, konversi ke UTC, lalu ambil timestamp
                $date = Carbon::parse($value)->startOfDay()->utc();
                $this->attributes['tanggal'] = new UTCDateTime($date->getTimestamp() * 1000);
            } catch (\Exception $e) {
                $this->attributes['tanggal'] = null;
                Log::error("Invalid date string for JadwalShift setTanggalAttribute: {$value} - Error: {$e->getMessage()}");
            }
        } elseif ($value instanceof UTCDateTime) {
            // Jika sudah UTCDateTime, pastikan itu merepresentasikan awal hari UTC
            $carbonDate = Carbon::instance($value->toDateTime())->startOfDay()->utc();
            $this->attributes['tanggal'] = new UTCDateTime($carbonDate->getTimestamp() * 1000);
        } else {
            $this->attributes['tanggal'] = null;
        }
    }

    /**
     * Accessor untuk field 'tanggal'.
     * Memastikan tanggal diambil sebagai instance Carbon dari UTCDateTime,
     * dan dikonversi ke timezone aplikasi.
     */
    public function getTanggalAttribute($value)
    {
        if ($value instanceof UTCDateTime) {
            // UTCDateTime dari DB adalah UTC. Konversi ke Carbon, lalu set ke timezone aplikasi.
            return Carbon::instance($value->toDateTime())->setTimezone(config('app.timezone'));
        }
        if ($value instanceof Carbon) {
            return $value->setTimezone(config('app.timezone'));
        }
        if (is_string($value)) {
            try {
                return Carbon::parse($value)->setTimezone(config('app.timezone'));
            } catch (\Exception $e) {
                Log::error("Accessor getTanggalAttribute (JadwalShift): Failed to parse string '{$value}' - Error: {$e->getMessage()}");
                return null;
            }
        }
        return null;
    }
}

app\Models\Karyawan.php
<?php
//app\Models\Karyawan.php

namespace App\Models;

use MongoDB\Laravel\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Log;

class Karyawan extends Authenticatable
{
    use Notifiable;

    protected $connection = 'mongodb';
    protected $collection = "karyawans";
    protected $primaryKey = "_id";
    public $incrementing = false;

    protected $fillable = [
        'nik',
        'nama_lengkap',
        'jabatan',
        'no_hp',
        'email',
        'password',
        'foto',
        'face_embedding', // HANYA INI, face_embedding_version DIHAPUS
        'office_location',
        'office_radius',
        'is_admin',
        'is_komandan',
        'is_ketua_departemen',
        'unit',
        'departemen',
    ];

    protected $hidden = [
        'password',
        'remember_token',
        'face_embedding'
    ];

    protected $casts = [
        'is_admin' => 'boolean',
        'is_komandan' => 'boolean',
        'is_ketua_departemen' => 'boolean',
        'office_radius' => 'integer',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
    ];

    public function getFaceEmbeddingAttribute($value)
    {
        if (is_string($value)) {
            $decoded = json_decode($value, true);
            return (json_last_error() === JSON_ERROR_NONE) ? $decoded : $value;
        }
        return $value;
    }

    public function setFaceEmbeddingAttribute($value)
    {
        if (is_array($value)) {
            $this->attributes['face_embedding'] = $value;
        } else {
            $this->attributes['face_embedding'] = null;
        }
    }
    
    public function getOfficeLocationAttribute($value)
    {
        if (is_array($value) && isset($value['type']) && $value['type'] === 'Point' && isset($value['coordinates'])) {
            return $value;
        }
        return null;
    }
    
    /**
     * PERBAIKAN: Mutator dibuat lebih robust untuk menangani data dari controller.
     * Ia akan menerima string "lat,lng" dan mengubahnya menjadi format GeoJSON.
     */
    public function setOfficeLocationAttribute($value)
    {
        if (is_string($value) && strpos($value, ',') !== false) {
            $coords = explode(',', $value);
            if(count($coords) === 2) {
                $lat = floatval(trim($coords[0]));
                $lng = floatval(trim($coords[1]));
                // Format GeoJSON adalah [longitude, latitude]
                $this->attributes['office_location'] = [
                    'type' => 'Point',
                    'coordinates' => [$lng, $lat] 
                ];
            } else {
                $this->attributes['office_location'] = null;
            }
        } elseif (is_array($value) && isset($value['type']) && $value['type'] === 'Point') {
             // Jika data sudah dalam format GeoJSON, langsung gunakan
            $this->attributes['office_location'] = $value;
        } else {
            $this->attributes['office_location'] = null;
        }
    }

    public function fakultas()
    {
        return $this->belongsTo(Fakultas::class, 'unit', 'nama');
    }
}

app\Models\Laporan.php
<?php
//app\Models\Laporan.php
namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use MongoDB\BSON\UTCDateTime;

class Laporan extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'laporan';
    protected $primaryKey = '_id';

    protected $fillable = [
        'nik',
        'tanggal',
        'jam',
        'jenis_laporan',
        'keterangan',
        'lokasi',
        'foto',
        'face_verification_image'
    ];

    protected $casts = [
        'tanggal' => 'datetime',
        'created_at' => 'datetime'
    ];

    // Accessor untuk URL foto
    public function getFotoUrlAttribute()
    {
        return $this->foto ? asset('storage/'.str_replace('public/', '', $this->foto)) : null;
    }

    // Accessor untuk URL face verification
    public function getFaceVerificationUrlAttribute()
    {
        return $this->face_verification_image ? asset('storage/'.str_replace('public/', '', $this->face_verification_image)) : null;
    }

    // Relationship dengan karyawan
    public function karyawan()
    {
        return $this->belongsTo(Karyawan::class, 'nik', 'nik');
    }
}

app\Models\Patrol.php
<?php
//app/Models/Patrol.php

namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use MongoDB\BSON\UTCDateTime;

class Patrol extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'patrols';

    protected $fillable = [
        'karyawan_nik',
        'start_time',
        'end_time',
        'duration_seconds',
        'total_distance_meters',
        'status', // aktif, jeda, selesai
        'path', // Array GeoJSON LineString coordinates
        'face_verified', // NEW: Boolean for face verification status
        'face_verification_image', // NEW: Path to face verification image
        'face_verification_time', // NEW: Timestamp of face verification
    ];

    protected $casts = [
        'start_time' => 'datetime',
        'end_time' => 'datetime',
        'face_verification_time' => 'datetime',
        'duration_seconds' => 'integer',
        'total_distance_meters' => 'float',
        'path' => 'array',
        'face_verified' => 'boolean',
    ];

    /**
     * Relasi ke model Karyawan.
     */
    public function karyawan()
    {
        return $this->belongsTo(Karyawan::class, 'karyawan_nik', 'nik');
    }

    /**
     * Relasi ke model PatrolPoint.
     * Satu patroli memiliki banyak titik patroli.
     */
    public function points()
    {
        return $this->hasMany(PatrolPoint::class, 'patrol_id', '_id');
    }
}

app\Models\PatrolPoint.php
<?php

namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use MongoDB\BSON\UTCDateTime; // Pastikan ini di-import

class PatrolPoint extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'patrol_points'; // Nama koleksi untuk titik-titik patroli

    protected $fillable = [
        'patrol_id', // FK ke Patrols
        'karyawan_nik',
        'latitude',
        'longitude',
        'accuracy', // Akurasi lokasi dalam meter
        'speed', // Kecepatan dalam meter/detik (jika tersedia)
        'timestamp', // Waktu titik ini direkam
    ];

    protected $casts = [
        'latitude' => 'float',
        'longitude' => 'float',
        'accuracy' => 'float',
        'speed' => 'float',
        'timestamp' => 'datetime',
    ];

    /**
     * Relasi ke model Patrol.
     * Setiap titik patroli dimiliki oleh satu patroli.
     */
    public function patrol()
    {
        return $this->belongsTo(Patrol::class, 'patrol_id', '_id');
    }
}

app\Models\Presensi.php
<?php

namespace App\Models;

use MongoDB\Laravel\Eloquent\Model;
use Illuminate\Support\Carbon;

class Presensi extends Model
{
    protected $connection = 'mongodb';
    protected $collection = 'presensi';

    protected $fillable = [
        'nik',
        'tgl_presensi',
        'jam_in',
        'jam_out',
        'foto_in',
        'foto_out',
        'lokasi_in',
        'lokasi_out'
    ];

    public $timestamps = false; 

    /**
     * The attributes that should be cast.
     * Ini akan secara otomatis menangani konversi antara objek Carbon di Laravel 
     * dan objek UTCDateTime di MongoDB dengan benar, termasuk zona waktu.
     *
     * @var array
     */
    protected $casts = [
        'tgl_presensi' => 'datetime',
    ];

    /**
     * Relasi ke model Karyawan.
     */
    public function karyawan()
    {
        return $this->belongsTo(Karyawan::class, 'nik', 'nik');
    }
}

app\Models\User.php
<?php

namespace App\Models;

use MongoDB\Laravel\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use Notifiable;

    protected $connection = 'mongodb';
    protected $collection = "users";
    protected $primaryKey = "_id";
    public $incrementing = false;

    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    protected $hidden = [
        'password',
        'remember_token',
    ];

    protected function casts(): array
    {
        return [
            'password' => 'hashed',
        ];
    }
}

app\Providers\AppServiceProvider.php
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use App\Services\FaceRecognitionService;
use Illuminate\Support\Facades\URL; // Diperlukan untuk forceScheme
use Illuminate\Pagination\Paginator; // Diperlukan untuk paginasi

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        $this->app->singleton(FaceRecognitionService::class, function ($app) {
            return new FaceRecognitionService();
        });
    }

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        // Pengaturan dari kode Anda untuk memaksa HTTPS di production
        if ($this->app->environment('production')) {
            URL::forceScheme('https');
        }

        // PERBAIKAN: Menambahkan baris ini untuk mengatur gaya paginasi
        // agar sesuai dengan Bootstrap 5 yang digunakan di panel admin Anda.
        Paginator::useBootstrapFive();
    }
}

app\Providers\AuthServiceProvider.php
<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Gate;

class AuthServiceProvider extends ServiceProvider
{
    /**
     * The policy mappings for the application.
     *
     * @var array<class-string, class-string>
     */
    protected $policies = [
        // 'App\Models\Model' => 'App\Policies\ModelPolicy',
    ];

    /**
     * Register any authentication / authorization services.
     */
    public function boot(): void
    {
        $this->registerPolicies();

        // Tambahkan konfigurasi otorisasi tambahan jika diperlukan
    }
}

app\Providers\EventServiceProvider.php
<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Event;

class EventServiceProvider extends ServiceProvider
{
    /**
     * The event listener mappings for the application.
     *
     * @var array
     */
    protected $listen = [];

    /**
     * Register any events for your application.
     */
    public function boot(): void
    {
        parent::boot();
    }
}

app\Providers\RouteServiceProvider.php
<?php

namespace App\Providers;

use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
use Illuminate\Support\Facades\Route;

class RouteServiceProvider extends ServiceProvider
{
    /**
     * Define your route model bindings, pattern filters, etc.
     */
    public function boot(): void
    {
        parent::boot();
    }
}

app\Services\FaceRecognitionService.php
<?php
//app\Services\FaceRecognitionService.php

namespace App\Services;

use App\Models\Karyawan;
use Exception;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Storage;
use Symfony\Component\Process\Process;

class FaceRecognitionService
{
    protected $pythonPath;
    protected $scriptPath;

    public function __construct()
    {
        $this->pythonPath = base_path('venv/Scripts/python.exe');
        $this->scriptPath = base_path('face_recognition_service.py');
    }

    private function runPythonScript(array $commandArgs): array
    {
        $processCommand = array_merge([$this->pythonPath, $this->scriptPath], $commandArgs);
        Log::info('--- MEMULAI PROSES PYTHON (METODE DESCRIPTOR) ---');
        Log::info('Executing command: ' . implode(' ', $processCommand));

        $process = new Process($processCommand);
        $process->setTimeout(120);
        $process->run();
        
        $rawOutput = $process->getOutput();
        $errorOutput = $process->getErrorOutput();
        Log::info('Output Mentah dari Python: ' . $rawOutput);
        if (!empty($errorOutput)) {
            Log::error('ERROR dari Skrip Python: ' . $errorOutput);
        }

        if (!$process->isSuccessful()) {
            throw new Exception('Proses Python gagal. Cek log. Error: ' . $errorOutput);
        }
        
        // Filter untuk mengambil hanya bagian JSON dari output
        preg_match('/\{.*\}/s', $rawOutput, $matches);
        if (empty($matches)) {
            throw new Exception('Tidak ada output JSON dari skrip Python.');
        }
        $jsonOutput = $matches[0];
        $result = json_decode($jsonOutput, true);
        
        if (json_last_error() !== JSON_ERROR_NONE) {
            throw new Exception('Gagal memproses JSON dari Python.');
        }
        return $result;
    }

    public function generateDescriptorFromImage(string $base64Image): ?array
    {
        $tempImageFile = 'temp/face_generate_' . uniqid() . '.txt';
        Storage::put($tempImageFile, $base64Image);
        $imagePath = Storage::path($tempImageFile);

        try {
            $result = $this->runPythonScript(['generate', $imagePath]);
            if ($result['success'] && isset($result['descriptor'])) {
                return $result['descriptor'];
            }
            Log::warning('Generate Descriptor Gagal:', ['message' => $result['message'] ?? 'Unknown error.']);
        } catch (Exception $e) {
            Log::error('FaceRecognitionService Exception:', ['error' => $e->getMessage()]);
        } finally {
            Storage::delete($tempImageFile);
        }
        return null;
    }

    public function verifyImageAgainstStored(string $base64Image, string $nik): array
    {
        $karyawan = Karyawan::where('nik', $nik)->first();
        if (!$karyawan || empty($karyawan->face_embedding['embedding'])) {
            return ['success' => false, 'match' => false, 'message' => 'Data wajah (vektor) karyawan tidak ditemukan.'];
        }

        $tempLiveImageFile = 'temp/face_verify_' . uniqid() . '.txt';
        $tempDescriptorFile = 'temp/desc_verify_' . uniqid() . '.json';
        
        Storage::put($tempLiveImageFile, $base64Image);
        Storage::put($tempDescriptorFile, json_encode($karyawan->face_embedding['embedding']));

        $liveImagePath = Storage::path($tempLiveImageFile);
        $descriptorPath = Storage::path($tempDescriptorFile);
        
        try {
            $result = $this->runPythonScript(['verify', $liveImagePath, $descriptorPath]);
            if (!$result['success']) {
                 throw new Exception($result['message'] ?? 'Verifikasi gagal di skrip Python.');
            }
            $finalResult = ['success' => true, 'match' => $result['match'], 'message' => $result['match'] ? 'Wajah terverifikasi.' : 'Wajah tidak cocok.'];
        } catch (Exception $e) {
            Log::error("Face verification failed for NIK {$nik}: " . $e->getMessage());
            $finalResult = ['success' => false, 'match' => false, 'message' => 'Kesalahan internal saat verifikasi.'];
        } finally {
            Storage::delete([$tempLiveImageFile, $tempDescriptorFile]);
        }
        
        return $finalResult;
    }
}

bootstrap\cache\packages.php
<?php return array (
  'laravel/pail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Pail\\PailServiceProvider',
    ),
  ),
  'laravel/sail' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Sail\\SailServiceProvider',
    ),
  ),
  'laravel/tinker' => 
  array (
    'providers' => 
    array (
      0 => 'Laravel\\Tinker\\TinkerServiceProvider',
    ),
  ),
  'mongodb/laravel-mongodb' => 
  array (
    'providers' => 
    array (
      0 => 'MongoDB\\Laravel\\MongoDBServiceProvider',
      1 => 'MongoDB\\Laravel\\MongoDBBusServiceProvider',
    ),
  ),
  'nesbot/carbon' => 
  array (
    'providers' => 
    array (
      0 => 'Carbon\\Laravel\\ServiceProvider',
    ),
  ),
  'nunomaduro/collision' => 
  array (
    'providers' => 
    array (
      0 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    ),
  ),
  'nunomaduro/termwind' => 
  array (
    'providers' => 
    array (
      0 => 'Termwind\\Laravel\\TermwindServiceProvider',
    ),
  ),
  'pbmedia/laravel-ffmpeg' => 
  array (
    'aliases' => 
    array (
      'FFMpeg' => 'ProtoneMedia\\LaravelFFMpeg\\Support\\FFMpeg',
    ),
    'providers' => 
    array (
      0 => 'ProtoneMedia\\LaravelFFMpeg\\Support\\ServiceProvider',
    ),
  ),
);

bootstrap\cache\routes-v7.php
<?php

app('router')->setCompiledRoutes(
    array (
  'compiled' => 
  array (
    0 => false,
    1 => 
    array (
      '/up' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::q6oSbJAh2CLU4rew',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/proseslogin' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'proseslogin',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.login.form',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.login.proses',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/face/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'face.verify',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/proseslogout' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'proseslogout',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/profile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'profile',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/editprofile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'editprofile',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/presensi/updateprofile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'updateprofile',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/presensi/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'presensi.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/presensi/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'presensi.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/presensi/histori' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'presensi.histori',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/presensi/gethistori' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'presensi.gethistori',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laporan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laporan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laporan/buat' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laporan.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laporan/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laporan.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/start' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.start',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/store-point' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.store_point',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/pause' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.pause',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/resume' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.resume',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/stop' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.stop',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/patroli/histori' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.histori',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/set-face-verified-session' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'session.set_face_verified',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/check-face-verified-session' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'session.check_face_verified',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/karyawan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/karyawan/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/karyawan/step1' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.store_step1',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/karyawan/face-registration' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.face_registration',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/karyawan/complete-registration' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.complete_registration',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/fakultas' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/fakultas/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/presensi' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.presensi.rekapitulasi',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/presensi/harian' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.presensi.harian',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/laporan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.laporan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/patroli' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.patroli.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/backup' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.backup.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/panel/backup/process' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.backup.process',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/karyawan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.karyawan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/presensi' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.presensi.rekapitulasi',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/presensi/harian' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.presensi.harian',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/laporan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.laporan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/patroli' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.patroli.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/patroli/monitoring' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.patroli.monitoring',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/patroli/live-data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.patroli.live_data',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/jadwal-shift' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.jadwalshift.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/jadwal-shift/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.jadwalshift.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/laporan-kinerja' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.laporankinerja.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/komandan/laporan-kinerja/cetak' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.laporankinerja.cetak',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/karyawan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.karyawan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/presensi' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.presensi.rekapitulasi',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/presensi/harian' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.presensi.harian',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/laporan' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.laporan.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/patroli' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.patroli.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/patroli/monitoring' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.patroli.monitoring',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/patroli/live-data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.patroli.live_data',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/jadwal-shift' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.jadwalshift.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/laporan-kinerja' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.laporankinerja.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ketua-departemen/laporan-kinerja/cetak' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.laporankinerja.cetak',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
    ),
    2 => 
    array (
      0 => '{^(?|/pa(?|troli/histori/([^/]++)(*:35)|nel/(?|karyawan/([^/]++)(?|(*:69)|/(?|edit(*:84)|face\\-data(*:101)|reset\\-(?|face(*:123)|location(*:139)))|(*:149))|fakultas/(?|([^/]++)(?|/edit(*:186)|(*:194))|get\\-details\\-for\\-karyawan/([^/]++)(*:239))|p(?|resensi/(?|karyawan/([^/]++)(*:280)|edit/([^/]++)(*:301)|update/([^/]++)(*:324))|atroli/(?|show/([^/]++)(*:356)|destroy/([^/]++)(*:380)))|laporan/([^/]++)(?|(*:409)|/update\\-status(*:432))))|/k(?|omandan/(?|p(?|resensi/(?|karyawan/([^/]++)(*:491)|edit/([^/]++)(*:512)|update/([^/]++)(*:535))|atroli/show/([^/]++)(*:564))|laporan/(?|show/([^/]++)(*:597)|update\\-status/([^/]++)(*:628)))|etua\\-departemen/(?|p(?|resensi/karyawan/([^/]++)(*:687)|atroli/show/([^/]++)(*:715))|laporan/(?|show/([^/]++)(*:748)|update\\-status/([^/]++)(*:779))))|/storage/(.*)(*:803))/?$}sDu',
    ),
    3 => 
    array (
      35 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'patroli.histori.detail',
          ),
          1 => 
          array (
            0 => 'patrolId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      69 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      84 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      101 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.face_data',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      123 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.reset_face',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      139 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.reset_location',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      149 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.karyawan.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      186 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.edit',
          ),
          1 => 
          array (
            0 => 'fakultas',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      194 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.update',
          ),
          1 => 
          array (
            0 => 'fakultas',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.destroy',
          ),
          1 => 
          array (
            0 => 'fakultas',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      239 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.fakultas.get_details_for_karyawan',
          ),
          1 => 
          array (
            0 => 'nama_fakultas',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      280 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.presensi.detail_karyawan',
          ),
          1 => 
          array (
            0 => 'nik',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      301 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.presensi.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      324 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.presensi.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      356 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.patroli.show',
          ),
          1 => 
          array (
            0 => 'patrolId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      380 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.patroli.destroy',
          ),
          1 => 
          array (
            0 => 'patrolId',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      409 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.laporan.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      432 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.laporan.update_status',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      491 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.presensi.detail_karyawan',
          ),
          1 => 
          array (
            0 => 'nik',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      512 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.presensi.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      535 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.presensi.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      564 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.patroli.show',
          ),
          1 => 
          array (
            0 => 'patrolId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      597 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.laporan.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      628 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'komandan.laporan.update_status',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      687 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.presensi.detail_karyawan',
          ),
          1 => 
          array (
            0 => 'nik',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      715 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.patroli.show',
          ),
          1 => 
          array (
            0 => 'patrolId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      748 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.laporan.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      779 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ketua-departemen.laporan.update_status',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      803 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'storage.local',
          ),
          1 => 
          array (
            0 => 'path',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => NULL,
          1 => NULL,
          2 => NULL,
          3 => NULL,
          4 => false,
          5 => false,
          6 => 0,
        ),
      ),
    ),
    4 => NULL,
  ),
  'attributes' => 
  array (
    'generated::q6oSbJAh2CLU4rew' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'up',
      'action' => 
      array (
        'uses' => 'O:55:"Laravel\\SerializableClosure\\UnsignedSerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:827:"function () {
                    $exception = null;

                    try {
                        \\Illuminate\\Support\\Facades\\Event::dispatch(new \\Illuminate\\Foundation\\Events\\DiagnosingHealth);
                    } catch (\\Throwable $e) {
                        if (app()->hasDebugModeEnabled()) {
                            throw $e;
                        }

                        report($e);

                        $exception = $e->getMessage();
                    }

                    return response(\\Illuminate\\Support\\Facades\\View::file(\'C:\\\\laragon\\\\www\\\\SiAmalin\\\\vendor\\\\laravel\\\\framework\\\\src\\\\Illuminate\\\\Foundation\\\\Configuration\'.\'/../resources/health-up.blade.php\', [
                        \'exception\' => $exception,
                    ]), status: $exception ? 500 : 200);
                }";s:5:"scope";s:54:"Illuminate\\Foundation\\Configuration\\ApplicationBuilder";s:4:"this";N;s:4:"self";s:32:"00000000000003e70000000000000000";}}',
        'as' => 'generated::q6oSbJAh2CLU4rew',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '/',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'O:55:"Laravel\\SerializableClosure\\UnsignedSerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:686:"function () {
        if (\\Illuminate\\Support\\Facades\\Auth::guard(\'karyawan\')->check()) {
            $user = \\Illuminate\\Support\\Facades\\Auth::guard(\'karyawan\')->user();
            if ($user->is_admin) {
                return \\redirect()->route(\'admin.dashboard\');
            } elseif ($user->is_komandan) {
                return \\redirect()->route(\'komandan.dashboard\');
            } elseif ($user->is_ketua_departemen) {
                return \\redirect()->route(\'ketua-departemen.dashboard\');
            }
            return \\redirect()->route(\'dashboard\'); // Petugas Keamanan
        }
        return \\app(\\App\\Http\\Controllers\\AuthController::class)->showLoginForm();
    }";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"000000000000039f0000000000000000";}}',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'proseslogin' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'proseslogin',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@proseslogin',
        'controller' => 'App\\Http\\Controllers\\AuthController@proseslogin',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'proseslogin',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.login.form' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@showAdminLoginForm',
        'controller' => 'App\\Http\\Controllers\\AuthController@showAdminLoginForm',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'admin.login.form',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.login.proses' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@prosesAdminLogin',
        'controller' => 'App\\Http\\Controllers\\AuthController@prosesAdminLogin',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'admin.login.proses',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'face.verify' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'face/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@verifyFace',
        'controller' => 'App\\Http\\Controllers\\AuthController@verifyFace',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'face.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\DashboardController@index',
        'controller' => 'App\\Http\\Controllers\\DashboardController@index',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'dashboard',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'proseslogout' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'proseslogout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@proseslogout',
        'controller' => 'App\\Http\\Controllers\\AuthController@proseslogout',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'proseslogout',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'profile' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'profile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'O:55:"Laravel\\SerializableClosure\\UnsignedSerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:164:"function () {
        $karyawan = \\Illuminate\\Support\\Facades\\Auth::guard(\'karyawan\')->user();
        return \\view(\'presensi.profile\', \\compact(\'karyawan\'));
    }";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"00000000000003880000000000000000";}}',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'profile',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'editprofile' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'editprofile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'O:55:"Laravel\\SerializableClosure\\UnsignedSerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:168:"function () {
        $karyawan = \\Illuminate\\Support\\Facades\\Auth::guard(\'karyawan\')->user();
        return \\view(\'presensi.editprofile\', \\compact(\'karyawan\'));
    }";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"000000000000038a0000000000000000";}}',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'editprofile',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'updateprofile' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'presensi/updateprofile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PresensiController@updateprofile',
        'controller' => 'App\\Http\\Controllers\\PresensiController@updateprofile',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'updateprofile',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'presensi.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'presensi/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PresensiController@create',
        'controller' => 'App\\Http\\Controllers\\PresensiController@create',
        'as' => 'presensi.create',
        'namespace' => NULL,
        'prefix' => '/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'presensi.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'presensi/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PresensiController@store',
        'controller' => 'App\\Http\\Controllers\\PresensiController@store',
        'as' => 'presensi.store',
        'namespace' => NULL,
        'prefix' => '/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'presensi.histori' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'presensi/histori',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PresensiController@histori',
        'controller' => 'App\\Http\\Controllers\\PresensiController@histori',
        'as' => 'presensi.histori',
        'namespace' => NULL,
        'prefix' => '/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'presensi.gethistori' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'presensi/gethistori',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PresensiController@gethistori',
        'controller' => 'App\\Http\\Controllers\\PresensiController@gethistori',
        'as' => 'presensi.gethistori',
        'namespace' => NULL,
        'prefix' => '/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laporan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laporan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\LaporanController@index',
        'controller' => 'App\\Http\\Controllers\\LaporanController@index',
        'as' => 'laporan.index',
        'namespace' => NULL,
        'prefix' => '/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laporan.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laporan/buat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\LaporanController@create',
        'controller' => 'App\\Http\\Controllers\\LaporanController@create',
        'as' => 'laporan.create',
        'namespace' => NULL,
        'prefix' => '/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laporan.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'laporan/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\LaporanController@store',
        'controller' => 'App\\Http\\Controllers\\LaporanController@store',
        'as' => 'laporan.store',
        'namespace' => NULL,
        'prefix' => '/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'patroli',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@index',
        'controller' => 'App\\Http\\Controllers\\PatroliController@index',
        'as' => 'patroli.index',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.start' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'patroli/start',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@startPatrol',
        'controller' => 'App\\Http\\Controllers\\PatroliController@startPatrol',
        'as' => 'patroli.start',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.store_point' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'patroli/store-point',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@storePoint',
        'controller' => 'App\\Http\\Controllers\\PatroliController@storePoint',
        'as' => 'patroli.store_point',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.pause' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'patroli/pause',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@pausePatrol',
        'controller' => 'App\\Http\\Controllers\\PatroliController@pausePatrol',
        'as' => 'patroli.pause',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.resume' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'patroli/resume',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@resumePatrol',
        'controller' => 'App\\Http\\Controllers\\PatroliController@resumePatrol',
        'as' => 'patroli.resume',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.stop' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'patroli/stop',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@stopPatrol',
        'controller' => 'App\\Http\\Controllers\\PatroliController@stopPatrol',
        'as' => 'patroli.stop',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.histori' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'patroli/histori',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@historiPatroli',
        'controller' => 'App\\Http\\Controllers\\PatroliController@historiPatroli',
        'as' => 'patroli.histori',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'patroli.histori.detail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'patroli/histori/{patrolId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\PatroliController@detailHistoriPatroli',
        'controller' => 'App\\Http\\Controllers\\PatroliController@detailHistoriPatroli',
        'as' => 'patroli.histori.detail',
        'namespace' => NULL,
        'prefix' => '/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'session.set_face_verified' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'set-face-verified-session',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@setFaceVerifiedSession',
        'controller' => 'App\\Http\\Controllers\\AuthController@setFaceVerifiedSession',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'session.set_face_verified',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'session.check_face_verified' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'check-face-verified-session',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
        ),
        'uses' => 'App\\Http\\Controllers\\AuthController@checkFaceVerifiedSession',
        'controller' => 'App\\Http\\Controllers\\AuthController@checkFaceVerifiedSession',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'session.check_face_verified',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminDashboardController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminDashboardController@index',
        'as' => 'admin.dashboard',
        'namespace' => NULL,
        'prefix' => '/panel',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@index',
        'as' => 'admin.karyawan.index',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@create',
        'as' => 'admin.karyawan.create',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.store_step1' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/karyawan/step1',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@storeStep1',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@storeStep1',
        'as' => 'admin.karyawan.store_step1',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.face_registration' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/face-registration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@showFaceRegistration',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@showFaceRegistration',
        'as' => 'admin.karyawan.face_registration',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.complete_registration' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/karyawan/complete-registration',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@completeRegistration',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@completeRegistration',
        'as' => 'admin.karyawan.complete_registration',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@show',
        'as' => 'admin.karyawan.show',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/{id}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@edit',
        'as' => 'admin.karyawan.edit',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'panel/karyawan/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@update',
        'as' => 'admin.karyawan.update',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'panel/karyawan/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@destroy',
        'as' => 'admin.karyawan.destroy',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.face_data' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/{id}/face-data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@viewFaceData',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@viewFaceData',
        'as' => 'admin.karyawan.face_data',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.reset_face' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/karyawan/{id}/reset-face',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@resetFaceData',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@resetFaceData',
        'as' => 'admin.karyawan.reset_face',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.karyawan.reset_location' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/karyawan/{id}/reset-location',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@resetOfficeLocation',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminKaryawanController@resetOfficeLocation',
        'as' => 'admin.karyawan.reset_location',
        'namespace' => NULL,
        'prefix' => 'panel/karyawan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/fakultas',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@index',
        'as' => 'admin.fakultas.index',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/fakultas/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@create',
        'as' => 'admin.fakultas.create',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/fakultas',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@store',
        'as' => 'admin.fakultas.store',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/fakultas/{fakultas}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@edit',
        'as' => 'admin.fakultas.edit',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'panel/fakultas/{fakultas}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@update',
        'as' => 'admin.fakultas.update',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'panel/fakultas/{fakultas}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@destroy',
        'as' => 'admin.fakultas.destroy',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.fakultas.get_details_for_karyawan' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/fakultas/get-details-for-karyawan/{nama_fakultas}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@getFakultasDetails',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminFakultasController@getFakultasDetails',
        'as' => 'admin.fakultas.get_details_for_karyawan',
        'namespace' => NULL,
        'prefix' => 'panel/fakultas',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.presensi.rekapitulasi' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/presensi',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@rekapitulasi',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@rekapitulasi',
        'as' => 'admin.presensi.rekapitulasi',
        'namespace' => NULL,
        'prefix' => 'panel/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.presensi.harian' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/presensi/harian',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@laporanHarian',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@laporanHarian',
        'as' => 'admin.presensi.harian',
        'namespace' => NULL,
        'prefix' => 'panel/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.presensi.detail_karyawan' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/presensi/karyawan/{nik}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@detailKaryawan',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@detailKaryawan',
        'as' => 'admin.presensi.detail_karyawan',
        'namespace' => NULL,
        'prefix' => 'panel/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.presensi.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/presensi/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@editPresensi',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@editPresensi',
        'as' => 'admin.presensi.edit',
        'namespace' => NULL,
        'prefix' => 'panel/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.presensi.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'panel/presensi/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@updatePresensi',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPresensiController@updatePresensi',
        'as' => 'admin.presensi.update',
        'namespace' => NULL,
        'prefix' => 'panel/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.laporan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/laporan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@index',
        'as' => 'admin.laporan.index',
        'namespace' => NULL,
        'prefix' => 'panel/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.laporan.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/laporan/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@show',
        'as' => 'admin.laporan.show',
        'namespace' => NULL,
        'prefix' => 'panel/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.laporan.update_status' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/laporan/{id}/update-status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@updateStatus',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminLaporanController@updateStatus',
        'as' => 'admin.laporan.update_status',
        'namespace' => NULL,
        'prefix' => 'panel/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.patroli.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/patroli',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@index',
        'as' => 'admin.patroli.index',
        'namespace' => NULL,
        'prefix' => 'panel/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.patroli.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/patroli/show/{patrolId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@show',
        'as' => 'admin.patroli.show',
        'namespace' => NULL,
        'prefix' => 'panel/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.patroli.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'panel/patroli/destroy/{patrolId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminPatroliController@destroy',
        'as' => 'admin.patroli.destroy',
        'namespace' => NULL,
        'prefix' => 'panel/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.backup.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'panel/backup',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminBackupController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminBackupController@index',
        'as' => 'admin.backup.index',
        'namespace' => NULL,
        'prefix' => 'panel/backup',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.backup.process' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'panel/backup/process',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'admin',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminBackupController@processBackup',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminBackupController@processBackup',
        'as' => 'admin.backup.process',
        'namespace' => NULL,
        'prefix' => 'panel/backup',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@index',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@index',
        'as' => 'komandan.dashboard',
        'namespace' => NULL,
        'prefix' => '/komandan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.karyawan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/karyawan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@dataKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@dataKaryawan',
        'as' => 'komandan.karyawan.index',
        'namespace' => NULL,
        'prefix' => '/komandan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.presensi.rekapitulasi' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/presensi',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@rekapPresensi',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@rekapPresensi',
        'as' => 'komandan.presensi.rekapitulasi',
        'namespace' => NULL,
        'prefix' => 'komandan/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.presensi.harian' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/presensi/harian',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@laporanHarianPresensi',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@laporanHarianPresensi',
        'as' => 'komandan.presensi.harian',
        'namespace' => NULL,
        'prefix' => 'komandan/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.presensi.detail_karyawan' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/presensi/karyawan/{nik}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@detailPresensiKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@detailPresensiKaryawan',
        'as' => 'komandan.presensi.detail_karyawan',
        'namespace' => NULL,
        'prefix' => 'komandan/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.presensi.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/presensi/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@editPresensi',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@editPresensi',
        'as' => 'komandan.presensi.edit',
        'namespace' => NULL,
        'prefix' => 'komandan/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.presensi.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'komandan/presensi/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@updatePresensi',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@updatePresensi',
        'as' => 'komandan.presensi.update',
        'namespace' => NULL,
        'prefix' => 'komandan/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.laporan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/laporan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@laporanKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@laporanKaryawan',
        'as' => 'komandan.laporan.index',
        'namespace' => NULL,
        'prefix' => 'komandan/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.laporan.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/laporan/show/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@showLaporanKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@showLaporanKaryawan',
        'as' => 'komandan.laporan.show',
        'namespace' => NULL,
        'prefix' => 'komandan/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.laporan.update_status' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'komandan/laporan/update-status/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@updateStatusLaporan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@updateStatusLaporan',
        'as' => 'komandan.laporan.update_status',
        'namespace' => NULL,
        'prefix' => 'komandan/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.patroli.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/patroli',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@patroliKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@patroliKaryawan',
        'as' => 'komandan.patroli.index',
        'namespace' => NULL,
        'prefix' => 'komandan/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.patroli.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/patroli/show/{patrolId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@showPatroliKaryawan',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@showPatroliKaryawan',
        'as' => 'komandan.patroli.show',
        'namespace' => NULL,
        'prefix' => 'komandan/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.patroli.monitoring' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/patroli/monitoring',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@monitoring',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@monitoring',
        'as' => 'komandan.patroli.monitoring',
        'namespace' => NULL,
        'prefix' => 'komandan/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.patroli.live_data' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/patroli/live-data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@getLivePatrolData',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanDashboardController@getLivePatrolData',
        'as' => 'komandan.patroli.live_data',
        'namespace' => NULL,
        'prefix' => 'komandan/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.jadwalshift.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/jadwal-shift',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanJadwalShiftController@index',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanJadwalShiftController@index',
        'as' => 'komandan.jadwalshift.index',
        'namespace' => NULL,
        'prefix' => 'komandan/jadwal-shift',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.jadwalshift.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'komandan/jadwal-shift/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanJadwalShiftController@storeOrUpdate',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanJadwalShiftController@storeOrUpdate',
        'as' => 'komandan.jadwalshift.store',
        'namespace' => NULL,
        'prefix' => 'komandan/jadwal-shift',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.laporankinerja.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/laporan-kinerja',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanLaporanKinerjaController@index',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanLaporanKinerjaController@index',
        'as' => 'komandan.laporankinerja.index',
        'namespace' => NULL,
        'prefix' => 'komandan/laporan-kinerja',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'komandan.laporankinerja.cetak' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'komandan/laporan-kinerja/cetak',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'komandan',
        ),
        'uses' => 'App\\Http\\Controllers\\Komandan\\KomandanLaporanKinerjaController@cetak',
        'controller' => 'App\\Http\\Controllers\\Komandan\\KomandanLaporanKinerjaController@cetak',
        'as' => 'komandan.laporankinerja.cetak',
        'namespace' => NULL,
        'prefix' => 'komandan/laporan-kinerja',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@index',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@index',
        'as' => 'ketua-departemen.dashboard',
        'namespace' => NULL,
        'prefix' => '/ketua-departemen',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.karyawan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/karyawan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@dataKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@dataKaryawan',
        'as' => 'ketua-departemen.karyawan.index',
        'namespace' => NULL,
        'prefix' => '/ketua-departemen',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.presensi.rekapitulasi' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/presensi',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@rekapPresensi',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@rekapPresensi',
        'as' => 'ketua-departemen.presensi.rekapitulasi',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.presensi.harian' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/presensi/harian',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanHarianPresensi',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanHarianPresensi',
        'as' => 'ketua-departemen.presensi.harian',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.presensi.detail_karyawan' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/presensi/karyawan/{nik}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@detailPresensiKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@detailPresensiKaryawan',
        'as' => 'ketua-departemen.presensi.detail_karyawan',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/presensi',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.laporan.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/laporan',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanKaryawan',
        'as' => 'ketua-departemen.laporan.index',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.laporan.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/laporan/show/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@showLaporanKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@showLaporanKaryawan',
        'as' => 'ketua-departemen.laporan.show',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.laporan.update_status' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ketua-departemen/laporan/update-status/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@updateStatusLaporan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@updateStatusLaporan',
        'as' => 'ketua-departemen.laporan.update_status',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/laporan',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.patroli.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/patroli',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@patroliKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@patroliKaryawan',
        'as' => 'ketua-departemen.patroli.index',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.patroli.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/patroli/show/{patrolId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@showPatroliKaryawan',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@showPatroliKaryawan',
        'as' => 'ketua-departemen.patroli.show',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.patroli.monitoring' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/patroli/monitoring',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@monitoring',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@monitoring',
        'as' => 'ketua-departemen.patroli.monitoring',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.patroli.live_data' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/patroli/live-data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@getLivePatrolData',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@getLivePatrolData',
        'as' => 'ketua-departemen.patroli.live_data',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/patroli',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.jadwalshift.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/jadwal-shift',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@jadwalShift',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@jadwalShift',
        'as' => 'ketua-departemen.jadwalshift.index',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/jadwal-shift',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.laporankinerja.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/laporan-kinerja',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanKinerja',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@laporanKinerja',
        'as' => 'ketua-departemen.laporankinerja.index',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/laporan-kinerja',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ketua-departemen.laporankinerja.cetak' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ketua-departemen/laporan-kinerja/cetak',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth:karyawan',
          2 => 'ketua.departemen',
        ),
        'uses' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@cetakLaporanKinerja',
        'controller' => 'App\\Http\\Controllers\\KetuaDepartemen\\KetuaDepartemenDashboardController@cetakLaporanKinerja',
        'as' => 'ketua-departemen.laporankinerja.cetak',
        'namespace' => NULL,
        'prefix' => 'ketua-departemen/laporan-kinerja',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'storage.local' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'storage/{path}',
      'action' => 
      array (
        'uses' => 'O:55:"Laravel\\SerializableClosure\\UnsignedSerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:3:{s:4:"disk";s:5:"local";s:6:"config";a:5:{s:6:"driver";s:5:"local";s:4:"root";s:43:"C:\\laragon\\www\\SiAmalin\\storage\\app/private";s:5:"serve";b:1;s:5:"throw";b:0;s:6:"report";b:0;}s:12:"isProduction";b:1;}s:8:"function";s:323:"function (\\Illuminate\\Http\\Request $request, string $path) use ($disk, $config, $isProduction) {
                    return (new \\Illuminate\\Filesystem\\ServeFile(
                        $disk,
                        $config,
                        $isProduction
                    ))($request, $path);
                }";s:5:"scope";s:47:"Illuminate\\Filesystem\\FilesystemServiceProvider";s:4:"this";N;s:4:"self";s:32:"00000000000003d60000000000000000";}}',
        'as' => 'storage.local',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
        'path' => '.*',
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
  ),
)
);

bootstrap\cache\services.php
<?php return array (
  'providers' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    2 => 'Illuminate\\Bus\\BusServiceProvider',
    3 => 'Illuminate\\Cache\\CacheServiceProvider',
    4 => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    5 => 'Illuminate\\Cookie\\CookieServiceProvider',
    6 => 'Illuminate\\Database\\DatabaseServiceProvider',
    7 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    8 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    9 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    10 => 'Illuminate\\Hashing\\HashServiceProvider',
    11 => 'Illuminate\\Mail\\MailServiceProvider',
    12 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    13 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    14 => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    15 => 'Illuminate\\Queue\\QueueServiceProvider',
    16 => 'Illuminate\\Redis\\RedisServiceProvider',
    17 => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    18 => 'Illuminate\\Session\\SessionServiceProvider',
    19 => 'Illuminate\\Translation\\TranslationServiceProvider',
    20 => 'Illuminate\\Validation\\ValidationServiceProvider',
    21 => 'Illuminate\\View\\ViewServiceProvider',
    22 => 'Laravel\\Pail\\PailServiceProvider',
    23 => 'Laravel\\Sail\\SailServiceProvider',
    24 => 'Laravel\\Tinker\\TinkerServiceProvider',
    25 => 'MongoDB\\Laravel\\MongoDBServiceProvider',
    26 => 'MongoDB\\Laravel\\MongoDBBusServiceProvider',
    27 => 'Carbon\\Laravel\\ServiceProvider',
    28 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    29 => 'Termwind\\Laravel\\TermwindServiceProvider',
    30 => 'ProtoneMedia\\LaravelFFMpeg\\Support\\ServiceProvider',
    31 => 'MongoDB\\Laravel\\MongodbServiceProvider',
    32 => 'App\\Providers\\AppServiceProvider',
    33 => 'App\\Providers\\AuthServiceProvider',
    34 => 'App\\Providers\\EventServiceProvider',
    35 => 'App\\Providers\\RouteServiceProvider',
    36 => 'App\\Providers\\AppServiceProvider',
  ),
  'eager' => 
  array (
    0 => 'Illuminate\\Auth\\AuthServiceProvider',
    1 => 'Illuminate\\Cookie\\CookieServiceProvider',
    2 => 'Illuminate\\Database\\DatabaseServiceProvider',
    3 => 'Illuminate\\Encryption\\EncryptionServiceProvider',
    4 => 'Illuminate\\Filesystem\\FilesystemServiceProvider',
    5 => 'Illuminate\\Foundation\\Providers\\FoundationServiceProvider',
    6 => 'Illuminate\\Notifications\\NotificationServiceProvider',
    7 => 'Illuminate\\Pagination\\PaginationServiceProvider',
    8 => 'Illuminate\\Session\\SessionServiceProvider',
    9 => 'Illuminate\\View\\ViewServiceProvider',
    10 => 'Laravel\\Pail\\PailServiceProvider',
    11 => 'MongoDB\\Laravel\\MongoDBServiceProvider',
    12 => 'Carbon\\Laravel\\ServiceProvider',
    13 => 'NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider',
    14 => 'Termwind\\Laravel\\TermwindServiceProvider',
    15 => 'ProtoneMedia\\LaravelFFMpeg\\Support\\ServiceProvider',
    16 => 'MongoDB\\Laravel\\MongodbServiceProvider',
    17 => 'App\\Providers\\AppServiceProvider',
    18 => 'App\\Providers\\AuthServiceProvider',
    19 => 'App\\Providers\\EventServiceProvider',
    20 => 'App\\Providers\\RouteServiceProvider',
    21 => 'App\\Providers\\AppServiceProvider',
  ),
  'deferred' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastManager' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Factory' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Contracts\\Broadcasting\\Broadcaster' => 'Illuminate\\Broadcasting\\BroadcastServiceProvider',
    'Illuminate\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\Dispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Contracts\\Bus\\QueueingDispatcher' => 'Illuminate\\Bus\\BusServiceProvider',
    'Illuminate\\Bus\\BatchRepository' => 'MongoDB\\Laravel\\MongoDBBusServiceProvider',
    'Illuminate\\Bus\\DatabaseBatchRepository' => 'Illuminate\\Bus\\BusServiceProvider',
    'cache' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.store' => 'Illuminate\\Cache\\CacheServiceProvider',
    'cache.psr6' => 'Illuminate\\Cache\\CacheServiceProvider',
    'memcached.connector' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Cache\\RateLimiter' => 'Illuminate\\Cache\\CacheServiceProvider',
    'Illuminate\\Foundation\\Console\\AboutCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\ForgetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClearCompiledCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Auth\\Console\\ClearResetsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DbCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\PruneCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\WipeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DownCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentDecryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnvironmentEncryptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Concurrency\\Console\\InvokeSerializedClosureCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\KeyGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\OptimizeClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PackageDiscoverCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\PruneStaleTagsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FlushFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ForgetFailedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\ListenCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\MonitorCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneBatchesCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\PruneFailedJobsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RestartCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\RetryBatchCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\WorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RouteListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\DumpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeedCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleFinishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleRunCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleClearCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleTestCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleWorkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Console\\Scheduling\\ScheduleInterruptCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\ShowModelCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageLinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StorageUnlinkCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\UpCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewCacheCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewClearCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ApiInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\BroadcastingInstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Cache\\Console\\CacheTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\CastMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelListCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ChannelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ClassMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ComponentMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConfigPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ConsoleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\ControllerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\DocsCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EnumMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventGenerateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\EventMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ExceptionMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Factories\\FactoryMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\InterfaceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\JobMiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\LangPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ListenerMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\MailMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Routing\\Console\\MiddlewareMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ModelMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\NotificationMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Notifications\\Console\\NotificationTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ObserverMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\PolicyMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ProviderMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\FailedTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\TableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Queue\\Console\\BatchesTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RequestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ResourceMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\RuleMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ScopeMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Seeds\\SeederMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Session\\Console\\SessionTableCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ServeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\StubPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TestMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\TraitMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\VendorPublishCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Foundation\\Console\\ViewMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.repository' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'migration.creator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Migrations\\Migrator' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\FreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\InstallCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RefreshCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\ResetCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\RollbackCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\StatusCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'Illuminate\\Database\\Console\\Migrations\\MigrateMakeCommand' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'composer' => 'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider',
    'hash' => 'Illuminate\\Hashing\\HashServiceProvider',
    'hash.driver' => 'Illuminate\\Hashing\\HashServiceProvider',
    'mail.manager' => 'Illuminate\\Mail\\MailServiceProvider',
    'mailer' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Mail\\Markdown' => 'Illuminate\\Mail\\MailServiceProvider',
    'Illuminate\\Contracts\\Pipeline\\Hub' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'pipeline' => 'Illuminate\\Pipeline\\PipelineServiceProvider',
    'queue' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.connection' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.failer' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.listener' => 'Illuminate\\Queue\\QueueServiceProvider',
    'queue.worker' => 'Illuminate\\Queue\\QueueServiceProvider',
    'redis' => 'Illuminate\\Redis\\RedisServiceProvider',
    'redis.connection' => 'Illuminate\\Redis\\RedisServiceProvider',
    'auth.password' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'auth.password.broker' => 'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider',
    'translator' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'translation.loader' => 'Illuminate\\Translation\\TranslationServiceProvider',
    'validator' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'validation.presence' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Illuminate\\Contracts\\Validation\\UncompromisedVerifier' => 'Illuminate\\Validation\\ValidationServiceProvider',
    'Laravel\\Sail\\Console\\InstallCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'Laravel\\Sail\\Console\\PublishCommand' => 'Laravel\\Sail\\SailServiceProvider',
    'command.tinker' => 'Laravel\\Tinker\\TinkerServiceProvider',
    'MongoDB\\Laravel\\Bus\\MongoBatchRepository' => 'MongoDB\\Laravel\\MongoDBBusServiceProvider',
  ),
  'when' => 
  array (
    'Illuminate\\Broadcasting\\BroadcastServiceProvider' => 
    array (
    ),
    'Illuminate\\Bus\\BusServiceProvider' => 
    array (
    ),
    'Illuminate\\Cache\\CacheServiceProvider' => 
    array (
    ),
    'Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider' => 
    array (
    ),
    'Illuminate\\Hashing\\HashServiceProvider' => 
    array (
    ),
    'Illuminate\\Mail\\MailServiceProvider' => 
    array (
    ),
    'Illuminate\\Pipeline\\PipelineServiceProvider' => 
    array (
    ),
    'Illuminate\\Queue\\QueueServiceProvider' => 
    array (
    ),
    'Illuminate\\Redis\\RedisServiceProvider' => 
    array (
    ),
    'Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider' => 
    array (
    ),
    'Illuminate\\Translation\\TranslationServiceProvider' => 
    array (
    ),
    'Illuminate\\Validation\\ValidationServiceProvider' => 
    array (
    ),
    'Laravel\\Sail\\SailServiceProvider' => 
    array (
    ),
    'Laravel\\Tinker\\TinkerServiceProvider' => 
    array (
    ),
    'MongoDB\\Laravel\\MongoDBBusServiceProvider' => 
    array (
    ),
  ),
);

bootstrap\app.php
<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware) {
        // Middleware global
        $middleware->use([
            \Illuminate\Http\Middleware\TrustProxies::class,
            \Illuminate\Http\Middleware\HandleCors::class,
            \Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance::class,
            \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
            \Illuminate\Foundation\Http\Middleware\TrimStrings::class,
            \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
        ]);

        // Alias untuk route middleware
        $middleware->alias([
            'admin' => \App\Http\Middleware\AdminMiddleware::class,
            'komandan' => \App\Http\Middleware\KomandanMiddleware::class,
            'ketua.departemen' => \App\Http\Middleware\KetuaDepartemenMiddleware::class,
            'prevent.caching' => \App\Http\Middleware\PreventCaching::class,
            'auth' => \Illuminate\Auth\Middleware\Authenticate::class,
            'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
            'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
            'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
            'can' => \Illuminate\Auth\Middleware\Authorize::class,
            'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
            'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
            'precognitive' => \Illuminate\Foundation\Http\Middleware\HandlePrecognitiveRequests::class,
            'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
            'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
            'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
        ]);

        // Middleware untuk grup 'web'
        $middleware->web(append: [
            \Illuminate\Cookie\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \Illuminate\Foundation\Http\Middleware\VerifyCsrfToken::class,
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
            \App\Http\Middleware\ClearRegistrationSession::class,
            \App\Http\Middleware\PreventCaching::class
        ]);

    })
    ->withExceptions(function (Exceptions $exceptions) {
        //
    })->create();

bootstrap\providers.php
<?php

return [
    App\Providers\AppServiceProvider::class,
];

config\app.php
<?php

return [

    'name' => env('APP_NAME', 'Laravel'),

    'env' => env('APP_ENV', 'production'),

    'debug' => (bool) env('APP_DEBUG', false),

    'url' => env('APP_URL', 'http://localhost'),

    'timezone' => 'Asia/Jakarta',

    'locale' => env('APP_LOCALE', 'id'),

    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Application Service Providers
    |--------------------------------------------------------------------------
    |
    | Berikut adalah daftar service providers yang digunakan oleh aplikasi.
    | Pastikan Jenssegers\Mongodb sudah terdaftar agar bisa menggunakan MongoDB.
    |
    */

    'providers' => [

        /*
         * Laravel Framework Service Providers...
         */
        Illuminate\Auth\AuthServiceProvider::class,
        Illuminate\Broadcasting\BroadcastServiceProvider::class,
        Illuminate\Bus\BusServiceProvider::class,
        Illuminate\Cache\CacheServiceProvider::class,
        Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,
        Illuminate\Cookie\CookieServiceProvider::class,
        Illuminate\Database\DatabaseServiceProvider::class,
        Illuminate\Encryption\EncryptionServiceProvider::class,
        Illuminate\Filesystem\FilesystemServiceProvider::class,
        Illuminate\Foundation\Providers\FoundationServiceProvider::class,
        Illuminate\Hashing\HashServiceProvider::class,
        Illuminate\Mail\MailServiceProvider::class,
        Illuminate\Notifications\NotificationServiceProvider::class,
        Illuminate\Pagination\PaginationServiceProvider::class,
        Illuminate\Pipeline\PipelineServiceProvider::class,
        Illuminate\Queue\QueueServiceProvider::class,
        Illuminate\Redis\RedisServiceProvider::class,
        Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,
        Illuminate\Session\SessionServiceProvider::class,
        Illuminate\Translation\TranslationServiceProvider::class,
        Illuminate\Validation\ValidationServiceProvider::class,
        Illuminate\View\ViewServiceProvider::class,

        /*
         * Package Service Providers...
         */
        MongoDB\Laravel\MongodbServiceProvider::class, // Tambahkan ini!

        /*
         * Application Service Providers...
         */
        App\Providers\AppServiceProvider::class,
        App\Providers\AuthServiceProvider::class,
        // App\Providers\BroadcastServiceProvider::class,
        App\Providers\EventServiceProvider::class,
        App\Providers\RouteServiceProvider::class,

    ],

    /*
    |--------------------------------------------------------------------------
    | Class Aliases
    |--------------------------------------------------------------------------
    |
    | Daftar alias yang dapat digunakan sebagai referensi singkat di dalam kode.
    |
    */

    'aliases' => [

        'App' => Illuminate\Support\Facades\App::class,
        'Arr' => Illuminate\Support\Arr::class,
        'Auth' => Illuminate\Support\Facades\Auth::class,
        'Cache' => Illuminate\Support\Facades\Cache::class,
        'Config' => Illuminate\Support\Facades\Config::class,
        'DB' => Illuminate\Support\Facades\DB::class,
        'Eloquent' => Jenssegers\Mongodb\Eloquent\Model::class, // Tambahkan ini!
        'Event' => Illuminate\Support\Facades\Event::class,
        'Hash' => Illuminate\Support\Facades\Hash::class,
        'Log' => Illuminate\Support\Facades\Log::class,
        'MongoDB' => Jenssegers\Mongodb\Facades\MongoDB::class, // Tambahkan ini!
        'Route' => Illuminate\Support\Facades\Route::class,
        'Schema' => Illuminate\Support\Facades\Schema::class,
        'Session' => Illuminate\Support\Facades\Session::class,
        'Storage' => Illuminate\Support\Facades\Storage::class,

    ],

];

config\auth.php
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'karyawan' => [
            'driver' => 'session',
            'provider' => 'karyawans',
        ],

        'user' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\Karyawan::class,
        ],

        'karyawans' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\Karyawan::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the amount of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];

config\cache.php
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];

config\database.php
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    */
    'default' => env('DB_CONNECTION', 'mongodb'), // Ganti default ke MongoDB

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    */
    'connections' => [

        // Konfigurasi MongoDB
        'mongodb' => [
            'driver'   => 'mongodb',
            'dsn'      => env('DB_DSN', 'mongodb://127.0.0.1:27017'),
            'database' => env('DB_DATABASE', 'siamalin'),
        ],

        // Konfigurasi MySQL (Jika masih dibutuhkan)
        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => false,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        // Konfigurasi PostgreSQL
        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        // Konfigurasi SQL Server
        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    */
    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    */
    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
            'persistent' => env('REDIS_PERSISTENT', false),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];

config\face_recognition.php
<?php

return [
    'threshold' => env('FACE_RECOGNITION_THRESHOLD', 0.70),
    'embedding_version' => env('FACE_EMBEDDING_VERSION', 'v2'),
    'max_distance' => env('FACE_MAX_DISTANCE', 55),
    'timeout' => env('FACE_DETECTION_TIMEOUT', 30),
    'max_attempts' => env('FACE_MAX_ATTEMPTS', 3),
    'min_face_size' => env('FACE_MIN_SIZE', 150),
    'enable_anti_spoofing' => env('FACE_ANTI_SPOOFING', true),
];

config\filesystems.php
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app/private'),
            'serve' => true,
            'throw' => false,
            'report' => false,
        ],

        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
            'report' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
            'report' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];

config\laravel-ffmpeg.php
<?php

return [
    'ffmpeg' => [
        'binaries' => env('FFMPEG_BINARIES', 'ffmpeg'),

        'threads' => 12,   // set to false to disable the default 'threads' filter
    ],

    'ffprobe' => [
        'binaries' => env('FFPROBE_BINARIES', 'ffprobe'),
    ],

    'timeout' => 3600,

    'log_channel' => env('LOG_CHANNEL', 'stack'),   // set to false to completely disable logging

    'temporary_files_root' => env('FFMPEG_TEMPORARY_FILES_ROOT', sys_get_temp_dir()),

    'temporary_files_encrypted_hls' => env('FFMPEG_TEMPORARY_ENCRYPTED_HLS', env('FFMPEG_TEMPORARY_FILES_ROOT', sys_get_temp_dir())),
];

config\logging.php
<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is utilized to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | utilizes the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    |                    "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'with' => [
                'stream' => 'php://stderr',
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];

config\mail.php
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'scheme' => env('MAIL_SCHEME'),
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];

config\queue.php
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];

config\services.php
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];

config\session.php
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => (int) env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];

database\factories\UserFactory.php
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}

database\migrations\0001_01_01_000000_create_users_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};

database\migrations\0001_01_01_000001_create_cache_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};

database\migrations\0001_01_01_000002_create_jobs_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};

database\migrations\2023_08_01_000000_add_face_fields_to_karyawan.php
<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class AddFaceFieldsToKaryawan extends Migration
{
    public function up()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->array('face_embedding')->nullable();
            $collection->boolean('is_trained')->default(false);
            $collection->array('face_samples')->nullable();
        });
    }

    public function down()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->dropColumn('face_embedding');
            $collection->dropColumn('is_trained');
            $collection->dropColumn('face_samples');
        });
    }
}

database\migrations\2025_05_02_193013_add_face_embedding_to_karyawans_table.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class AddFaceEmbeddingToKaryawansTable extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->index('face_embedding');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->dropIndex('face_embedding');
        });
    }
}

database\migrations\2025_05_18_193818_add_office_location_to_karyawan.php
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class AddOfficeLocationToKaryawan extends Migration
{
    public function up()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->point('office_location')->nullable();
            $collection->float('office_radius')->default(55); // dalam meter
        });
    }

    public function down()
    {
        Schema::connection('mongodb')->table('karyawan', function ($collection) {
            $collection->dropColumn('office_location');
            $collection->dropColumn('office_radius');
        });
    }
}

database\seeders\AdminUserSeeder.php
<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\Karyawan;
use Illuminate\Support\Facades\Hash;

class AdminUserSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        Karyawan::updateOrCreate(
            ['nik' => 'admin'], // Kriteria untuk mencari, jika ada akan diupdate, jika tidak akan dibuat
            [
                'nama_lengkap' => 'Super Admin',
                'jabatan' => 'Administrator',
                'no_hp' => '0000000000',
                'password' => Hash::make('admin123'), // Ganti dengan password yang kuat
                'is_admin' => true,
                // tambahkan field lain yang mandatory jika ada
            ]
        );
    }
}

database\seeders\DatabaseSeeder.php
<?php

namespace Database\Seeders;

// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        // User::factory(10)->create();

        // Panggil AdminUserSeeder
        $this->call([
            AdminUserSeeder::class,
            // Seeder lain jika ada
        ]);
    }
}

routes\console.php
<?php

use Illuminate\Foundation\Console\ClosureCommand;
use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    /** @var ClosureCommand $this */
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');

routes\web.php
<?php
// File: routes/web.php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\AuthController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\PresensiController;
use App\Http\Controllers\LaporanController;
use App\Http\Controllers\PatroliController;
use App\Http\Controllers\FaceRecognitionController;
use App\Http\Controllers\Admin\AdminDashboardController;
use App\Http\Controllers\Admin\AdminKaryawanController;
use App\Http\Controllers\Admin\AdminPresensiController;
use App\Http\Controllers\Admin\AdminLaporanController;
use App\Http\Controllers\Admin\AdminFakultasController;
use App\Http\Controllers\Admin\AdminPatroliController;
use App\Http\Controllers\Admin\AdminBackupController;
use App\Http\Controllers\Komandan\KomandanDashboardController;
use App\Http\Controllers\Komandan\KomandanJadwalShiftController;
use App\Http\Controllers\Komandan\KomandanLaporanKinerjaController;
use App\Http\Controllers\KetuaDepartemen\KetuaDepartemenDashboardController;
use Illuminate\Support\Facades\Auth;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
*/

Route::middleware(['web'])->group(function () {
    Route::get('/', function () {
        if (Auth::guard('karyawan')->check()) {
            $user = Auth::guard('karyawan')->user();
            if ($user->is_admin) {
                return redirect()->route('admin.dashboard');
            } elseif ($user->is_komandan) {
                return redirect()->route('komandan.dashboard');
            } elseif ($user->is_ketua_departemen) {
                return redirect()->route('ketua-departemen.dashboard');
            }
            return redirect()->route('dashboard');
        }
        return app(AuthController::class)->showLoginForm();
    })->name('login');

    Route::post('/proseslogin', [AuthController::class, 'proseslogin'])->name('proseslogin');
    Route::get('/admin/login', [AuthController::class, 'showAdminLoginForm'])->name('admin.login.form');
    Route::post('/admin/login', [AuthController::class, 'prosesAdminLogin'])->name('admin.login.proses');
    Route::post('/face/verify', [AuthController::class, 'verifyFace'])->name('face.verify');
});

Route::middleware(['auth:karyawan'])->group(function () {
    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');
    Route::get('/proseslogout', [AuthController::class, 'proseslogout'])->name('proseslogout');
    
    Route::get('/profile', function () {
        $karyawan = Auth::guard('karyawan')->user();
        return view('presensi.profile', compact('karyawan'));
    })->name('profile');
    Route::get('/editprofile', function () {
        $karyawan = Auth::guard('karyawan')->user();
        return view('presensi.editprofile', compact('karyawan'));
    })->name('editprofile');
    Route::post('/presensi/updateprofile', [PresensiController::class, 'updateprofile'])->name('updateprofile');

    Route::prefix('presensi')->name('presensi.')->group(function () {
        Route::get('/create', [PresensiController::class, 'create'])->name('create');
        Route::post('/store', [PresensiController::class, 'store'])->name('store');
        Route::get('/histori', [PresensiController::class, 'histori'])->name('histori');
        Route::post('/gethistori', [PresensiController::class, 'gethistori'])->name('gethistori');
    });

    Route::prefix('laporan')->name('laporan.')->group(function(){
        Route::get('/', [LaporanController::class, 'index'])->name('index');
        Route::get('/buat', [LaporanController::class, 'create'])->name('create');
        Route::post('/store', [LaporanController::class, 'store'])->name('store');
    });

    Route::prefix('patroli')->name('patroli.')->group(function () {
        Route::get('/', [PatroliController::class, 'index'])->name('index');
        Route::post('/start', [PatroliController::class, 'startPatrol'])->name('start');
        Route::post('/store-point', [PatroliController::class, 'storePoint'])->name('store_point');
        Route::post('/pause', [PatroliController::class, 'pausePatrol'])->name('pause');
        Route::post('/resume', [PatroliController::class, 'resumePatrol'])->name('resume');
        Route::post('/stop', [PatroliController::class, 'stopPatrol'])->name('stop');
        Route::get('/histori', [PatroliController::class, 'historiPatroli'])->name('histori');
        Route::get('/histori/{patrolId}', [PatroliController::class, 'detailHistoriPatroli'])->name('histori.detail');
        
        // Route untuk cek radius real-time
        Route::post('/check-radius', [PatroliController::class, 'checkRadius'])->name('check_radius');
        
        // NEW: Route untuk verifikasi wajah patroli
        Route::post('/verify-face', [PatroliController::class, 'verifyFace'])->name('verify_face');
    });

    Route::post('/set-face-verified-session', [AuthController::class, 'setFaceVerifiedSession'])->name('session.set_face_verified');
    Route::get('/check-face-verified-session', [AuthController::class, 'checkFaceVerifiedSession'])->name('session.check_face_verified');

    // PANEL ADMIN
    Route::prefix('panel')->name('admin.')->middleware(['admin'])->group(function () {
        Route::get('/', [AdminDashboardController::class, 'index'])->name('dashboard');

        Route::prefix('karyawan')->name('karyawan.')->group(function () {
            Route::get('/', [AdminKaryawanController::class, 'index'])->name('index');
            Route::get('/create', [AdminKaryawanController::class, 'create'])->name('create');
            Route::post('/step1', [AdminKaryawanController::class, 'storeStep1'])->name('store_step1');
            Route::get('/face-registration', [AdminKaryawanController::class, 'showFaceRegistration'])->name('face_registration');
            Route::post('/complete-registration', [AdminKaryawanController::class, 'completeRegistration'])->name('complete_registration');
            Route::get('/{id}', [AdminKaryawanController::class, 'show'])->name('show');
            Route::get('/{id}/edit', [AdminKaryawanController::class, 'edit'])->name('edit');
            Route::put('/{id}', [AdminKaryawanController::class, 'update'])->name('update');
            Route::delete('/{id}', [AdminKaryawanController::class, 'destroy'])->name('destroy');
            Route::get('/{id}/face-data', [AdminKaryawanController::class, 'viewFaceData'])->name('face_data');
            Route::post('/{id}/reset-face', [AdminKaryawanController::class, 'resetFaceData'])->name('reset_face');
            Route::get('/{id}/reset-location', [AdminKaryawanController::class, 'resetOfficeLocation'])->name('reset_location');
        });

        Route::prefix('fakultas')->name('fakultas.')->group(function () {
            Route::get('/', [AdminFakultasController::class, 'index'])->name('index');
            Route::get('/create', [AdminFakultasController::class, 'create'])->name('create');
            Route::post('/', [AdminFakultasController::class, 'store'])->name('store');
            Route::get('/{fakultas}/edit', [AdminFakultasController::class, 'edit'])->name('edit');
            Route::put('/{fakultas}', [AdminFakultasController::class, 'update'])->name('update');
            Route::delete('/{fakultas}', [AdminFakultasController::class, 'destroy'])->name('destroy');
            Route::get('/get-details-for-karyawan/{nama_fakultas}', [AdminFakultasController::class, 'getFakultasDetails'])->name('get_details_for_karyawan');
        });
        
        Route::prefix('presensi')->name('presensi.')->group(function () {
            Route::get('/', [AdminPresensiController::class, 'rekapitulasi'])->name('rekapitulasi');
            Route::get('/harian', [AdminPresensiController::class, 'laporanHarian'])->name('harian');
            Route::get('/karyawan/{nik}', [AdminPresensiController::class, 'detailKaryawan'])->name('detail_karyawan');
            Route::get('/edit/{id}', [AdminPresensiController::class, 'editPresensi'])->name('edit');
            Route::put('/update/{id}', [AdminPresensiController::class, 'updatePresensi'])->name('update');
            
            // --- PERBAIKAN FINAL RUTE ---
            // Menggunakan notasi titik (dot) pada nama rute agar konsisten
            Route::post('/reset-masuk/{id}', [AdminPresensiController::class, 'resetMasuk'])->name('reset.masuk');
            Route::post('/reset-pulang/{id}', [AdminPresensiController::class, 'resetPulang'])->name('reset.pulang');
            Route::delete('/hapus/{id}', [AdminPresensiController::class, 'destroy'])->name('hapus');
        });
        
        Route::prefix('laporan')->name('laporan.')->group(function () {
            Route::get('/', [AdminLaporanController::class, 'index'])->name('index');
            Route::get('/{id}', [AdminLaporanController::class, 'show'])->name('show');
            Route::post('/{id}/update-status', [AdminLaporanController::class, 'updateStatus'])->name('update_status');
            Route::delete('/{id}', [AdminLaporanController::class, 'destroy'])->name('destroy');
        });

        Route::prefix('patroli')->name('patroli.')->group(function () {
            Route::get('/', [AdminPatroliController::class, 'index'])->name('index');
            Route::get('/show/{patrolId}', [AdminPatroliController::class, 'show'])->name('show');
            Route::delete('/destroy/{patrolId}', [AdminPatroliController::class, 'destroy'])->name('destroy');
        });

        Route::prefix('backup')->name('backup.')->group(function () {
            Route::get('/', [AdminBackupController::class, 'index'])->name('index');
            Route::post('/process', [AdminBackupController::class, 'processBackup'])->name('process');
        });
    });

    // PANEL KOMANDAN
    Route::prefix('komandan')->name('komandan.')->middleware(['komandan'])->group(function() {
        Route::get('/dashboard', [KomandanDashboardController::class, 'index'])->name('dashboard');
        Route::get('/karyawan', [KomandanDashboardController::class, 'dataKaryawan'])->name('karyawan.index');

        Route::prefix('presensi')->name('presensi.')->group(function () {
            Route::get('/', [KomandanDashboardController::class, 'rekapPresensi'])->name('rekapitulasi');
            Route::get('/harian', [KomandanDashboardController::class, 'laporanHarianPresensi'])->name('harian');
            Route::get('/karyawan/{nik}', [KomandanDashboardController::class, 'detailPresensiKaryawan'])->name('detail_karyawan');
            Route::get('/edit/{id}', [KomandanDashboardController::class, 'editPresensi'])->name('edit');
            Route::put('/update/{id}', [KomandanDashboardController::class, 'updatePresensi'])->name('update');
        });

        Route::prefix('laporan')->name('laporan.')->group(function () {
            Route::get('/', [KomandanDashboardController::class, 'laporanKaryawan'])->name('index');
            Route::get('/show/{id}', [KomandanDashboardController::class, 'showLaporanKaryawan'])->name('show');
            Route::post('/update-status/{id}', [KomandanDashboardController::class, 'updateStatusLaporan'])->name('update_status');
        });
        
        Route::prefix('patroli')->name('patroli.')->group(function () {
            Route::get('/', [KomandanDashboardController::class, 'patroliKaryawan'])->name('index');
            Route::get('/show/{patrolId}', [KomandanDashboardController::class, 'showPatroliKaryawan'])->name('show');
            Route::get('/monitoring', [KomandanDashboardController::class, 'monitoring'])->name('monitoring');
            Route::get('/live-data', [KomandanDashboardController::class, 'getLivePatrolData'])->name('live_data');
        });

        Route::prefix('jadwal-shift')->name('jadwalshift.')->group(function () {
            Route::get('/', [KomandanJadwalShiftController::class, 'index'])->name('index');
            Route::post('/store', [KomandanJadwalShiftController::class, 'storeOrUpdate'])->name('store');
        });

        Route::prefix('laporan-kinerja')->name('laporankinerja.')->group(function () {
            Route::get('/', [KomandanLaporanKinerjaController::class, 'index'])->name('index');
            Route::get('/cetak', [KomandanLaporanKinerjaController::class, 'cetak'])->name('cetak');
        });
    });

    // PANEL KETUA DEPARTEMEN
    Route::prefix('ketua-departemen')->name('ketua-departemen.')->middleware(['ketua.departemen'])->group(function() {
        Route::get('/dashboard', [KetuaDepartemenDashboardController::class, 'index'])->name('dashboard');
        Route::get('/karyawan', [KetuaDepartemenDashboardController::class, 'dataKaryawan'])->name('karyawan.index');

        Route::prefix('presensi')->name('presensi.')->group(function () {
            Route::get('/', [KetuaDepartemenDashboardController::class, 'rekapPresensi'])->name('rekapitulasi');
            Route::get('/harian', [KetuaDepartemenDashboardController::class, 'laporanHarianPresensi'])->name('harian');
            Route::get('/karyawan/{nik}', [KetuaDepartemenDashboardController::class, 'detailPresensiKaryawan'])->name('detail_karyawan');
        });

        Route::prefix('laporan')->name('laporan.')->group(function () {
            Route::get('/', [KetuaDepartemenDashboardController::class, 'laporanKaryawan'])->name('index');
            Route::get('/show/{id}', [KetuaDepartemenDashboardController::class, 'showLaporanKaryawan'])->name('show');
            Route::post('/update-status/{id}', [KetuaDepartemenDashboardController::class, 'updateStatusLaporan'])->name('update_status');
        });
        
        Route::prefix('patroli')->name('patroli.')->group(function () {
            Route::get('/', [KetuaDepartemenDashboardController::class, 'patroliKaryawan'])->name('index');
            Route::get('/show/{patrolId}', [KetuaDepartemenDashboardController::class, 'showPatroliKaryawan'])->name('show');
            Route::get('/monitoring', [KetuaDepartemenDashboardController::class, 'monitoring'])->name('monitoring');
            Route::get('/live-data', [KetuaDepartemenDashboardController::class, 'getLivePatrolData'])->name('live_data');
        });

        Route::prefix('jadwal-shift')->name('jadwalshift.')->group(function () {
            Route::get('/', [KetuaDepartemenDashboardController::class, 'jadwalShift'])->name('index');
        });

        Route::prefix('laporan-kinerja')->name('laporankinerja.')->group(function () {
            Route::get('/', [KetuaDepartemenDashboardController::class, 'laporanKinerja'])->name('index');
            Route::get('/cetak', [KetuaDepartemenDashboardController::class, 'cetakLaporanKinerja'])->name('cetak');
        });
    });

});

.env
APP_NAME=SiAmalin
APP_ENV=production
APP_KEY=base64:EIaSFuIyztDoE28ZJO0KwgdjoIBB514OlyOHeHOoshQ=
APP_DEBUG=false
APP_URL=https://siamalin-undip.my.id

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mongodb
DB_HOST=127.0.0.1
DB_PORT=27017
DB_DATABASE=siamalin
DB_USERNAME=
DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

composer.json
{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": ["laravel", "framework"],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "laravel/framework": "^12.0",
        "laravel/tinker": "^2.10.1",
        "mongodb/laravel-mongodb": "^5.4",
        "pbmedia/laravel-ffmpeg": "^8.7"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.13",
        "laravel/sail": "^1.41",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "phpunit/phpunit": "^11.5.3"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "App\\Helpers\\": "app/Helpers/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}

face_recognition_service.py
import sys
import json
import os
import warnings
import contextlib
import base64  # <-- INI BARIS PENTING YANG HILANG
import numpy as np
from io import BytesIO
from PIL import Image

# --- Blok untuk membungkam error sampingan ---
warnings.filterwarnings('ignore')
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3' 
os.environ["DEEPFACE_HOME"] = "C:\\.deepface"
# --- Akhir Blok ---

# Import DeepFace setelah path diatur
from deepface import DeepFace

MODEL_NAME = "Dlib"

def get_image_from_file(file_path):
    with open(file_path, 'r') as f:
        base64_string = f.read()
    if ";base64," in base64_string:
        header, encoded = base64_string.split(",", 1)
    else:
        encoded = base64_string
    
    image_data = base64.b64decode(encoded)
    image = Image.open(BytesIO(image_data))
    if image.mode == 'RGBA':
        image = image.convert('RGB')
    return np.array(image)

def main(args):
    try:
        command = args[1]
        
        if command == "generate":
            image_path = args[2]
            image_np = get_image_from_file(image_path)
            try:
                embedding_objs = DeepFace.represent(img_path=image_np, model_name=MODEL_NAME, enforce_detection=True)
                embedding = embedding_objs[0]["embedding"]
                print(json.dumps({"success": True, "descriptor": embedding}))
            except Exception:
                print(json.dumps({"success": False, "message": "Server (DeepFace) gagal mendeteksi wajah pada gambar."}))

        elif command == "verify":
            live_image_path = args[2]
            registered_photo_path = args[3]
            try:
                result = DeepFace.verify(
                    img1_path=live_image_path,
                    img2_path=registered_photo_path,
                    model_name=MODEL_NAME,
                    enforce_detection=True
                )
                print(json.dumps({"success": True, "match": bool(result["verified"])}))
            except Exception:
                # Gagal jika wajah tidak terdeteksi di salah satu gambar
                print(json.dumps({"success": True, "match": False, "message": "Wajah tidak terdeteksi di salah satu gambar."}))
                
        else:
            print(json.dumps({"success": False, "message": "Perintah tidak dikenal."}))

    except Exception as e:
        print(json.dumps({"success": False, "message": str(e), "args": sys.argv}))

# Fungsi untuk membungkam stderr
@contextlib.contextmanager
def suppress_stderr():
    original_stderr = sys.stderr
    sys.stderr = open(os.devnull, 'w')
    try:
        yield
    finally:
        sys.stderr.close()
        sys.stderr = original_stderr

if __name__ == "__main__":
    with suppress_stderr():
        main(sys.argv)

package.json
{
    "private": true,
    "type": "module",
    "scripts": {
        "build": "vite build",
        "dev": "vite"
    },
    "devDependencies": {
        "@tailwindcss/vite": "^4.0.0",
        "axios": "^1.7.4",
        "concurrently": "^9.0.1",
        "laravel-vite-plugin": "^1.2.0",
        "tailwindcss": "^4.0.0",
        "vite": "^6.0.11"
    },
    "dependencies": {
        "face-api.js": "^0.22.2",
        "leaflet": "^1.9.4"
    }
}

resources\css\app.css
@import 'tailwindcss';

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';
@source '../../storage/framework/views/*.php';
@source "../**/*.blade.php";
@source "../**/*.js";
@source "../**/*.vue";

@theme {
    --font-sans: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
        'Segoe UI Symbol', 'Noto Color Emoji';
}

resources\css\face-recognition.css
/* Face Recognition Styles */
.face-recognition-container {
    position: relative;
    margin: 0 auto;
    max-width: 300px;
}

.face-recognition-video,
.face-recognition-canvas {
    width: 100%;
    height: auto;
    border-radius: 10px;
    background-color: #f8f9fa;
}

.face-recognition-instructions {
    margin-top: 15px;
    padding: 10px;
    border-radius: 8px;
}

.face-recognition-buttons {
    margin-top: 15px;
    display: flex;
    gap: 10px;
    justify-content: center;
}

.face-landmark-point {
    position: absolute;
    width: 4px;
    height: 4px;
    background-color: #4e73df;
    border-radius: 50%;
    transform: translate(-2px, -2px);
}

/* Responsive adjustments */
@media (max-width: 576px) {
    .face-recognition-container {
        width: 100%;
    }
    
    .face-recognition-buttons {
        flex-direction: column;
    }
    
    .face-recognition-buttons .btn {
        width: 100%;
    }
}

resources\js\app.js
import './bootstrap';

resources\js\bootstrap.js
import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';

resources\views\admin\dashboard.blade.php
@extends('admin.layouts.app')

@section('title', 'Dashboard Utama')

@section('content')
<div class="container-fluid">
    <h1 class="mt-4">Dashboard Admin</h1>
    <p>Selamat datang di panel admin SiAmalin.</p>

    <div class="row">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Karyawan</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $jumlahKaryawan ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-people-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Hadir Hari Ini</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $hadirHariIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-calendar-check-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- Kartu Terlambat Hari Ini Dihapus --}}

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Laporan Baru
                            </div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">{{ $laporanBelumDitinjau ?? 0 }}</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-file-earmark-text-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8 mb-4"> 
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Ringkasan Presensi Bulan Ini</h6>
                </div>
                <div class="card-body">
                    @if($rekapPresensiBulanan)
                    <p>Total Kehadiran: <strong>{{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}</strong></p>
                    
                    <div style="position: relative; height:300px; width:100%;"> 
                        <canvas id="presensiChart"></canvas>
                    </div>
                    @else
                    <p>Belum ada data presensi untuk bulan ini.</p>
                    @endif
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('styles')
<style>
    .border-left-primary { border-left: .25rem solid #4e73df!important; }
    .border-left-success { border-left: .25rem solid #1cc88a!important; }
    .border-left-info { border-left: .25rem solid #36b9cc!important; }
    .border-left-warning { border-left: .25rem solid #f6c23e!important; }
    .text-gray-300 { color: #dddfeb!important; }
    .text-gray-800 { color: #5a5c69!important; }
</style>
@endpush

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    @if($rekapPresensiBulanan)
    const ctx = document.getElementById('presensiChart');
    if (ctx) {
        new Chart(ctx, {
            type: 'bar', 
            data: {
                labels: ['Hadir'],
                datasets: [{
                    label: 'Jumlah Presensi Bulan Ini',
                    data: [
                        {{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}
                    ],
                    backgroundColor: [
                        'rgba(28, 200, 138, 0.5)' // Success
                    ],
                    borderColor: [
                        'rgba(28, 200, 138, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0 
                        }
                    }
                },
                responsive: true,
                maintainAspectRatio: false 
            }
        });
    }
    @endif
</script>
@endpush

resources\views\admin\backup\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Backup Data')

@push('styles')
<style>
    .backup-card {
        border-left: .25rem solid;
        transition: all 0.2s ease-in-out;
    }
    .backup-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15)!important;
    }
    .border-left-presensi { border-color: #1cc88a; }
    .border-left-laporan { border-color: #f6c23e; }
    .border-left-patroli { border-color: #e74a3b; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Backup Data Aplikasi</h1>
    <div class="alert alert-warning">
        <h6 class="alert-heading fw-bold"><i class="bi bi-exclamation-triangle-fill me-2"></i>Perhatian Penting!</h6>
        <p class="mb-1">
            Gunakan fitur ini untuk memindahkan data lama dari koleksi utama ke koleksi arsip (backup).
            Tindakan ini akan <strong>memindahkan data secara permanen</strong> dan <strong>tidak dapat dibatalkan</strong>.
        </p>
        <hr>
        <p class="mb-0">
            <strong>Aturan:</strong> Anda hanya dapat mem-backup data yang usianya <strong>lebih dari 3 bulan</strong>.
        </p>
    </div>

    <div class="row">
        <!-- Backup Presensi -->
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100 py-2 backup-card border-left-presensi">
                <div class="card-body">
                    <form action="{{ route('admin.backup.process') }}" method="POST" onsubmit="return confirm('Anda yakin ingin mem-backup data PRESENSI pada periode ini? Data akan dipindahkan secara permanen.');">
                        @csrf
                        <input type="hidden" name="type" value="presensi">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Backup Data Presensi</div>
                                <div class="mb-2">
                                    <label for="start_month_presensi" class="form-label small mb-0">Dari Bulan:</label>
                                    <input type="month" name="start_month" id="start_month_presensi" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <div class="mb-3">
                                    <label for="end_month_presensi" class="form-label small mb-0">Sampai Bulan:</label>
                                    <input type="month" name="end_month" id="end_month_presensi" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <button type="submit" class="btn btn-success btn-sm"><i class="bi bi-archive-fill me-1"></i> Mulai Backup Presensi</button>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-calendar-check-fill fs-1 text-gray-300"></i>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Backup Laporan -->
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100 py-2 backup-card border-left-laporan">
                <div class="card-body">
                     <form action="{{ route('admin.backup.process') }}" method="POST" onsubmit="return confirm('Anda yakin ingin mem-backup data LAPORAN pada periode ini? Data akan dipindahkan secara permanen.');">
                        @csrf
                        <input type="hidden" name="type" value="laporan">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Backup Data Laporan</div>
                                <div class="mb-2">
                                    <label for="start_month_laporan" class="form-label small mb-0">Dari Bulan:</label>
                                    <input type="month" name="start_month" id="start_month_laporan" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <div class="mb-3">
                                    <label for="end_month_laporan" class="form-label small mb-0">Sampai Bulan:</label>
                                    <input type="month" name="end_month" id="end_month_laporan" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <button type="submit" class="btn btn-warning btn-sm"><i class="bi bi-archive-fill me-1"></i> Mulai Backup Laporan</button>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-file-earmark-text-fill fs-1 text-gray-300"></i>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Backup Patroli -->
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100 py-2 backup-card border-left-patroli">
                <div class="card-body">
                    <form action="{{ route('admin.backup.process') }}" method="POST" onsubmit="return confirm('Anda yakin ingin mem-backup data PATROLI pada periode ini? Data akan dipindahkan secara permanen.');">
                        @csrf
                        <input type="hidden" name="type" value="patroli">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Backup Data Patroli</div>
                                <div class="mb-2">
                                    <label for="start_month_patroli" class="form-label small mb-0">Dari Bulan:</label>
                                    <input type="month" name="start_month" id="start_month_patroli" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <div class="mb-3">
                                    <label for="end_month_patroli" class="form-label small mb-0">Sampai Bulan:</label>
                                    <input type="month" name="end_month" id="end_month_patroli" class="form-control form-control-sm" required max="{{ $maxMonth }}">
                                </div>
                                <button type="submit" class="btn btn-danger btn-sm"><i class="bi bi-archive-fill me-1"></i> Mulai Backup Patroli</button>
                            </div>
                            <div class="col-auto">
                                <i class="bi bi-signpost-split-fill fs-1 text-gray-300"></i>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>

</div>
@endsection

resources\views\admin\fakultas\create.blade.php
@extends('admin.layouts.app')

@section('title', 'Tambah Fakultas Baru')

@push('styles')
<style>
    .form-section {
        padding: 15px;
        border: 1px solid #eee;
        border-radius: 5px;
        margin-bottom: 20px;
        background-color: #fdfdfd;
    }
    .program-studi-item, .detail-prodi-item {
        padding: 10px;
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        margin-bottom: 10px;
        background-color: #fff;
    }
    .program-studi-item .row > div, .detail-prodi-item .row > div {
        margin-bottom: 0.5rem;
    }
    .input-group-text {
        background-color: #e9ecef;
        border: 1px solid #ced4da;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Tambah Fakultas Baru</h1>

    @if ($errors->any())
        <div class="alert alert-danger">
            <strong>Oops! Terjadi beberapa kesalahan:</strong>
            <ul>
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
    @endif

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Form Data Fakultas</h6>
        </div>
        <div class="card-body">
            <form action="{{ route('admin.fakultas.store') }}" method="POST">
                @csrf

                <div class="mb-3">
                    <label for="nama" class="form-label">Nama Fakultas <span class="text-danger">*</span></label>
                    <select class="form-select @error('nama') is-invalid @enderror" id="nama" name="nama" required>
                        <option value="">-- Pilih Nama Fakultas --</option>
                        @foreach($namaFakultasOptions as $option)
                            <option value="{{ $option }}" {{ old('nama') == $option ? 'selected' : '' }}>{{ $option }}</option>
                        @endforeach
                    </select>
                    @error('nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                </div>

                <input type="hidden" name="tipe_fakultas" id="tipe_fakultas_hidden" value="{{ old('tipe_fakultas') }}">
                @error('tipe_fakultas')
                    <div class="alert alert-danger mt-2">{{ $message }}</div>
                @enderror


                <div id="fakultas_umum_fields" class="form-section" style="display: none;">
                    <h5 id="fakultas_umum_title">Data Fakultas Non-Teknik</h5>
                    <div class="mb-3">
                        <label for="koordinat_fakultas_umum" class="form-label">Koordinat Fakultas (Contoh: -7.051191, 110.436203)</label>
                        <input type="text" class="form-control @error('koordinat_fakultas') is-invalid @enderror" id="koordinat_fakultas_umum" name="koordinat_fakultas" value="{{ old('koordinat_fakultas') }}">
                        @error('koordinat_fakultas') <div class="invalid-feedback">{{ $message }}</div> @enderror
                    </div>

                    <div class="mb-3">
                        <label for="radius_fakultas_umum" class="form-label">Radius Fakultas</label>
                        <div class="input-group">
                            <input type="number" class="form-control @error('radius_fakultas') is-invalid @enderror" id="radius_fakultas_umum" name="radius_fakultas" value="{{ old('radius_fakultas') }}" placeholder="Contoh: 150" min="1">
                            <span class="input-group-text">meter</span>
                        </div>
                        @error('radius_fakultas') <div class="invalid-feedback d-block">{{ $message }}</div> @enderror
                    </div>

                    <h6>Program Studi (<span id="jenjang_umum_label">S1</span>)</h6>
                    <div id="program_studi_umum_container">
                        @if(old('tipe_fakultas') == 'Non-Teknik' && old('program_studi'))
                            @foreach(old('program_studi') as $key => $prodi)
                            <div class="program-studi-item mb-2">
                                <div class="row">
                                    <div class="col-md-10">
                                        <label class="form-label small">Nama Prodi</label>
                                        <input type="text" name="program_studi[{{$key}}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi" value="{{ $prodi['nama_prodi'] ?? '' }}">
                                    </div>
                                    <div class="col-md-2 d-flex align-items-end">
                                        <button type="button" class="btn btn-danger btn-sm remove-prodi-umum w-100">Hapus</button>
                                    </div>
                                </div>
                            </div>
                            @endforeach
                        @endif
                    </div>
                    <button type="button" id="add_prodi_umum_button" class="btn btn-sm btn-outline-success mt-2">Tambah Program Studi</button>
                </div>

                <div id="fakultas_teknik_fields" class="form-section" style="display: none;">
                    <h5 id="fakultas_teknik_title">Data Fakultas Teknik</h5>
                    <h6>Detail Program Studi (<span id="jenjang_teknik_label">S1</span>)</h6>
                    <div id="detail_prodi_teknik_container">
                         @if(old('tipe_fakultas') == 'Teknik' && old('detail_prodi'))
                            @foreach(old('detail_prodi') as $key => $prodi)
                            <div class="detail-prodi-item mb-3">
                                <div class="row">
                                    <div class="col-md-12">
                                        <label class="form-label small">Nama Prodi</label>
                                        <input type="text" name="detail_prodi[{{$key}}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi" value="{{ $prodi['nama_prodi'] ?? '' }}">
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-md-6">
                                        <label class="form-label small">Koordinat</label>
                                        <input type="text" name="detail_prodi[{{$key}}][koordinat]" class="form-control form-control-sm" placeholder="-7.xxx, 110.xxx" value="{{ $prodi['koordinat'] ?? '' }}">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label small">Radius</label>
                                        <div class="input-group input-group-sm">
                                            <input type="number" name="detail_prodi[{{$key}}][radius]" class="form-control form-control-sm" placeholder="50" value="{{ old('detail_prodi.'.$key.'.radius', preg_replace('/[^0-9]/', '', $prodi['radius'] ?? '')) }}" min="1">
                                            <span class="input-group-text">meter</span>
                                        </div>
                                    </div>
                                    <div class="col-md-2 d-flex align-items-end">
                                        <button type="button" class="btn btn-danger btn-sm remove-prodi-teknik w-100">Hapus</button>
                                    </div>
                                </div>
                            </div>
                            @endforeach
                        @endif
                    </div>
                    <button type="button" id="add_prodi_teknik_button" class="btn btn-sm btn-outline-success mt-2">Tambah Program Studi (Teknik)</button>
                </div>

                <div class="mt-4">
                    <a href="{{ route('admin.fakultas.index') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Simpan Fakultas</button>
                </div>
            </form>
        </div>
    </div>
</div>

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function () {
    const namaFakultasSelect = document.getElementById('nama');
    const tipeFakultasHiddenInput = document.getElementById('tipe_fakultas_hidden');
    const fakultasUmumFields = document.getElementById('fakultas_umum_fields');
    const fakultasTeknikFields = document.getElementById('fakultas_teknik_fields');
    const jenjangUmumLabel = document.getElementById('jenjang_umum_label');
    const jenjangTeknikLabel = document.getElementById('jenjang_teknik_label');
    const fakultasUmumTitle = document.getElementById('fakultas_umum_title');
    const fakultasTeknikTitle = document.getElementById('fakultas_teknik_title');

    const prodiUmumContainer = document.getElementById('program_studi_umum_container');
    const addProdiUmumButton = document.getElementById('add_prodi_umum_button');
    let prodiUmumIndex = {{ old('program_studi') ? count(old('program_studi')) : 0 }};

    const prodiTeknikContainer = document.getElementById('detail_prodi_teknik_container');
    const addProdiTeknikButton = document.getElementById('add_prodi_teknik_button');
    let prodiTeknikIndex = {{ old('detail_prodi') ? count(old('detail_prodi')) : 0 }};

    function determineTipeAndJenjang() {
        const selectedNamaFakultas = namaFakultasSelect.value;
        const selectedNamaFakultasText = namaFakultasSelect.options[namaFakultasSelect.selectedIndex].text;
        let tipe = '';
        let jenjang = 'S1';

        if (selectedNamaFakultas === 'Fakultas Teknik (FT)') {
            tipe = 'Teknik';
        } else if (selectedNamaFakultas === 'Sekolah Vokasi (SV)') {
            tipe = 'Non-Teknik';
            jenjang = 'D4';
        } else if (selectedNamaFakultas) {
            tipe = 'Non-Teknik';
        }

        tipeFakultasHiddenInput.value = tipe;
        jenjangUmumLabel.textContent = jenjang;
        jenjangTeknikLabel.textContent = jenjang;

        if (tipe === 'Non-Teknik') {
            fakultasUmumFields.style.display = 'block';
            fakultasTeknikFields.style.display = 'none';
            if(selectedNamaFakultas){
                fakultasUmumTitle.textContent = 'Data ' + selectedNamaFakultasText;
            } else {
                fakultasUmumTitle.textContent = 'Data Fakultas Non-Teknik';
            }
        } else if (tipe === 'Teknik') {
            fakultasUmumFields.style.display = 'none';
            fakultasTeknikFields.style.display = 'block';
             if(selectedNamaFakultas){
                fakultasTeknikTitle.textContent = 'Data ' + selectedNamaFakultasText;
            } else {
                fakultasTeknikTitle.textContent = 'Data Fakultas Teknik';
            }
        } else {
            fakultasUmumFields.style.display = 'none';
            fakultasTeknikFields.style.display = 'none';
            fakultasUmumTitle.textContent = 'Data Fakultas Non-Teknik';
            fakultasTeknikTitle.textContent = 'Data Fakultas Teknik';
        }
    }

    addProdiUmumButton.addEventListener('click', function () {
        const newItem = `
            <div class="program-studi-item mb-2">
                <div class="row">
                    <div class="col-md-10">
                        <label class="form-label small">Nama Prodi</label>
                        <input type="text" name="program_studi[${prodiUmumIndex}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi">
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm remove-prodi-umum w-100">Hapus</button>
                    </div>
                </div>
            </div>`;
        prodiUmumContainer.insertAdjacentHTML('beforeend', newItem);
        prodiUmumIndex++;
    });

    addProdiTeknikButton.addEventListener('click', function () {
        const newItem = `
            <div class="detail-prodi-item mb-3">
                <div class="row">
                    <div class="col-md-12">
                        <label class="form-label small">Nama Prodi</label>
                        <input type="text" name="detail_prodi[${prodiTeknikIndex}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi">
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-5">
                        <label class="form-label small">Koordinat</label>
                        <input type="text" name="detail_prodi[${prodiTeknikIndex}][koordinat]" class="form-control form-control-sm" placeholder="-7.xxx, 110.xxx">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small">Radius</label>
                        <div class="input-group input-group-sm">
                            <input type="number" name="detail_prodi[${prodiTeknikIndex}][radius]" class="form-control form-control-sm" placeholder="50" min="1">
                            <span class="input-group-text">meter</span>
                        </div>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm remove-prodi-teknik w-100">Hapus</button>
                    </div>
                </div>
            </div>`;
        prodiTeknikContainer.insertAdjacentHTML('beforeend', newItem);
        prodiTeknikIndex++;
    });

    document.addEventListener('click', function (e) {
        if (e.target && (e.target.classList.contains('remove-prodi-umum') || e.target.classList.contains('remove-prodi-teknik'))) {
            e.target.closest('.program-studi-item, .detail-prodi-item').remove();
        }
    });

    namaFakultasSelect.addEventListener('change', determineTipeAndJenjang);
    determineTipeAndJenjang();
});
</script>
@endpush
@endsection

resources\views\admin\fakultas\edit.blade.php
@extends('admin.layouts.app')

@section('title', 'Edit Fakultas: ' . $fakultas->nama)

@push('styles')
<style>
    .form-section {
        padding: 15px;
        border: 1px solid #eee;
        border-radius: 5px;
        margin-bottom: 20px;
        background-color: #fdfdfd;
    }
    .program-studi-item, .detail-prodi-item {
        padding: 10px;
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        margin-bottom: 10px;
        background-color: #fff;
    }
    .program-studi-item .row > div, .detail-prodi-item .row > div {
        margin-bottom: 0.5rem;
    }
    .input-group-text {
        background-color: #e9ecef;
        border: 1px solid #ced4da;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Edit Fakultas: {{ $fakultas->nama }}</h1>

    @if ($errors->any())
        <div class="alert alert-danger">
            <strong>Oops! Terjadi beberapa kesalahan:</strong>
            <ul>
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
    @endif

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Form Edit Data Fakultas</h6>
        </div>
        <div class="card-body">
            <form action="{{ route('admin.fakultas.update', $fakultas->_id) }}" method="POST">
                @csrf
                @method('PUT')

                <div class="mb-3">
                    <label for="nama" class="form-label">Nama Fakultas <span class="text-danger">*</span></label>
                    <select class="form-select @error('nama') is-invalid @enderror" id="nama" name="nama" required>
                        <option value="">-- Pilih Nama Fakultas --</option>
                        @foreach($namaFakultasOptions as $option)
                            <option value="{{ $option }}" {{ old('nama', $fakultas->nama) == $option ? 'selected' : '' }}>{{ $option }}</option>
                        @endforeach
                    </select>
                    @error('nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                </div>

                <input type="hidden" name="tipe_fakultas" id="tipe_fakultas_hidden" value="{{ old('tipe_fakultas', $fakultas->tipe_fakultas) }}">
                 @error('tipe_fakultas')
                    <div class="alert alert-danger mt-2">{{ $message }}</div>
                @enderror


                <div id="fakultas_umum_fields" class="form-section" style="display: {{ old('tipe_fakultas', $fakultas->tipe_fakultas) == 'Non-Teknik' ? 'block' : 'none' }};">
                    <h5 id="fakultas_umum_title">Data Fakultas Non-Teknik</h5>
                    <div class="mb-3">
                        <label for="koordinat_fakultas_umum" class="form-label">Koordinat Fakultas</label>
                        <input type="text" class="form-control @error('koordinat_fakultas') is-invalid @enderror" id="koordinat_fakultas_umum" name="koordinat_fakultas" value="{{ old('koordinat_fakultas', $fakultas->koordinat_fakultas) }}">
                        @error('koordinat_fakultas') <div class="invalid-feedback">{{ $message }}</div> @enderror
                    </div>

                    <div class="mb-3">
                        <label for="radius_fakultas_umum" class="form-label">Radius Fakultas</label>
                         <div class="input-group">
                            <input type="number" class="form-control @error('radius_fakultas') is-invalid @enderror" id="radius_fakultas_umum" name="radius_fakultas" value="{{ old('radius_fakultas', preg_replace('/[^0-9]/', '', $fakultas->radius_fakultas ?? '')) }}" placeholder="Contoh: 150" min="1">
                            <span class="input-group-text">meter</span>
                        </div>
                        @error('radius_fakultas') <div class="invalid-feedback d-block">{{ $message }}</div> @enderror
                    </div>

                    <h6>Program Studi (<span id="jenjang_umum_label">S1</span>)</h6>
                    <div id="program_studi_umum_container">
                        @php
                            $programStudiUmum = old('program_studi', $fakultas->tipe_fakultas == 'Non-Teknik' ? $fakultas->program_studi : null);
                            if (is_string($programStudiUmum)) {
                                $programStudiUmum = json_decode($programStudiUmum, true) ?: [];
                            } elseif (!is_array($programStudiUmum)) {
                                $programStudiUmum = [];
                            }
                        @endphp
                        @if(count($programStudiUmum) > 0)
                            @foreach($programStudiUmum as $key => $prodi)
                            <div class="program-studi-item mb-2">
                                <div class="row">
                                    <div class="col-md-10">
                                        <label class="form-label small">Nama Prodi</label>
                                        <input type="text" name="program_studi[{{$key}}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi" value="{{ $prodi['nama_prodi'] ?? '' }}">
                                    </div>
                                    <div class="col-md-2 d-flex align-items-end">
                                        <button type="button" class="btn btn-danger btn-sm remove-prodi-umum w-100">Hapus</button>
                                    </div>
                                </div>
                            </div>
                            @endforeach
                        @endif
                    </div>
                    <button type="button" id="add_prodi_umum_button" class="btn btn-sm btn-outline-success mt-2">Tambah Program Studi</button>
                </div>

                <div id="fakultas_teknik_fields" class="form-section" style="display: {{ old('tipe_fakultas', $fakultas->tipe_fakultas) == 'Teknik' ? 'block' : 'none' }};">
                    <h5 id="fakultas_teknik_title">Data Fakultas Teknik</h5>
                    <h6>Detail Program Studi (<span id="jenjang_teknik_label">S1</span>)</h6>
                    <div id="detail_prodi_teknik_container">
                         @php
                            $detailProdiTeknik = old('detail_prodi', $fakultas->tipe_fakultas == 'Teknik' ? $fakultas->detail_prodi : null);
                             if (is_string($detailProdiTeknik)) {
                                $detailProdiTeknik = json_decode($detailProdiTeknik, true) ?: [];
                            } elseif (!is_array($detailProdiTeknik)) {
                                $detailProdiTeknik = [];
                            }
                         @endphp
                         @if(count($detailProdiTeknik) > 0)
                            @foreach($detailProdiTeknik as $key => $prodi)
                            <div class="detail-prodi-item mb-3">
                                <div class="row">
                                    <div class="col-md-12">
                                        <label class="form-label small">Nama Prodi</label>
                                        <input type="text" name="detail_prodi[{{$key}}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi" value="{{ $prodi['nama_prodi'] ?? '' }}">
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-md-6">
                                        <label class="form-label small">Koordinat</label>
                                        <input type="text" name="detail_prodi[{{$key}}][koordinat]" class="form-control form-control-sm" placeholder="-7.xxx, 110.xxx" value="{{ $prodi['koordinat'] ?? '' }}">
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label small">Radius</label>
                                        <div class="input-group input-group-sm">
                                            <input type="number" name="detail_prodi[{{$key}}][radius]" class="form-control form-control-sm" placeholder="50" value="{{ old('detail_prodi.'.$key.'.radius', preg_replace('/[^0-9]/', '', $prodi['radius'] ?? '')) }}" min="1">
                                            <span class="input-group-text">meter</span>
                                        </div>
                                    </div>
                                    <div class="col-md-2 d-flex align-items-end">
                                        <button type="button" class="btn btn-danger btn-sm remove-prodi-teknik w-100">Hapus</button>
                                    </div>
                                </div>
                            </div>
                            @endforeach
                        @endif
                    </div>
                    <button type="button" id="add_prodi_teknik_button" class="btn btn-sm btn-outline-success mt-2">Tambah Program Studi (Teknik)</button>
                </div>

                <div class="mt-4">
                    <a href="{{ route('admin.fakultas.index') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Update Fakultas</button>
                </div>
            </form>
        </div>
    </div>
</div>

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function () {
    const namaFakultasSelect = document.getElementById('nama');
    const tipeFakultasHiddenInput = document.getElementById('tipe_fakultas_hidden');
    const fakultasUmumFields = document.getElementById('fakultas_umum_fields');
    const fakultasTeknikFields = document.getElementById('fakultas_teknik_fields');
    const jenjangUmumLabel = document.getElementById('jenjang_umum_label');
    const jenjangTeknikLabel = document.getElementById('jenjang_teknik_label');
    const fakultasUmumTitle = document.getElementById('fakultas_umum_title');
    const fakultasTeknikTitle = document.getElementById('fakultas_teknik_title');

    const prodiUmumContainer = document.getElementById('program_studi_umum_container');
    const addProdiUmumButton = document.getElementById('add_prodi_umum_button');
    let prodiUmumIndex = prodiUmumContainer.querySelectorAll('.program-studi-item').length;

    const prodiTeknikContainer = document.getElementById('detail_prodi_teknik_container');
    const addProdiTeknikButton = document.getElementById('add_prodi_teknik_button');
    let prodiTeknikIndex = prodiTeknikContainer.querySelectorAll('.detail-prodi-item').length;

    function determineTipeAndJenjang() {
        const selectedNamaFakultas = namaFakultasSelect.value;
        const selectedNamaFakultasText = namaFakultasSelect.options[namaFakultasSelect.selectedIndex].text;
        let tipe = '';
        let jenjang = 'S1';

        if (selectedNamaFakultas === 'Fakultas Teknik (FT)') {
            tipe = 'Teknik';
        } else if (selectedNamaFakultas === 'Sekolah Vokasi (SV)') {
            tipe = 'Non-Teknik';
            jenjang = 'D4';
        } else if (selectedNamaFakultas) {
            tipe = 'Non-Teknik';
        }

        tipeFakultasHiddenInput.value = tipe;
        jenjangUmumLabel.textContent = jenjang;
        jenjangTeknikLabel.textContent = jenjang;

        if (tipe === 'Non-Teknik') {
            fakultasUmumFields.style.display = 'block';
            fakultasTeknikFields.style.display = 'none';
            if(selectedNamaFakultas){
                fakultasUmumTitle.textContent = 'Data ' + selectedNamaFakultasText;
            } else {
                fakultasUmumTitle.textContent = 'Data Fakultas Non-Teknik';
            }
        } else if (tipe === 'Teknik') {
            fakultasUmumFields.style.display = 'none';
            fakultasTeknikFields.style.display = 'block';
             if(selectedNamaFakultas){
                fakultasTeknikTitle.textContent = 'Data ' + selectedNamaFakultasText;
            } else {
                fakultasTeknikTitle.textContent = 'Data Fakultas Teknik';
            }
        } else {
            fakultasUmumFields.style.display = 'none';
            fakultasTeknikFields.style.display = 'none';
            fakultasUmumTitle.textContent = 'Data Fakultas Non-Teknik';
            fakultasTeknikTitle.textContent = 'Data Fakultas Teknik';
        }
    }

    addProdiUmumButton.addEventListener('click', function () {
        const newItem = `
            <div class="program-studi-item mb-2">
                <div class="row">
                    <div class="col-md-10">
                        <label class="form-label small">Nama Prodi</label>
                        <input type="text" name="program_studi[${prodiUmumIndex}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi">
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm remove-prodi-umum w-100">Hapus</button>
                    </div>
                </div>
            </div>`;
        prodiUmumContainer.insertAdjacentHTML('beforeend', newItem);
        prodiUmumIndex++;
    });

    addProdiTeknikButton.addEventListener('click', function () {
        const newItem = `
            <div class="detail-prodi-item mb-3">
                <div class="row">
                    <div class="col-md-12">
                        <label class="form-label small">Nama Prodi</label>
                        <input type="text" name="detail_prodi[${prodiTeknikIndex}][nama_prodi]" class="form-control form-control-sm" placeholder="Nama Program Studi">
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-6">
                        <label class="form-label small">Koordinat</label>
                        <input type="text" name="detail_prodi[${prodiTeknikIndex}][koordinat]" class="form-control form-control-sm" placeholder="-7.xxx, 110.xxx">
                    </div>
                    <div class="col-md-4">
                        <label class="form-label small">Radius</label>
                        <div class="input-group input-group-sm">
                            <input type="number" name="detail_prodi[${prodiTeknikIndex}][radius]" class="form-control form-control-sm" placeholder="50" min="1">
                            <span class="input-group-text">meter</span>
                        </div>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="button" class="btn btn-danger btn-sm remove-prodi-teknik w-100">Hapus</button>
                    </div>
                </div>
            </div>`;
        prodiTeknikContainer.insertAdjacentHTML('beforeend', newItem);
        prodiTeknikIndex++;
    });

    document.addEventListener('click', function (e) {
        if (e.target && (e.target.classList.contains('remove-prodi-umum') || e.target.classList.contains('remove-prodi-teknik'))) {
            e.target.closest('.program-studi-item, .detail-prodi-item').remove();
        }
    });

    namaFakultasSelect.addEventListener('change', determineTipeAndJenjang);
    determineTipeAndJenjang(); // Initial call
});
</script>
@endpush
@endsection

resources\views\admin\fakultas\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Data Fakultas')

@push('styles')
<style>
    .card-fakultas {
        border: 1px solid #e0e0e0;
        transition: box-shadow 0.2s ease-in-out;
        background-color: #fff;
        margin-bottom: 1rem;
    }
    .card-fakultas:hover {
        box-shadow: 0 .25rem .75rem rgba(0,0,0,.08)!important;
    }
    .card-header-fakultas {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e0e0e0;
        padding: 0.75rem 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        cursor: pointer;
    }
    .card-header-fakultas h6 {
        font-size: 0.95rem;
        color: #333;
        margin-bottom: 0;
    }
    .card-body-fakultas {
        padding: 1rem;
        font-size: 0.85rem;
    }
    .card-body-fakultas h6.text-secondary {
        font-size: 0.8rem;
        color: #555 !important;
        margin-top: 0.75rem;
        margin-bottom: 0.4rem;
        font-weight: 500;
    }
    .list-prodi {
        padding-left: 0;
        list-style: none;
        margin-bottom: 0.75rem;
    }
    .list-prodi li {
        padding: .2rem 0;
        color: #454545;
    }
    .list-prodi li:not(:last-child) {
         border-bottom: 1px solid #f0f0f0;
    }

    .badge-jenjang {
        width: auto;
        padding: 0.2em 0.5em;
        font-size: 0.75em;
        font-weight: 500;
    }
    .prodi-teknik-item {
        margin-bottom: 1rem;
        padding-bottom: 0.75rem;
    }
    .prodi-teknik-item:not(:last-child) {
        border-bottom: 1px solid #f0f0f0;
    }
    .prodi-teknik-item .prodi-name {
        font-weight: 500;
        color: #333;
        display: block;
        margin-bottom: 0.25rem;
    }
    .info-lokasi-prodi {
        margin-top: 0.5rem;
        padding-left: 0;
    }
    .info-lokasi-prodi p {
        margin-bottom: 0.1rem;
    }
    .info-lokasi-prodi small.text-muted {
        font-size: 0.8rem;
        color: #666 !important;
        line-height: 1.4;
    }
    hr.my-3 {
        margin-top: 0.75rem !important;
        margin-bottom: 0.75rem !important;
        border-top: 1px solid #eee;
    }
    .collapse-icon::after {
        content: '\f282'; /* Bootstrap Icons chevron-down */
        font-family: 'bootstrap-icons';
        display: inline-block;
        margin-left: auto;
        transition: transform 0.2s ease-in-out;
        font-size: 0.9rem;
    }
    .collapse-icon[aria-expanded="true"]::after {
        transform: rotate(-180deg);
    }
    .action-buttons a, .action-buttons button {
        margin-left: 0.25rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800" style="font-size: 1.5rem;">Data Fakultas</h1>
        <a href="{{ route('admin.fakultas.create') }}" class="btn btn-primary btn-sm">
            <i class="bi bi-plus-circle me-1"></i> Tambah Fakultas
        </a>
    </div>

    <div class="accordion" id="accordionFakultas">
        @forelse ($fakultasData as $index => $fakultas)
        <div class="card card-fakultas">
            <div class="card-header-fakultas" id="heading{{ $fakultas->_id }}" data-bs-toggle="collapse" data-bs-target="#collapse{{ $fakultas->_id }}" aria-expanded="false" aria-controls="collapse{{ $fakultas->_id }}">
                <h6 class="m-0 font-weight-bold">{{ $index + 1 }}. {{ $fakultas->nama }}</h6>
                <div class="action-buttons">
                    <a href="{{ route('admin.fakultas.edit', $fakultas->_id) }}" class="btn btn-sm btn-outline-warning py-0 px-1" title="Edit">
                        <i class="bi bi-pencil-square"></i>
                    </a>
                    <button type="button" class="btn btn-sm btn-outline-danger py-0 px-1" title="Hapus"
                            data-bs-toggle="modal" data-bs-target="#deleteFakultasModal{{ $fakultas->_id }}">
                        <i class="bi bi-trash"></i>
                    </button>
                    <span class="collapse-icon ms-2"></span>
                </div>
            </div>

            <div id="collapse{{ $fakultas->_id }}" class="collapse" aria-labelledby="heading{{ $fakultas->_id }}" data-bs-parent="#accordionFakultas">
                <div class="card-body card-body-fakultas">
                    @if ($fakultas->tipe_fakultas === 'Teknik')
                        <h6 class="text-secondary">Program Studi:</h6>
                        @php $detailProdi = $fakultas->detail_prodi; @endphp
                        @if(is_array($detailProdi) && count($detailProdi) > 0)
                            @foreach ($detailProdi as $prodi)
                            <div class="prodi-teknik-item">
                                <div class="prodi-name">
                                    <span class="badge bg-info badge-jenjang me-2">{{ $prodi['jenjang'] ?? 'S1' }}</span> {{ $prodi['nama_prodi'] ?? 'N/A' }}
                                </div>
                                <div class="info-lokasi-prodi">
                                    <p class="card-text mb-1"><small class="text-muted">Koordinat: {{ $prodi['koordinat'] ?? 'N/A' }}</small></p>
                                    <p class="card-text"><small class="text-muted">Radius: {{ $prodi['radius'] ?? 'N/A' }}</small></p>
                                </div>
                            </div>
                            @endforeach
                        @else
                            <p class="text-muted small"><em>Belum ada program studi.</em></p>
                        @endif
                    @else {{-- Untuk fakultas tipe 'Non-Teknik' --}}
                        <h6 class="text-secondary">Program Studi:</h6>
                        @php $programStudi = $fakultas->program_studi; @endphp
                        @if(is_array($programStudi) && count($programStudi) > 0)
                        <ul class="list-prodi">
                            @foreach ($programStudi as $prodi)
                            <li>
                                <span class="badge bg-info badge-jenjang me-2">{{ $prodi['jenjang'] ?? 'N/A' }}</span> {{ $prodi['nama_prodi'] ?? 'N/A' }}
                            </li>
                            @endforeach
                        </ul>
                        @else
                            <p class="text-muted small"><em>Belum ada program studi.</em></p>
                        @endif

                        @if(isset($fakultas->koordinat_fakultas) && isset($fakultas->radius_fakultas))
                        <hr class="my-3">
                        <h6 class="text-secondary">Informasi Lokasi Fakultas:</h6>
                        <p class="card-text mb-1"><small class="text-muted">Koordinat: {{ $fakultas->koordinat_fakultas }}</small></p>
                        <p class="card-text"><small class="text-muted">Radius: {{ $fakultas->radius_fakultas }}</small></p>
                        @endif
                    @endif
                </div>
            </div>
        </div>

        <div class="modal fade" id="deleteFakultasModal{{ $fakultas->_id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ $fakultas->_id }}" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel{{ $fakultas->_id }}">Konfirmasi Hapus</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Apakah Anda yakin ingin menghapus fakultas <strong>{{ $fakultas->nama }}</strong>?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                        <form action="{{ route('admin.fakultas.destroy', $fakultas->_id) }}" method="POST" style="display: inline;">
                            @csrf
                            @method('DELETE')
                            <button type="submit" class="btn btn-danger">Hapus</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        @empty
        <div class="col-12">
            <div class="alert alert-light text-center border">
                Belum ada data fakultas yang tersedia. Klik "Tambah Fakultas" untuk memulai.
            </div>
        </div>
        @endforelse
    </div>
</div>
@endsection

resources\views\admin\karyawan\create_step1.blade.php
@extends('admin.layouts.app')

@section('title', 'Tambah Karyawan Baru - Step 1')

@push('styles')
<style>
    .form-section { margin-top: 1.5rem; }
    .form-section-title { margin-bottom: 1rem; font-weight: 500; color: #4e73df; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Tambah Karyawan Baru - Data Diri</h1>

    @if(session('error'))
        <div class="alert alert-danger">{{ session('error') }}</div>
    @endif
    @if ($errors->any())
        <div class="alert alert-danger">
            <strong>Oops! Terjadi beberapa kesalahan:</strong>
            <ul>
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
    @endif

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Form Data Karyawan</h6>
        </div>
        <div class="card-body">
            <form action="{{ route('admin.karyawan.store_step1') }}" method="POST" enctype="multipart/form-data">
                @csrf
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="nik" class="form-label">Username <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('nik') is-invalid @enderror" id="nik" name="nik" value="{{ old('nik') }}" required>
                            @error('nik') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="nama_lengkap" class="form-label">Nama Lengkap <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('nama_lengkap') is-invalid @enderror" id="nama_lengkap" name="nama_lengkap" value="{{ old('nama_lengkap') }}" required>
                            @error('nama_lengkap') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="jabatan" class="form-label">Jabatan <span class="text-danger">*</span></label>
                            <select class="form-select @error('jabatan') is-invalid @enderror" id="jabatan" name="jabatan" required>
                                <option value="">-- Pilih Jabatan --</option>
                                @foreach($jabatanOptions as $value => $label)
                                    <option value="{{ $value }}" {{ old('jabatan') == $value ? 'selected' : '' }}>{{ $label }}</option>
                                @endforeach
                            </select>
                            @error('jabatan') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="no_hp" class="form-label">Nomor HP <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('no_hp') is-invalid @enderror" id="no_hp" name="no_hp" value="{{ old('no_hp') }}" required>
                            @error('no_hp') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>

                {{-- Section for Non-Admin roles --}}
                <div id="fakultas_section" class="form-section" style="display: none;">
                    <h5 class="form-section-title">Detail Penugasan</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="fakultas_nama" class="form-label">Fakultas <span id="fakultas_required_star" class="text-danger" style="display:none;">*</span></label>
                                <select class="form-select @error('fakultas_nama') is-invalid @enderror" id="fakultas_nama" name="fakultas_nama">
                                    <option value="">-- Pilih Fakultas --</option>
                                    @foreach($fakultasOptions as $namaFakultas)
                                        <option value="{{ $namaFakultas }}" {{ old('fakultas_nama') == $namaFakultas ? 'selected' : '' }}>
                                            {{ $namaFakultas }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('fakultas_nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                            </div>
                        </div>
                        <div class="col-md-6" id="program_studi_field" style="display: none;">
                            <div class="mb-3">
                                <label for="program_studi_nama" class="form-label">Program Studi <span id="prodi_required_star" class="text-danger" style="display:none;">*</span></label>
                                <select class="form-select @error('program_studi_nama') is-invalid @enderror" id="program_studi_nama" name="program_studi_nama">
                                    <option value="">-- Pilih Fakultas Terlebih Dahulu --</option>
                                </select>
                                @error('program_studi_nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                            </div>
                        </div>
                    </div>
                     <div class="row">
                        <div class="col-md-6" id="office_radius_field" style="display: none;">
                            <div class="mb-3">
                                <label for="office_radius" class="form-label">Radius Kantor (meter) <span id="radius_required_star" class="text-danger" style="display:none;">*</span></label>
                                <input type="number" class="form-control @error('office_radius') is-invalid @enderror" id="office_radius" name="office_radius" value="{{ old('office_radius', 100) }}" min="10" readonly>
                                @error('office_radius') <div class="invalid-feedback">{{ $message }}</div> @enderror
                                <small class="text-muted">Akan terisi otomatis berdasarkan Fakultas/Prodi.</small>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control @error('password') is-invalid @enderror" id="password" name="password" required>
                            @error('password') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="password_confirmation" class="form-label">Konfirmasi Password <span class="text-danger">*</span></label>
                            <input type="password" class="form-control" id="password_confirmation" name="password_confirmation" required>
                        </div>
                    </div>
                </div>

                <div class="row">
                     <div class="col-md-6" id="foto_profil_field_container">
                        <div class="mb-3" id="foto_profil_field" style="display: none;">
                            <label for="foto" class="form-label">Foto Profil (Opsional)</label>
                            <input type="file" class="form-control @error('foto') is-invalid @enderror" id="foto" name="foto" accept="image/*">
                            @error('foto') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>
                
                <div id="admin_specific_fields" class="form-section" style="display:none;">
                     <h5 class="form-section-title">Pengaturan Admin</h5>
                     <div class="alert alert-info small">Admin tidak memerlukan data fakultas, program studi, radius, atau registrasi wajah.</div>
                </div>

                <div class="mt-4">
                    <a href="{{ route('admin.karyawan.index') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary" id="submitButton">Lanjut</button>
                </div>
            </form>
        </div>
    </div>
</div>

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    const jabatanSelect = document.getElementById('jabatan');
    const fakultasSection = document.getElementById('fakultas_section');
    const fakultasSelect = document.getElementById('fakultas_nama');
    const fakultasRequiredStar = document.getElementById('fakultas_required_star');
    const prodiField = document.getElementById('program_studi_field');
    const prodiSelect = document.getElementById('program_studi_nama');
    const prodiRequiredStar = document.getElementById('prodi_required_star');
    const radiusField = document.getElementById('office_radius_field');
    const radiusInput = document.getElementById('office_radius');
    const radiusRequiredStar = document.getElementById('radius_required_star');
    const fotoProfilField = document.getElementById('foto_profil_field');
    const adminSpecificFields = document.getElementById('admin_specific_fields');
    const submitButton = document.getElementById('submitButton');

    function toggleFields() {
        const selectedJabatan = jabatanSelect.value;

        // Reset all conditional elements
        fakultasSection.style.display = 'none';
        fakultasRequiredStar.style.display = 'none';
        fakultasSelect.required = false;

        prodiField.style.display = 'none';
        prodiRequiredStar.style.display = 'none';
        prodiSelect.required = false;
        
        radiusField.style.display = 'none';
        radiusRequiredStar.style.display = 'none';
        radiusInput.required = false;
        
        fotoProfilField.style.display = 'none';
        adminSpecificFields.style.display = 'none';
        submitButton.textContent = 'Lanjut';

        if (selectedJabatan === 'Admin') {
            adminSpecificFields.style.display = 'block';
            submitButton.textContent = 'Simpan Data Admin';
        } else if (selectedJabatan === 'Komandan') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            fotoProfilField.style.display = 'block';
            submitButton.textContent = 'Simpan Data Komandan';
        } else if (selectedJabatan === 'Ketua Departemen') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            prodiField.style.display = 'block';
            prodiRequiredStar.style.display = 'inline';
            prodiSelect.required = true;
            fotoProfilField.style.display = 'block';
            submitButton.textContent = 'Simpan Data Ketua Departemen';
        } else if (selectedJabatan === 'Petugas Keamanan') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            prodiField.style.display = 'block';
            prodiRequiredStar.style.display = 'inline';
            prodiSelect.required = true;
            radiusField.style.display = 'block';
            radiusRequiredStar.style.display = 'inline';
            radiusInput.required = true;
            fotoProfilField.style.display = 'block';
            submitButton.textContent = 'Lanjut ke Registrasi Wajah';
        }
        
        if (fakultasSelect.value) {
            fakultasSelect.dispatchEvent(new Event('change'));
        } else {
            clearProdiOptions(); 
        }
    }

    function clearProdiOptions(message = '-- Pilih Program Studi --') {
        prodiSelect.innerHTML = `<option value="">${message}</option>`;
        if (jabatanSelect.value === 'Petugas Keamanan') { 
            // radiusInput.value = ''; // Don't reset if there's an old value
        }
    }

    function populateProdi(programStudiData, selectedProdiNama = '') {
        clearProdiOptions();
        if (programStudiData && programStudiData.length > 0) {
            prodiSelect.innerHTML = '<option value="">-- Pilih Program Studi --</option>';
            programStudiData.forEach(function(prodi) {
                const option = document.createElement('option');
                option.value = prodi.nama_prodi;
                option.textContent = prodi.nama_prodi;
                if (prodi.nama_prodi === selectedProdiNama) {
                    option.selected = true;
                }
                if (prodi.radius) option.dataset.radius = String(prodi.radius).replace(/\D/g, '');
                prodiSelect.appendChild(option);
            });
        } else {
            prodiSelect.innerHTML = '<option value="">-- Tidak ada Program Studi --</option>';
        }
    }

    fakultasSelect.addEventListener('change', function() {
        const selectedFakultasNama = this.value;
        clearProdiOptions(); 

        if (selectedFakultasNama) {
            prodiSelect.innerHTML = '<option value="">Loading...</option>';
            fetch(`/panel/fakultas/get-details-for-karyawan/${encodeURIComponent(selectedFakultasNama)}`)
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        console.error(data.error);
                        clearProdiOptions('Error memuat prodi');
                        return;
                    }
                    
                    let prodiListToPopulate = (data.tipe_fakultas === 'Teknik')
                        ? data.program_studi.map(p => ({nama_prodi: p.nama_prodi, radius: p.radius, koordinat: p.koordinat}))
                        : data.program_studi.map(p => ({nama_prodi: p.nama_prodi}));
                    
                    if (jabatanSelect.value === 'Petugas Keamanan' && data.tipe_fakultas !== 'Teknik') {
                         radiusInput.value = data.radius_fakultas || radiusInput.value; 
                    }
                    populateProdi(prodiListToPopulate, "{{ old('program_studi_nama') }}");
                })
                .catch(error => {
                    console.error('Error fetching fakultas details:', error);
                    clearProdiOptions('Gagal memuat prodi');
                });
        }
    });

    prodiSelect.addEventListener('change', function() {
        if (jabatanSelect.value === 'Petugas Keamanan') {
            const selectedOption = this.options[this.selectedIndex];
            if (selectedOption && selectedOption.dataset.radius) {
                radiusInput.value = selectedOption.dataset.radius;
            } else if (!selectedOption.value) { 
                radiusInput.value = ''; 
            }
        }
    });

    jabatanSelect.addEventListener('change', toggleFields);
    // Initial call to set form state based on old input or default
    toggleFields(); 
    
    // Trigger change if there's an old value for fakultas to populate prodi
    if (fakultasSelect.value) {
        fakultasSelect.dispatchEvent(new Event('change'));
    }
});
</script>
@endpush
@endsection

resources\views\admin\karyawan\create_step2.blade.php
@extends('admin.layouts.app')

@section('title', 'Registrasi Wajah Karyawan')

@section('content')
<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Registrasi Wajah untuk {{ session('karyawan_temp_data.nama_lengkap') }}</h6>
        </div>
        <div class="card-body">
            @if(session('error'))
                <div class="alert alert-danger">{{ session('error') }}</div>
            @endif
            <div class="alert alert-info">
                <strong>Petunjuk:</strong> Pastikan wajah karyawan terlihat jelas, menghadap lurus ke kamera, dan berada dalam pencahayaan yang baik.
            </div>

            <div class="text-center mb-4">
                <div id="camera-container" style="width: 500px; height: 375px; margin: 0 auto; border: 3px solid #ddd; position: relative; background-color: #000;">
                    <video id="video" width="500" height="375" autoplay playsinline style="display: none;"></video>
                    <canvas id="canvas" width="500" height="375" style="position: absolute; top: 0; left: 0;"></canvas>
                    <div id="preview-container" style="width: 100%; height: 100%; display: none;">
                        <img id="preview" style="width: 100%; height: 100%; object-fit: cover;">
                    </div>
                </div>
                <div id="status-text" class="mt-2 fw-bold">Mempersiapkan kamera...</div>
            </div>
            
            <form id="registration-form" action="{{ route('admin.karyawan.complete_registration') }}" method="POST">
                @csrf
                <input type="hidden" id="face_image" name="face_image">
                <div class="text-center">
                    <a href="{{ route('admin.karyawan.create') }}" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Kembali</a>
                    <button type="button" id="captureBtn" class="btn btn-primary" disabled>
                        <i class="fas fa-camera"></i> Ambil Gambar
                    </button>
                    <button type="button" id="retakeBtn" class="btn btn-warning" style="display: none;">
                        <i class="fas fa-sync-alt"></i> Ulangi
                    </button>
                    <button type="submit" id="submitBtn" class="btn btn-success" style="display: none;">
                        <i class="fas fa-check-circle"></i> Selesaikan Pendaftaran
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', async () => {
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const statusText = document.getElementById('status-text');
        const captureBtn = document.getElementById('captureBtn');
        const retakeBtn = document.getElementById('retakeBtn');
        const submitBtn = document.getElementById('submitBtn');
        const registrationForm = document.getElementById('registration-form');
        const faceImageInput = document.getElementById('face_image');
        const previewContainer = document.getElementById('preview-container');
        const previewImg = document.getElementById('preview');

        let stream = null;
        let detectionInterval = null;

        statusText.textContent = "Memuat model deteksi wajah...";
        try {
            await Promise.all([
                faceapi.nets.tinyFaceDetector.loadFromUri('/models'),
                faceapi.nets.faceLandmark68Net.loadFromUri('/models')
            ]);
        } catch (e) {
            statusText.textContent = "Gagal memuat model. Periksa konsol untuk detail.";
            return;
        }

        try {
            stream = await navigator.mediaDevices.getUserMedia({ video: {} });
            video.srcObject = stream;
            video.style.display = 'block';
        } catch (err) {
            statusText.textContent = "Error: Tidak dapat mengakses kamera. Pastikan izin telah diberikan.";
            return;
        }

        video.addEventListener('play', () => {
            statusText.textContent = "Arahkan wajah ke kamera...";
            const displaySize = { width: video.width, height: video.height };
            faceapi.matchDimensions(canvas, displaySize);

            detectionInterval = setInterval(async () => {
                const detections = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions());
                const context = canvas.getContext('2d');
                context.clearRect(0, 0, canvas.width, canvas.height);

                if (detections) {
                    const resizedDetections = faceapi.resizeResults(detections, displaySize);
                    faceapi.draw.drawDetections(canvas, resizedDetections);
                    statusText.textContent = "Wajah terdeteksi. Silakan ambil gambar.";
                    statusText.classList.remove('text-danger');
                    statusText.classList.add('text-success');
                    captureBtn.disabled = false;
                } else {
                    statusText.textContent = "Wajah tidak terdeteksi. Posisikan wajah di tengah kamera.";
                    statusText.classList.remove('text-success');
                    statusText.classList.add('text-danger');
                    captureBtn.disabled = true;
                }
            }, 500);
        });

        captureBtn.addEventListener('click', () => {
            clearInterval(detectionInterval);
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, video.width, video.height);
            const dataUrl = canvas.toDataURL('image/jpeg');

            faceImageInput.value = dataUrl;
            previewImg.src = dataUrl;
            
            video.style.display = 'none';
            previewContainer.style.display = 'block';

            captureBtn.style.display = 'none';
            retakeBtn.style.display = 'inline-block';
            submitBtn.style.display = 'inline-block';
            statusText.textContent = "Gambar berhasil diambil. Klik 'Selesaikan' untuk menyimpan.";
        });
        
        retakeBtn.addEventListener('click', () => {
            video.style.display = 'block';
            previewContainer.style.display = 'none';
            
            captureBtn.style.display = 'inline-block';
            retakeBtn.style.display = 'none';
            submitBtn.style.display = 'none';
            
            video.play(); // Re-trigger 'play' event to start detection
        });

    });
</script>
@endsection

resources\views\admin\karyawan\edit.blade.php
@extends('admin.layouts.app')

@section('title', 'Edit Karyawan')

@push('styles')
<style>
    .form-section { margin-top: 1.5rem; }
    .form-section-title { margin-bottom: 1rem; font-weight: 500; color: #4e73df; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Edit Data Karyawan: {{ $karyawan->nama_lengkap }}</h1>

    @if(session('error'))
        <div class="alert alert-danger">{{ session('error') }}</div>
    @endif
     @if ($errors->any())
        <div class="alert alert-danger">
            <strong>Oops! Terjadi beberapa kesalahan:</strong>
            <ul>
                @foreach ($errors->all() as $error)
                    <li>{{ $error }}</li>
                @endforeach
            </ul>
        </div>
    @endif

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Form Edit Data Karyawan</h6>
        </div>
        <div class="card-body">
            <form action="{{ route('admin.karyawan.update', $karyawan->_id) }}" method="POST" enctype="multipart/form-data">
                @csrf
                @method('PUT')
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="nik" class="form-label">Username <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('nik') is-invalid @enderror" id="nik" name="nik" value="{{ old('nik', $karyawan->nik) }}" required>
                            @error('nik') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="nama_lengkap" class="form-label">Nama Lengkap <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('nama_lengkap') is-invalid @enderror" id="nama_lengkap" name="nama_lengkap" value="{{ old('nama_lengkap', $karyawan->nama_lengkap) }}" required>
                            @error('nama_lengkap') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="jabatan" class="form-label">Jabatan <span class="text-danger">*</span></label>
                            <select class="form-select @error('jabatan') is-invalid @enderror" id="jabatan" name="jabatan" required>
                                <option value="">-- Pilih Jabatan --</option>
                                @foreach($jabatanOptions as $value => $label)
                                    <option value="{{ $value }}" {{ old('jabatan', $karyawan->jabatan) == $value ? 'selected' : '' }}>{{ $label }}</option>
                                @endforeach
                            </select>
                            @error('jabatan') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="no_hp" class="form-label">Nomor HP <span class="text-danger">*</span></label>
                            <input type="text" class="form-control @error('no_hp') is-invalid @enderror" id="no_hp" name="no_hp" value="{{ old('no_hp', $karyawan->no_hp) }}" required>
                            @error('no_hp') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>

                {{-- Section for Non-Admin roles --}}
                 <div id="fakultas_section" class="form-section" style="display: none;">
                    <h5 class="form-section-title">Detail Penugasan</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="fakultas_nama" class="form-label">Fakultas <span id="fakultas_required_star" class="text-danger" style="display:none;">*</span></label>
                                <select class="form-select @error('fakultas_nama') is-invalid @enderror" id="fakultas_nama" name="fakultas_nama">
                                    <option value="">-- Pilih Fakultas --</option>
                                    @foreach($fakultasOptions as $namaFakultas)
                                        <option value="{{ $namaFakultas }}" {{ old('fakultas_nama', $karyawan->unit) == $namaFakultas ? 'selected' : '' }}>
                                            {{ $namaFakultas }}
                                        </option>
                                    @endforeach
                                </select>
                                @error('fakultas_nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                            </div>
                        </div>
                        <div class="col-md-6" id="program_studi_field" style="display: none;">
                            <div class="mb-3">
                                <label for="program_studi_nama" class="form-label">Program Studi <span id="prodi_required_star" class="text-danger" style="display:none;">*</span></label>
                                <select class="form-select @error('program_studi_nama') is-invalid @enderror" id="program_studi_nama" name="program_studi_nama">
                                     <option value="">-- Pilih Fakultas Terlebih Dahulu --</option>
                                     {{-- Options will be populated by JS, but we add the old value if available --}}
                                     @if(old('program_studi_nama', $karyawan->departemen))
                                        <option value="{{ old('program_studi_nama', $karyawan->departemen) }}" selected>{{ old('program_studi_nama', $karyawan->departemen) }}</option>
                                     @endif
                                </select>
                                @error('program_studi_nama') <div class="invalid-feedback">{{ $message }}</div> @enderror
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" id="office_radius_field" style="display: none;">
                            <div class="mb-3">
                                <label for="office_radius" class="form-label">Radius Kantor (meter) <span id="radius_required_star" class="text-danger" style="display:none;">*</span></label>
                                <input type="number" class="form-control @error('office_radius') is-invalid @enderror" id="office_radius" name="office_radius" value="{{ old('office_radius', $karyawan->office_radius) }}" min="10" readonly>
                                @error('office_radius') <div class="invalid-feedback">{{ $message }}</div> @enderror
                                <small class="text-muted">Akan terisi otomatis berdasarkan Fakultas/Prodi.</small>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="password" class="form-label">Password Baru (Opsional)</label>
                            <input type="password" class="form-control @error('password') is-invalid @enderror" id="password" name="password">
                            <small class="form-text text-muted">Kosongkan jika tidak ingin mengubah password.</small>
                            @error('password') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="password_confirmation" class="form-label">Konfirmasi Password Baru</label>
                            <input type="password" class="form-control" id="password_confirmation" name="password_confirmation">
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6" id="foto_profil_field_container">
                        <div class="mb-3" id="foto_profil_field" style="display: none;"> 
                            <label for="foto" class="form-label">Foto Profil (Opsional)</label>
                            <input type="file" class="form-control @error('foto') is-invalid @enderror" id="foto" name="foto" accept="image/*">
                            @if($karyawan->foto)
                                <small class="form-text text-muted mt-1 d-block">Foto saat ini: <a href="{{ asset('storage/' . $karyawan->foto) }}" target="_blank">Lihat Foto</a>. Upload baru untuk mengganti.</small>
                            @endif
                            @error('foto') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                    </div>
                </div>
                
                <div id="admin_specific_fields" class="form-section" style="display:none;">
                     <h5 class="form-section-title">Pengaturan Admin</h5>
                     <div class="alert alert-info small">Admin tidak memerlukan data fakultas, program studi, atau radius. Registrasi wajah juga tidak diperlukan. Foto profil bersifat opsional.</div>
                </div>
                
                <div id="komandan_specific_fields" class="form-section" style="display:none;">
                     <h5 class="form-section-title">Pengaturan Komandan</h5>
                     <div class="alert alert-info small">Komandan hanya memerlukan data fakultas. Program studi, radius, dan data wajah tidak digunakan. Foto profil opsional.</div>
                </div>
                
                 <div id="ketua_departemen_specific_fields" class="form-section" style="display:none;">
                     <h5 class="form-section-title">Pengaturan Ketua Departemen</h5>
                     <div class="alert alert-info small">Ketua Departemen memerlukan data fakultas dan program studi. Radius dan data wajah tidak digunakan. Foto profil opsional.</div>
                </div>

                <div id="petugas_face_reset_field" class="form-section" style="display:none;">
                    <h5 class="form-section-title">Pengaturan Wajah (Petugas Keamanan)</h5>
                    @if($karyawan->face_embedding)
                        <p class="text-success"><i class="bi bi-check-circle-fill"></i> Data wajah sudah terdaftar.</p>
                        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#resetFaceModal">
                            <i class="bi bi-arrow-counterclockwise"></i> Reset Data Wajah
                        </button>
                        <small class="d-block text-muted mt-1">Jika direset, karyawan perlu melakukan registrasi wajah kembali.</small>
                    @else
                        <p class="text-warning"><i class="bi bi-exclamation-triangle-fill"></i> Data wajah belum terdaftar.</p>
                        <small class="text-muted">Karyawan ini perlu melakukan registrasi wajah melalui aplikasi mobile atau fitur khusus jika tersedia.</small>
                    @endif
                </div>

                <div class="mt-4">
                    <a href="{{ route('admin.karyawan.index') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Update Karyawan</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Reset Wajah -->
@if($karyawan->face_embedding && $karyawan->jabatan == 'Petugas Keamanan')
<div class="modal fade" id="resetFaceModal" tabindex="-1" aria-labelledby="resetFaceModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="resetFaceModalLabel">Konfirmasi Reset Data Wajah</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Apakah Anda yakin ingin mereset data wajah untuk karyawan <strong>{{ $karyawan->nama_lengkap }}</strong>? <br>
        Karyawan ini harus melakukan registrasi wajah kembali.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
        <form action="{{ route('admin.karyawan.reset_face', $karyawan->_id) }}" method="POST" style="display:inline;">
            @csrf
            <button type="submit" class="btn btn-danger">Ya, Reset Data Wajah</button>
        </form>
      </div>
    </div>
  </div>
</div>
@endif

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function() {
    const jabatanSelect = document.getElementById('jabatan');
    const fakultasSection = document.getElementById('fakultas_section');
    const fakultasSelect = document.getElementById('fakultas_nama');
    const fakultasRequiredStar = document.getElementById('fakultas_required_star');
    const prodiField = document.getElementById('program_studi_field');
    const prodiSelect = document.getElementById('program_studi_nama');
    const prodiRequiredStar = document.getElementById('prodi_required_star');
    const radiusField = document.getElementById('office_radius_field');
    const radiusInput = document.getElementById('office_radius');
    const radiusRequiredStar = document.getElementById('radius_required_star');
    const fotoProfilField = document.getElementById('foto_profil_field');
    const adminSpecificFields = document.getElementById('admin_specific_fields');
    const komandanSpecificFields = document.getElementById('komandan_specific_fields');
    const ketuaDepartemenSpecificFields = document.getElementById('ketua_departemen_specific_fields');
    const petugasFaceResetField = document.getElementById('petugas_face_reset_field');

    const currentProdiNama = "{{ old('program_studi_nama', $karyawan->departemen) }}";
    const currentFakultasNama = "{{ old('fakultas_nama', $karyawan->unit) }}";

    function toggleFields() {
        const selectedJabatan = jabatanSelect.value;

        fakultasSection.style.display = 'none';
        fakultasRequiredStar.style.display = 'none';
        fakultasSelect.required = false;

        prodiField.style.display = 'none';
        prodiRequiredStar.style.display = 'none';
        prodiSelect.required = false;
        
        radiusField.style.display = 'none';
        radiusRequiredStar.style.display = 'none';
        radiusInput.required = false;
        
        fotoProfilField.style.display = 'none'; 
        adminSpecificFields.style.display = 'none';
        komandanSpecificFields.style.display = 'none';
        ketuaDepartemenSpecificFields.style.display = 'none';
        petugasFaceResetField.style.display = 'none';

        if (selectedJabatan === 'Admin') {
            adminSpecificFields.style.display = 'block';
            fotoProfilField.style.display = 'block';
        } else if (selectedJabatan === 'Komandan') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            fotoProfilField.style.display = 'block';
            komandanSpecificFields.style.display = 'block';
        } else if (selectedJabatan === 'Ketua Departemen') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            prodiField.style.display = 'block';
            prodiRequiredStar.style.display = 'inline';
            prodiSelect.required = true;
            fotoProfilField.style.display = 'block';
            ketuaDepartemenSpecificFields.style.display = 'block';
        } else if (selectedJabatan === 'Petugas Keamanan') {
            fakultasSection.style.display = 'block';
            fakultasRequiredStar.style.display = 'inline';
            fakultasSelect.required = true;
            prodiField.style.display = 'block';
            prodiRequiredStar.style.display = 'inline';
            prodiSelect.required = true;
            radiusField.style.display = 'block';
            radiusRequiredStar.style.display = 'inline';
            radiusInput.required = true;
            fotoProfilField.style.display = 'block';
            petugasFaceResetField.style.display = 'block';
        }
        
        if (fakultasSelect.value && ['Komandan', 'Ketua Departemen', 'Petugas Keamanan'].includes(selectedJabatan)) {
            fetchAndPopulateProdi(fakultasSelect.value, currentProdiNama);
        } else {
            clearProdiOptions(); 
        }
    }

    function clearProdiOptions(message = '-- Pilih Program Studi --') {
        prodiSelect.innerHTML = `<option value="">${message}</option>`;
    }

    function populateProdi(programStudiData, selectedProdiNama = '') {
        prodiSelect.innerHTML = '<option value="">-- Pilih Program Studi --</option>';
        if (programStudiData && programStudiData.length > 0) {
            programStudiData.forEach(function(prodi) {
                const option = document.createElement('option');
                option.value = prodi.nama_prodi;
                option.textContent = prodi.nama_prodi;
                if (prodi.nama_prodi === selectedProdiNama) {
                    option.selected = true;
                }
                if (prodi.radius) option.dataset.radius = String(prodi.radius).replace(/\D/g, '');
                prodiSelect.appendChild(option);
            });
            // Trigger change event if a prodi was pre-selected to update radius etc.
            if(selectedProdiNama) prodiSelect.dispatchEvent(new Event('change'));
        } else {
            prodiSelect.innerHTML = '<option value="">-- Tidak ada Program Studi --</option>';
        }
    }
    
    function fetchAndPopulateProdi(selectedFakultasNama, preselectProdiNama) {
        if (!selectedFakultasNama || !['Ketua Departemen', 'Petugas Keamanan'].includes(jabatanSelect.value)) {
            clearProdiOptions('-- Pilih Fakultas --');
            return;
        }

        prodiSelect.innerHTML = '<option value="">Loading...</option>';

        fetch(`/panel/fakultas/get-details-for-karyawan/${encodeURIComponent(selectedFakultasNama)}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) throw new Error(data.error);

                let prodiListToPopulate = (data.tipe_fakultas === 'Teknik')
                    ? data.program_studi.map(p => ({nama_prodi: p.nama_prodi, radius: p.radius}))
                    : data.program_studi.map(p => ({nama_prodi: p.nama_prodi}));

                if (jabatanSelect.value === 'Petugas Keamanan' && data.tipe_fakultas !== 'Teknik') {
                    radiusInput.value = data.radius_fakultas || '{{$karyawan->office_radius}}';
                }
                populateProdi(prodiListToPopulate, preselectProdiNama);
            })
            .catch(error => {
                console.error('Error fetching fakultas details:', error);
                clearProdiOptions('Gagal memuat prodi');
            });
    }

    fakultasSelect.addEventListener('change', function() {
        fetchAndPopulateProdi(this.value, null); 
    });

    prodiSelect.addEventListener('change', function() {
        if (jabatanSelect.value === 'Petugas Keamanan') {
            const selectedOption = this.options[this.selectedIndex];
            if (selectedOption && selectedOption.dataset.radius) {
                radiusInput.value = selectedOption.dataset.radius;
            }
        }
    });

    jabatanSelect.addEventListener('change', toggleFields);
    toggleFields(); 
    
    if (currentFakultasNama) {
        fetchAndPopulateProdi(currentFakultasNama, currentProdiNama);
    }
});
</script>
@endpush
@endsection

resources\views\admin\karyawan\index.blade.php
{{-- resources/views/admin/karyawan/index.blade.php --}}

@extends('admin.layouts.app')

@section('title', 'Manajemen Karyawan')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 45px;
        height: 45px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .card-header .form-control-sm {
        max-width: 300px;
    }
    .sortable-link {
        color: inherit;
        text-decoration: none;
    }
    .sortable-link:hover {
        color: #4e73df;
    }
    .sortable-link .bi {
        font-size: 1.1em;
        vertical-align: middle;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Daftar Karyawan</h1>
        <a href="{{ route('admin.karyawan.create') }}" class="btn btn-primary btn-sm">
            <i class="bi bi-plus-circle me-1"></i> Tambah Karyawan
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Data Seluruh Karyawan</h6>
            <form action="{{ route('admin.karyawan.index') }}" method="GET" class="d-inline-block">
                <div class="input-group input-group-sm">
                    <input type="text" name="search" class="form-control" placeholder="Cari NIK, Nama, Jabatan..." value="{{ request('search') }}">
                    <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-search"></i></button>
                    @if(request('search'))
                    <a href="{{ route('admin.karyawan.index') }}" class="btn btn-outline-danger" title="Reset Pencarian"><i class="bi bi-x-lg"></i></a>
                    @endif
                </div>
            </form>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTableKaryawan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>
                                <a href="{{ route('admin.karyawan.index', ['sort_by' => 'nik', 'sort_order' => $sortBy == 'nik' && $sortOrder == 'asc' ? 'desc' : 'asc'] + request()->except(['sort_by', 'sort_order'])) }}" class="sortable-link" data-bs-toggle="tooltip" title="Urutkan berdasarkan NIK">
                                    Username
                                    @if($sortBy == 'nik')
                                        <i class="bi bi-sort-numeric-{{ $sortOrder == 'asc' ? 'down' : 'up-alt' }}"></i>
                                    @else
                                        <i class="bi bi-arrow-down-up text-muted"></i>
                                    @endif
                                </a>
                            </th>
                            <th>
                                <a href="{{ route('admin.karyawan.index', ['sort_by' => 'nama_lengkap', 'sort_order' => $sortBy == 'nama_lengkap' && $sortOrder == 'asc' ? 'desc' : 'asc'] + request()->except(['sort_by', 'sort_order'])) }}" class="sortable-link" data-bs-toggle="tooltip" title="Urutkan berdasarkan Nama">
                                    Nama Lengkap
                                    @if($sortBy == 'nama_lengkap')
                                        <i class="bi bi-sort-alpha-{{ $sortOrder == 'asc' ? 'down' : 'up-alt' }}"></i>
                                    @else
                                        <i class="bi bi-arrow-down-up text-muted"></i>
                                    @endif
                                </a>
                            </th>
                            <th>
                                <a href="{{ route('admin.karyawan.index', ['sort_by' => 'jabatan', 'sort_order' => $sortBy == 'jabatan' && $sortOrder == 'asc' ? 'desc' : 'asc'] + request()->except(['sort_by', 'sort_order'])) }}" class="sortable-link" data-bs-toggle="tooltip" title="Urutkan berdasarkan Jabatan">
                                    Jabatan
                                    @if($sortBy == 'jabatan')
                                        <i class="bi bi-sort-alpha-{{ $sortOrder == 'asc' ? 'down' : 'up-alt' }}"></i>
                                    @else
                                        <i class="bi bi-arrow-down-up text-muted"></i>
                                    @endif
                                </a>
                            </th>
                            <th>No. HP</th>
                            <th>Foto</th>
                            <th>Unit Kerja (Fakultas & Prodi)</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($karyawans as $index => $karyawan)
                        <tr>
                            <td class="text-center">{{ $karyawans->firstItem() + $index }}</td>
                            <td>{{ $karyawan->nik }}</td>
                            <td>{{ $karyawan->nama_lengkap }}</td>
                            <td class="text-center">
                                @if($karyawan->is_admin)
                                    <span class="badge bg-danger">Admin</span>
                                @elseif($karyawan->is_komandan)
                                    <span class="badge bg-info">Komandan</span>
                                @elseif($karyawan->is_ketua_departemen)
                                    <span class="badge bg-warning text-dark">Ketua Departemen</span>
                                @else
                                    <span class="badge bg-success">Petugas Keamanan</span>
                                @endif
                            </td>
                            <td>{{ $karyawan->no_hp }}</td>
                            <td class="text-center">
                                @if($karyawan->foto)
                                    <img src="{{ asset('storage/' . $karyawan->foto) }}" alt="Foto {{ $karyawan->nama_lengkap }}" class="img-thumbnail-xs">
                                @else
                                    <span class="text-muted">N/A</span>
                                @endif
                            </td>
                            <td>
                                @if($karyawan->is_admin)
                                    <span class="text-muted fst-italic">N/A</span>
                                @elseif($karyawan->is_komandan)
                                    Fakultas: {{ $karyawan->unit ?? 'N/A' }}
                                @elseif($karyawan->is_ketua_departemen)
                                    Fakultas: {{ $karyawan->unit ?? 'N/A' }} <br>
                                    Prodi: {{ $karyawan->departemen ?? 'N/A' }}
                                @elseif($karyawan->jabatan == 'Petugas Keamanan')
                                    Fakultas: {{ $karyawan->unit ?? 'N/A' }} <br>
                                    Prodi: {{ $karyawan->departemen ?? 'N/A' }}
                                    @if($karyawan->office_radius)
                                        <br><small class="text-muted">Radius: {{ $karyawan->office_radius }} meter</small>
                                    @endif
                                @else
                                    <span class="text-muted fst-italic">N/A</span>
                                @endif
                            </td>
                            <td class="text-center">
                                <a href="{{ route('admin.karyawan.show', $karyawan->_id) }}" class="btn btn-info btn-sm py-0 px-1 my-1" title="Lihat Detail">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                                <a href="{{ route('admin.karyawan.edit', $karyawan->_id) }}" class="btn btn-warning btn-sm py-0 px-1 my-1" title="Edit">
                                    <i class="bi bi-pencil-fill"></i>
                                </a>
                                <button type="button" class="btn btn-danger btn-sm py-0 px-1 my-1" data-bs-toggle="modal" data-bs-target="#deleteModal{{ $karyawan->_id }}" title="Hapus">
                                    <i class="bi bi-trash-fill"></i>
                                </button>

                                <div class="modal fade" id="deleteModal{{ $karyawan->_id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ $karyawan->_id }}" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteModalLabel{{ $karyawan->_id }}">Konfirmasi Hapus</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body text-start">
                                                Apakah Anda yakin ingin menghapus karyawan <strong>{{ $karyawan->nama_lengkap }}</strong> (NIK: {{ $karyawan->nik }})?
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Batal</button>
                                                <form action="{{ route('admin.karyawan.destroy', $karyawan->_id) }}" method="POST" style="display: inline;">
                                                    @csrf
                                                    @method('DELETE')
                                                    <button type="submit" class="btn btn-danger btn-sm">Hapus</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Belum ada data karyawan.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $karyawans->appends(request()->except('page'))->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\admin\karyawan\show.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Karyawan: ' . $karyawan->nama_lengkap)

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Karyawan</h1>
        <a href="{{ route('admin.karyawan.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Daftar
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Data {{ $karyawan->nama_lengkap }} (Username: {{ $karyawan->nik }})</h6>
            <div>
                <a href="{{ route('admin.karyawan.edit', $karyawan->_id) }}" class="btn btn-warning btn-sm" title="Edit Data Karyawan">
                    <i class="bi bi-pencil-fill"></i> Edit
                </a>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3 text-center">
                    @if($karyawan->foto)
                        <img src="{{ asset('storage/' . $karyawan->foto) }}" alt="Foto {{ $karyawan->nama_lengkap }}" class="img-thumbnail mb-3" style="max-width: 200px; max-height: 200px; object-fit: cover;">
                    @else
                        <div class="img-thumbnail d-flex align-items-center justify-content-center mb-3" style="width: 150px; height: 150px; background-color: #f8f9fa;">
                            <span class="text-muted">Tidak Ada Foto</span>
                        </div>
                    @endif
                </div>
                <div class="col-md-9">
                    <table class="table table-borderless table-sm">
                        <tr>
                            <th style="width: 25%;">Username</th>
                            <td>: {{ $karyawan->nik }}</td>
                        </tr>
                        <tr>
                            <th>Nama Lengkap</th>
                            <td>: {{ $karyawan->nama_lengkap }}</td>
                        </tr>
                        <tr>
                            <th>Jabatan</th>
                            <td>: {{ $karyawan->jabatan }}</td>
                        </tr>
                        <tr>
                            <th>Nomor HP</th>
                            <td>: {{ $karyawan->no_hp }}</td>
                        </tr>
                        <tr>
                            <th>Email</th>
                            <td>: {{ $karyawan->email ?? '-' }}</td>
                        </tr>
                        <tr>
                            <th>Status Admin</th>
                            <td>: {!! $karyawan->is_admin ? '<span class="badge bg-success">Ya</span>' : '<span class="badge bg-secondary">Tidak</span>' !!}</td>
                        </tr>
                        <tr>
                            <th>Lokasi Kantor</th>
                            <td>
                                @if(isset($karyawan->office_location['coordinates']))
                                    : Lat: {{ $karyawan->office_location['coordinates'][1] }}, Lng: {{ $karyawan->office_location['coordinates'][0] }}
                                    (Radius: {{ $karyawan->office_radius ?? 'N/A' }} m)
                                    <form action="{{ route('admin.karyawan.reset_location', $karyawan->_id) }}" method="GET" class="d-inline ms-2" onsubmit="return confirm('Anda yakin ingin mereset lokasi kantor karyawan ini? Karyawan perlu mengatur ulang lokasi kantornya.');">
                                        @csrf
                                        <button type="submit" class="btn btn-outline-danger btn-sm py-0 px-1" title="Reset Lokasi Kantor"><i class="bi bi-geo-alt-fill"></i> Reset</button>
                                    </form>
                                @else
                                    : <span class="text-muted">Belum diatur</span>
                                @endif
                            </td>
                        </tr>
                        <tr>
                            <th>Data Wajah</th>
                            <td>
                                @if($karyawan->face_embedding)
                                    : <span class="badge bg-info">Terdaftar</span>
                                    <form action="{{ route('admin.karyawan.reset_face', $karyawan->_id) }}" method="POST" class="d-inline ms-2" onsubmit="return confirm('Anda yakin ingin mereset data wajah karyawan ini? Karyawan perlu melakukan registrasi wajah kembali.');">
                                        @csrf
                                        <button type="submit" class="btn btn-outline-danger btn-sm py-0 px-1" title="Reset Data Wajah"><i class="bi bi-person-bounding-box"></i> Reset</button>
                                    </form>
                                @else
                                    : <span class="badge bg-warning">Belum Terdaftar</span>
                                @endif
                            </td>
                        </tr>
                         <tr>
                            <th>Foto Verifikasi Wajah Terakhir (Presensi)</th>
                            <td>:
                                @php
                                    $lastPresensiWithFace = \App\Models\Presensi::where('nik', $karyawan->nik)
                                                            ->whereNotNull('foto_in') // atau foto_out jika relevan
                                                            ->orderBy('tgl_presensi', 'desc')
                                                            ->first();
                                @endphp
                                @if($lastPresensiWithFace && $lastPresensiWithFace->foto_in)
                                    <a href="{{ asset('storage/' . $lastPresensiWithFace->foto_in) }}" target="_blank">Lihat Foto Masuk Terakhir</a>
                                    (@if($lastPresensiWithFace->foto_out)
                                    , <a href="{{ asset('storage/' . $lastPresensiWithFace->foto_out) }}" target="_blank">Lihat Foto Pulang Terakhir</a>
                                    @endif)
                                @else
                                    <span class="text-muted">Tidak ada</span>
                                @endif
                            </td>
                        </tr>
                        <tr>
                            <th>Foto Verifikasi Wajah Terakhir (Laporan)</th>
                            <td>:
                                @php
                                    $lastLaporanWithFace = \App\Models\Laporan::where('nik', $karyawan->nik)
                                                            ->whereNotNull('face_verification_image')
                                                            ->orderBy('created_at', 'desc')
                                                            ->first();
                                @endphp
                                @if($lastLaporanWithFace && $lastLaporanWithFace->face_verification_image)
                                    <a href="{{ asset('storage/' . $lastLaporanWithFace->face_verification_image) }}" target="_blank">Lihat Foto Verifikasi Laporan Terakhir</a>
                                @else
                                    <span class="text-muted">Tidak ada</span>
                                @endif
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    {{-- Tambahkan bagian untuk menampilkan histori presensi atau laporan karyawan jika diperlukan --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Histori Presensi Bulan Ini</h6>
        </div>
        <div class="card-body">
            <a href="{{ route('admin.presensi.detail_karyawan', ['nik' => $karyawan->nik, 'bulan' => date('m'), 'tahun' => date('Y')]) }}" class="btn btn-sm btn-info">
                Lihat Detail Presensi Karyawan Ini
            </a>
            {{-- Atau tampilkan tabel singkat di sini --}}
        </div>
    </div>

</div>
@endsection

resources\views\admin\laporan\index.blade.php
{{-- resources\views\admin\laporan\index.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Manajemen Laporan Karyawan')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem; /* Slightly increase padding for readability */
        vertical-align: middle; /* Center content vertically */
    }
    .table td {
        line-height: 1.4; /* Improve line spacing */
    }
    .btn-group-sm .btn {
        margin: 1px;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Manajemen Laporan Karyawan</h1>
    <p class="mb-4">Menampilkan semua laporan yang dikirim oleh karyawan.</p>

    {{-- Alert Messages --}}
    @if(session('success'))
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>{{ session('success') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif

    @if(session('error'))
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle me-2"></i>{{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif

    {{-- Card Filter --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.laporan.index') }}">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_mulai" class="form-label">Tanggal Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_akhir" class="form-label">Tanggal Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="nik_karyawan" class="form-label">Username Karyawan:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Username">
                    </div>
                     <div class="col-md-3 mb-3">
                        <label for="nama_karyawan" class="form-label">Nama Karyawan:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Nama">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="jenis_laporan" class="form-label">Jenis Laporan:</label>
                        <select name="jenis_laporan" id="jenis_laporan" class="form-select form-select-sm">
                            <option value="">Semua Jenis</option>
                            <option value="harian" {{ request('jenis_laporan') == 'harian' ? 'selected' : '' }}>Harian</option>
                            <option value="kegiatan" {{ request('jenis_laporan') == 'kegiatan' ? 'selected' : '' }}>Kegiatan</option>
                            <option value="masalah" {{ request('jenis_laporan') == 'masalah' ? 'selected' : '' }}>Masalah</option>
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="status_admin" class="form-label">Status Admin:</label>
                        <select name="status_admin" id="status_admin" class="form-select form-select-sm">
                            <option value="">Semua Status</option>
                            <option value="belum_ditinjau" {{ request('status_admin') == 'belum_ditinjau' ? 'selected' : '' }}>Belum Ditinjau</option>
                            <option value="Diterima" {{ request('status_admin') == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                            <option value="Ditolak" {{ request('status_admin') == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                            <option value="Perlu Revisi" {{ request('status_admin') == 'Perlu Revisi' ? 'selected' : '' }}>Perlu Revisi</option>
                        </select>
                    </div>
                    <div class="col-md-3 align-self-end mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-funnel-fill"></i> Filter</button>
                        <a href="{{ route('admin.laporan.index') }}" class="btn btn-secondary btn-sm"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{-- Card Daftar Laporan --}}
    <div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Daftar Laporan</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover table-sm" id="dataTableLaporan" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        {{-- Menambahkan class "text-center" pada semua header --}}
                        <th class="text-center" style="width: 5%;">No</th>
                        <th class="text-center" style="width: 15%;">Waktu Laporan</th>
                        <th class="text-center" style="width: 20%;">Karyawan</th>
                        <th class="text-center" style="width: 10%;">Jenis</th>
                        <th class="text-center">Keterangan</th>
                        <th class="text-center" style="width: 12%;">Status</th>
                        <th class="text-center" style="width: 8%;">Aksi</th>
                    </tr>
                </thead>
                <tbody>
                    @php
                        use Illuminate\Support\Str;
                    @endphp
                    @forelse ($laporans as $index => $laporan)
                    <tr>
                        {{-- Menambahkan "text-center" untuk kolom No --}}
                        <td class="text-center">{{ $laporans->firstItem() + $index }}</td>
                        <td>
                            {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('D MMM YY') }}
                            <br>
                            <small class="text-muted">{{ $laporan->jam }}</small>
                        </td>
                        <td>
                            {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}
                            <br>
                            <small class="text-muted">{{ $laporan->nik }}</small>
                        </td>
                        {{-- Menambahkan "text-center" untuk kolom Jenis --}}
                        <td class="text-center">
                            @php
                                $badgeClass = 'bg-secondary'; // Default color
                                if ($laporan->jenis_laporan == 'harian') $badgeClass = 'bg-primary';
                                elseif ($laporan->jenis_laporan == 'kegiatan') $badgeClass = 'bg-success';
                                elseif ($laporan->jenis_laporan == 'masalah') $badgeClass = 'bg-danger';
                            @endphp
                            <span class="badge {{ $badgeClass }} text-capitalize">{{ $laporan->jenis_laporan }}</span>
                        </td>
                        <td>{{ Str::limit($laporan->keterangan, 70) }}</td>
                        {{-- Menambahkan "text-center" untuk kolom Status --}}
                        <td class="text-center">
                            @if($laporan->status_admin)
                                <span class="badge 
                                    @if($laporan->status_admin == 'Diterima') bg-success
                                    @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                    @elseif($laporan->status_admin == 'Perlu Revisi') bg-warning text-dark
                                    @else bg-secondary @endif">
                                    {{ $laporan->status_admin }}
                                </span>
                            @else
                                <span class="badge bg-secondary">Belum Ditinjau</span>
                            @endif
                        </td>
                        {{-- Menambahkan "text-center" untuk kolom Aksi --}}
                        <td class="text-center">
                            <div class="btn-group-sm d-flex justify-content-center">
                                <a href="{{ route('admin.laporan.show', $laporan->_id) }}" 
                                   class="btn btn-info btn-sm py-0 px-1" 
                                   title="Lihat Detail Laporan">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                                <button type="button" 
                                        class="btn btn-danger btn-sm py-0 px-1" 
                                        data-bs-toggle="modal" 
                                        data-bs-target="#deleteModal{{ $laporan->_id }}" 
                                        title="Hapus Laporan">
                                    <i class="bi bi-trash-fill"></i>
                                </button>
                            </div>

                            {{-- Modal tidak perlu diubah --}}
                            <div class="modal fade" id="deleteModal{{ $laporan->_id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ $laporan->_id }}" aria-hidden="true">
                                {{-- ... isi modal sama seperti sebelumnya ... --}}
                            </div>
                        </td>
                    </tr>
                    @empty
                    <tr>
                        <td colspan="7" class="text-center">Tidak ada data laporan yang sesuai dengan filter.</td>
                    </tr>
                    @endforelse
                </tbody>
            </table>
        </div>
        <div class="mt-3">
            {{ $laporans->appends(request()->query())->links() }}
        </div>
    </div>
</div>
</div>
@endsection

@push('scripts')
<script>
    // Auto-hide alerts after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const alerts = document.querySelectorAll('.alert-dismissible');
        alerts.forEach(function(alert) {
            setTimeout(function() {
                const bsAlert = new bootstrap.Alert(alert);
                if (bsAlert) {
                    bsAlert.close();
                }
            }, 5000);
        });
    });
</script>
@endpush

resources\views\admin\laporan\show.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Laporan Karyawan')

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Laporan</h1>
        <a href="{{ route('admin.laporan.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Daftar Laporan
        </a>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Informasi Laporan</h6>
                </div>
                <div class="card-body">
                    <table class="table table-borderless table-sm">
                        <tr>
                            <th style="width: 30%;">ID Laporan</th>
                            <td>: {{ $laporan->_id }}</td>
                        </tr>
                        <tr>
                            <th>Tanggal Laporan</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('dddd, D MMMM YYYY') }}</td>
                        </tr>
                        <tr>
                            <th>Jam Laporan</th>
                            <td>: {{ $laporan->jam }}</td>
                        </tr>
                        <tr>
                            <th>Username Karyawan</th>
                            <td>: {{ $laporan->nik }}</td>
                        </tr>
                        <tr>
                            <th>Nama Karyawan</th>
                            <td>: {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jabatan</th>
                            <td>: {{ $laporan->karyawan->jabatan ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jenis Laporan</th>
                            <td>: <span class="badge bg-info text-capitalize">{{ $laporan->jenis_laporan }}</span></td>
                        </tr>
                        <tr>
                            <th>Lokasi Pengiriman</th>
                            <td>: {{ $laporan->lokasi }}</td>
                        </tr>
                        <tr>
                            <th class="align-top">Keterangan</th>
                            <td class="align-top">: <div style="white-space: pre-wrap;">{{ $laporan->keterangan }}</div></td>
                        </tr>
                        <tr>
                            <th>Foto Bukti</th>
                            <td>:
                                @if($laporan->foto)
                                <a href="{{ $laporan->foto_url }}" target="_blank">
                                    <img src="{{ $laporan->foto_url }}" alt="Foto Bukti" class="img-thumbnail mt-1" style="max-width: 250px; max-height: 250px;">
                                </a>
                                @else
                                Tidak ada foto bukti.
                                @endif
                            </td>
                        </tr>
                        <tr>
                            <th>Foto Verifikasi Wajah</th>
                            <td>:
                                @if($laporan->face_verification_image)
                                <a href="{{ $laporan->face_verification_url }}" target="_blank">
                                    <img src="{{ $laporan->face_verification_url }}" alt="Foto Verifikasi Wajah" class="img-thumbnail mt-1" style="max-width: 150px; max-height: 150px;">
                                </a>
                                @else
                                Tidak ada foto verifikasi.
                                @endif
                            </td>
                        </tr>
                         <tr>
                            <th>Tanggal Dibuat</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->created_at)->isoFormat('D MMM YYYY, HH:mm:ss') }}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Status & Tindakan Admin</h6>
                </div>
                <div class="card-body">
                    <p><strong>Status Saat Ini:</strong>
                        @if($laporan->status_admin)
                            <span class="badge 
                                @if($laporan->status_admin == 'Diterima') bg-success
                                @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                @else bg-secondary @endif">
                                {{ $laporan->status_admin }}
                            </span>
                            @if($laporan->tanggal_peninjauan_admin)
                                <small class="d-block text-muted">Ditinjau pada: {{ \Carbon\Carbon::parse($laporan->tanggal_peninjauan_admin)->isoFormat('D MMM YYYY, HH:mm') }}</small>
                            @endif
                        @else
                            <span class="badge bg-secondary">Belum Ditinjau</span>
                        @endif
                    </p>
                    @if($laporan->catatan_admin)
                    <p><strong>Catatan Admin:</strong><br>
                        <small class="text-muted" style="white-space: pre-wrap;">{{ $laporan->catatan_admin }}</small>
                    </p>
                    @endif

                    <hr>
                    <form action="{{ route('admin.laporan.update_status', $laporan->_id) }}" method="POST">
                        @csrf
                        <div class="mb-3">
                            <label for="status_admin" class="form-label">Ubah Status:</label>
                            <select name="status_admin" id="status_admin" class="form-select @error('status_admin') is-invalid @enderror" required>
                                <option value="">-- Pilih Status --</option>
                                <option value="Diterima" {{ old('status_admin', $laporan->status_admin) == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                                <option value="Ditolak" {{ old('status_admin', $laporan->status_admin) == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                            </select>
                            @error('status_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <div class="mb-3">
                            <label for="catatan_admin" class="form-label">Catatan Admin (Opsional):</label>
                            <textarea name="catatan_admin" id="catatan_admin" rows="3" class="form-control @error('catatan_admin') is-invalid @enderror">{{ old('catatan_admin', $laporan->catatan_admin) }}</textarea>
                            @error('catatan_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Update Status</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\admin\layouts\app.blade.php
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@yield('title') - SiAmalin Panel</title>
    <link rel="icon" type="image/png" href="{{ asset('assets/img/favicon.png') }}?v=3">
    <link rel="apple-touch-icon" sizes="180x180" href="{{ asset('assets/img/icon/192x192.png') }}?v=3">
    <link rel="shortcut icon" href="{{ asset('assets/img/favicon.ico') }}?v=3" type="image/x-icon">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    @stack('styles')
<style>
    body {
        overflow-x: hidden;
    }

    #wrapper {
        display: flex;
    }

    #sidebar-wrapper {
        min-height: 100vh;
        width: 250px;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
        background-color: #1c2950;  
        transition: margin-left .25s ease-out;
        overflow-y: auto;
    }

    .sidebar-heading {
        padding: 1rem 1.25rem;  
        font-size: 1.25rem;  
        font-weight: 600;  
        color: #ffffff;  
        display: flex;  
        align-items: center;  
    }
    .sidebar-heading .logo-icon {  
        font-size: 1.8rem;  
        margin-right: 10px;  
        color: #87cefa;  
    }


    #sidebar-wrapper .list-group-item-action {
        color: rgba(255, 255, 255, 0.75);  
        background-color: transparent;  
        border: none;  
        padding: 0.9rem 1.25rem;  
        font-size: 0.95rem;  
    }

    #sidebar-wrapper .list-group-item-action:hover,
    #sidebar-wrapper .list-group-item-action:focus {
        color: #ffffff;  
        background-color: rgba(255, 255, 255, 0.1);  
    }

    #sidebar-wrapper .list-group-item.active {
        color: #ffffff;  
        background-color: #0d6efd;  
        font-weight: 500;
    }

    .sidebar-nav .list-group-item-action[data-bs-toggle="collapse"]::after {  
        content: '\f282';  
        font-family: 'bootstrap-icons';
        display: inline-block;
        margin-left: auto;
        transition: transform 0.2s ease-in-out;
        color: rgba(255, 255, 255, 0.75);
    }

    .sidebar-nav .list-group-item-action[data-bs-toggle="collapse"][aria-expanded="true"]::after {
        transform: rotate(-180deg);
    }

    .sidebar-nav .collapse .list-group-item-action,
    .sidebar-nav .collapsing .list-group-item-action {
        padding-left: 2.5rem;  
        font-size: 0.9em;
        color: rgba(255, 255, 255, 0.65);  
        background-color: rgba(0,0,0,0.1);  
    }
    .sidebar-nav .collapse .list-group-item-action:hover,
    .sidebar-nav .collapsing .list-group-item-action:hover {
        color: #ffffff;
        background-color: rgba(255, 255, 255, 0.15);
    }
    .sidebar-nav .collapse .list-group-item-action.active {
        color: #ffffff;
        font-weight: 500;
        background-color: #0b5ed7;  
    }

    #page-content-wrapper {
        flex-grow: 1;
        padding-top: 56px;  
        margin-left: 250px;
        transition: margin-left .25s ease-out;
        min-width: 0;  
        overflow-y: auto;  
    }

    #page-content-wrapper .navbar {
        position: fixed;  
        top: 0;
        right: 0;  
        left: 250px;  
        z-index: 999;  
        transition: left .25s ease-out;
    }

    #wrapper.toggled #sidebar-wrapper {
        margin-left: -250px;  
    }

    #wrapper.toggled #page-content-wrapper {
        margin-left: 0;  
    }

    #wrapper.toggled #page-content-wrapper .navbar {
        left: 0;  
    }

    @media (max-width: 768px) {
        #sidebar-wrapper {
            margin-left: -250px;  
        }
        #page-content-wrapper {
            margin-left: 0;  
        }
        #page-content-wrapper .navbar {
            left: 0;  
        }

        #wrapper.toggled #sidebar-wrapper {
            margin-left: 0;  
        }
        #wrapper.toggled #page-content-wrapper {
            margin-left: 250px;  
        }
         #wrapper.toggled #page-content-wrapper .navbar {
            left: 250px;  
        }
    }
</style>
</head>
<body>
    <div class="d-flex" id="wrapper">
        <div class="sidebar-nav" id="sidebar-wrapper">
            <div class="sidebar-heading">
                <i class="bi bi-buildings-fill logo-icon"></i>
                @if(Auth::guard('karyawan')->user()->is_admin)
                    <span>SiAmalin Admin</span>
                @elseif(Auth::guard('karyawan')->user()->is_komandan)
                    <span>SiAmalin Komandan</span>
                @elseif(Auth::guard('karyawan')->user()->is_ketua_departemen)
                    <span>SiAmalin Kadept</span>
                @endif
            </div>
            <div class="list-group list-group-flush">
                @if(Auth::guard('karyawan')->user()->is_admin)
                    {{-- Menu Admin --}}
                    <a href="{{ route('admin.dashboard') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.dashboard') ? 'active' : '' }}">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard Admin
                    </a>
                    <a class="list-group-item list-group-item-action p-3" data-bs-toggle="collapse" href="#dataMasterCollapseAdmin" role="button" aria-expanded="{{ request()->routeIs('admin.karyawan.*') || request()->routeIs('admin.fakultas.*') ? 'true' : 'false' }}" aria-controls="dataMasterCollapseAdmin">
                        <i class="bi bi-archive-fill me-2"></i>Data Master
                    </a>
                    <div class="collapse {{ request()->routeIs('admin.karyawan.*') || request()->routeIs('admin.fakultas.*') ? 'show' : '' }}" id="dataMasterCollapseAdmin">
                        <a href="{{ route('admin.karyawan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.karyawan.*') ? 'active' : '' }}">
                            <i class="bi bi-people-fill me-2"></i>Karyawan
                        </a>
                        <a href="{{ route('admin.fakultas.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.fakultas.*') ? 'active' : '' }}">
                            <i class="bi bi-building me-2"></i>Fakultas
                        </a>
                    </div>
                    <a href="{{ route('admin.presensi.rekapitulasi') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.presensi.*') ? 'active' : '' }}">
                        <i class="bi bi-calendar-check-fill me-2"></i>Presensi
                    </a>
                    <a href="{{ route('admin.laporan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.laporan.*') ? 'active' : '' }}">
                        <i class="bi bi-file-earmark-text-fill me-2"></i>Laporan
                    </a>
                    <a href="{{ route('admin.patroli.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.patroli.*') ? 'active' : '' }}">
                        <i class="bi bi-clock-history me-2"></i>Histori Patroli
                    </a>
                    <a href="{{ route('admin.backup.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('admin.backup.*') ? 'active' : '' }}">
                        <i class="bi bi-database-down me-2"></i>Backup Data
                    </a>

                @elseif(Auth::guard('karyawan')->user()->is_komandan)
                    {{-- Menu Komandan --}}
                    <a href="{{ route('komandan.dashboard') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.dashboard') ? 'active' : '' }}">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard Komandan
                    </a>
                    <a href="{{ route('komandan.karyawan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.karyawan.*') ? 'active' : '' }}">
                        <i class="bi bi-person-badge-fill me-2"></i>Data Petugas
                    </a>
                    <a href="{{ route('komandan.presensi.rekapitulasi') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.presensi.*') ? 'active' : '' }}">
                        <i class="bi bi-calendar3-week-fill me-2"></i>Presensi Petugas
                    </a>
                     <a href="{{ route('komandan.laporan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.laporan.*') ? 'active' : '' }}">
                        <i class="bi bi-card-list me-2"></i>Laporan Petugas
                    </a>
                     <a class="list-group-item list-group-item-action p-3" data-bs-toggle="collapse" href="#patroliCollapseKomandan" role="button" aria-expanded="{{ request()->routeIs('komandan.patroli.*') ? 'true' : 'false' }}" aria-controls="patroliCollapseKomandan">
                        <i class="bi bi-signpost-split-fill me-2"></i>Patroli Petugas
                    </a>
                    <div class="collapse {{ request()->routeIs('komandan.patroli.*') ? 'show' : '' }}" id="patroliCollapseKomandan">
                        <a href="{{ route('komandan.patroli.monitoring') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.patroli.monitoring') ? 'active' : '' }}">
                            <i class="bi bi-broadcast-pin me-2"></i>Monitoring Patroli
                        </a>
                        <a href="{{ route('komandan.patroli.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.patroli.index') ? 'active' : '' }}">
                            <i class="bi bi-clock-history me-2"></i>Histori Patroli
                        </a>
                    </div>
                     <a href="{{ route('komandan.jadwalshift.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.jadwalshift.*') ? 'active' : '' }}">
                        <i class="bi bi-calendar-plus-fill me-2"></i>Jadwal Shift
                    </a>
                     <a href="{{ route('komandan.laporankinerja.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('komandan.laporankinerja.*') ? 'active' : '' }}">
                        <i class="bi bi-graph-up-arrow me-2"></i>Laporan Kinerja
                    </a>
                @elseif(Auth::guard('karyawan')->user()->is_ketua_departemen)
                    {{-- Menu Ketua Departemen --}}
                    <a href="{{ route('ketua-departemen.dashboard') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.dashboard') ? 'active' : '' }}">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard
                    </a>
                    <a href="{{ route('ketua-departemen.karyawan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.karyawan.*') ? 'active' : '' }}">
                        <i class="bi bi-person-badge-fill me-2"></i>Data Petugas
                    </a>
                    <a href="{{ route('ketua-departemen.presensi.rekapitulasi') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.presensi.*') ? 'active' : '' }}">
                        <i class="bi bi-calendar3-week-fill me-2"></i>Presensi Petugas
                    </a>
                     <a href="{{ route('ketua-departemen.laporan.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.laporan.*') ? 'active' : '' }}">
                        <i class="bi bi-card-list me-2"></i>Laporan Petugas
                    </a>
                     <a class="list-group-item list-group-item-action p-3" data-bs-toggle="collapse" href="#patroliCollapseKadept" role="button" aria-expanded="{{ request()->routeIs('ketua-departemen.patroli.*') ? 'true' : 'false' }}" aria-controls="patroliCollapseKadept">
                        <i class="bi bi-signpost-split-fill me-2"></i>Patroli Petugas
                    </a>
                    <div class="collapse {{ request()->routeIs('ketua-departemen.patroli.*') ? 'show' : '' }}" id="patroliCollapseKadept">
                        <a href="{{ route('ketua-departemen.patroli.monitoring') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.patroli.monitoring') ? 'active' : '' }}">
                            <i class="bi bi-broadcast-pin me-2"></i>Monitoring Patroli
                        </a>
                        <a href="{{ route('ketua-departemen.patroli.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.patroli.index') ? 'active' : '' }}">
                            <i class="bi bi-clock-history me-2"></i>Histori Patroli
                        </a>
                    </div>
                     <a href="{{ route('ketua-departemen.jadwalshift.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.jadwalshift.*') ? 'active' : '' }}">
                        <i class="bi bi-calendar-check me-2"></i>Lihat Jadwal Shift
                    </a>
                     <a href="{{ route('ketua-departemen.laporankinerja.index') }}" class="list-group-item list-group-item-action p-3 {{ request()->routeIs('ketua-departemen.laporankinerja.*') ? 'active' : '' }}">
                        <i class="bi bi-graph-up-arrow me-2"></i>Laporan Kinerja
                    </a>
                @endif
            </div>
        </div>
        <div id="page-content-wrapper">
            <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
                <div class="container-fluid">
                    <button class="btn btn-primary btn-sm" id="menu-toggle"><i class="bi bi-list"></i></button>
                    <div class="ms-auto">
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-person-circle me-1"></i>{{ Auth::guard('karyawan')->user()->nama_lengkap }}
                                    @if(Auth::guard('karyawan')->user()->is_admin)
                                        <span class="badge bg-danger ms-1">Admin</span>
                                    @elseif(Auth::guard('karyawan')->user()->is_komandan)
                                        <span class="badge bg-info ms-1">Komandan</span>
                                    @elseif(Auth::guard('karyawan')->user()->is_ketua_departemen)
                                        <span class="badge bg-warning text-dark ms-1">Ketua Departemen</span>
                                    @endif
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                    <li><a class="dropdown-item" href="{{ route('profile') }}" target="_blank">Lihat Profil (Karyawan)</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <a class="dropdown-item" href="{{ route('proseslogout') }}"
                                           onclick="event.preventDefault(); document.getElementById('logout-form').submit();">
                                            <i class="bi bi-box-arrow-right me-2"></i>Logout
                                        </a>
                                        <form id="logout-form" action="{{ route('proseslogout') }}" method="GET" style="display: none;">
                                            @csrf
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>

            <main class="container-fluid p-4">
                {{-- PERBAIKAN: Menambahkan ID unik untuk setiap jenis pesan --}}
                @if(session('success'))
                    <div id="sessionSuccessAlert" class="alert alert-success alert-dismissible fade show" role="alert">
                        {{ session('success') }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                @endif
                @if(session('error'))
                    <div id="sessionErrorAlert" class="alert alert-danger alert-dismissible fade show" role="alert">
                        {{ session('error') }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                @endif
                 @if(session('info'))
                    <div id="sessionInfoAlert" class="alert alert-info alert-dismissible fade show" role="alert">
                        {{ session('info') }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                @endif

                @yield('content')
            </main>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() { 
            $("#menu-toggle").click(function(e) {
                e.preventDefault();
                $("#wrapper").toggleClass("toggled");
            });

            function adjustSidebar() {
                if (window.innerWidth < 768) {
                    // Sidebar akan disembunyikan oleh CSS default jika tidak 'toggled'
                } else {
                     $("#wrapper").removeClass("toggled"); 
                }
            }
            adjustSidebar(); 
            $(window).resize(adjustSidebar); 

            // PERBAIKAN: Script untuk auto-dismiss alert
            function autoDismissAlert(selector, timeout) {
                if ($(selector).length) {
                    setTimeout(function() {
                        $(selector).fadeTo(500, 0).slideUp(500, function(){
                            $(this).remove(); 
                        });
                    }, timeout);
                }
            }
            
            autoDismissAlert("#sessionSuccessAlert", 3000); // 3 detik untuk pesan sukses
            autoDismissAlert("#sessionInfoAlert", 4000); // 4 detik untuk pesan info
            autoDismissAlert("#sessionErrorAlert", 7000); // 7 detik untuk pesan error
        });
    </script>
    @stack('scripts')
</body>
</html>

resources\views\admin\patroli\index.blade.php
{{-- File: resources/views/admin/patroli/index.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Histori Patroli Karyawan')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
    .action-buttons .btn {
        margin-right: 0.25rem;
    }
    /* PERBAIKAN: CSS untuk mengatur ulang layout paginasi */
    .pagination-container nav > div {
        display: flex;
        flex-direction: column-reverse; /* Membalik urutan: link di atas, teks di bawah */
        align-items: center;
        gap: 0.5rem; /* Memberi jarak antara link dan teks */
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Histori Patroli Karyawan</h1>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Patroli</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.patroli.index') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="nik_karyawan" class="form-label mb-1 small">Username Karyawan:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Masukkan Username">
                    </div>
                    <div class="col-md-3">
                        <label for="nama_karyawan" class="form-label mb-1 small">Nama Karyawan:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_mulai" class="form-label mb-1 small">Tgl Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_akhir" class="form-label mb-1 small">Tgl Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-1">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                    <div class="col-md-1">
                        <a href="{{ route('admin.patroli.index') }}" class="btn btn-secondary btn-sm w-100" title="Reset Filter"><i class="bi bi-arrow-clockwise"></i></a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Patroli</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePatroli" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Karyawan (Username)</th>
                            <th>Waktu Mulai</th>
                            <th>Waktu Selesai</th>
                            <th>Durasi</th>
                            <th>Jarak (km)</th>
                            <th>Status</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($patrols as $index => $patrol)
                        <tr>
                            <td class="text-center">{{ $patrols->firstItem() + $index }}</td>
                            <td>
                                {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }}
                                <small class="d-block text-muted">({{ $patrol->karyawan_nik }})</small>
                            </td>
                            <td class="text-center">{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('D MMM YY, HH:mm') }}</td>
                            <td class="text-center">{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('D MMM YY, HH:mm') : '-' }}</td>
                            <td class="text-center">
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d:%02d:%02d', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                            <td class="text-center">{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }}</td>
                            <td class="text-center">
                                <span class="badge bg-{{ $patrol->status == 'selesai' ? 'success' : ($patrol->status == 'dibatalkan' ? 'danger' : 'secondary') }} text-capitalize">
                                    {{ $patrol->status }}
                                </span>
                            </td>
                            <td class="text-center action-buttons">
                                <a href="{{ route('admin.patroli.show', $patrol->_id) }}" class="btn btn-info btn-sm py-0 px-1" title="Lihat Detail">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                                <button type="button" class="btn btn-danger btn-sm py-0 px-1" data-bs-toggle="modal" data-bs-target="#deletePatrolModal{{ $patrol->_id }}" title="Hapus">
                                    <i class="bi bi-trash-fill"></i>
                                </button>

                                <div class="modal fade" id="deletePatrolModal{{ $patrol->_id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ $patrol->_id }}" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="deleteModalLabel{{ $patrol->_id }}">Konfirmasi Hapus Patroli</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <div class="modal-body">
                                                Apakah Anda yakin ingin menghapus data patroli ini?
                                                <br><small>Karyawan: {{ $patrol->karyawan->nama_lengkap ?? $patrol->karyawan_nik }}</small>
                                                <br><small>Mulai: {{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('D MMM YY, HH:mm') }}</small>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Batal</button>
                                                <form action="{{ route('admin.patroli.destroy', $patrol->_id) }}" method="POST" style="display: inline;">
                                                    @csrf
                                                    @method('DELETE')
                                                    <button type="submit" class="btn btn-danger btn-sm">Hapus</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data patroli yang ditemukan.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            
            {{-- PERBAIKAN TAMPILAN PAGINASI --}}
            @if ($patrols->hasPages())
            <div class="pagination-container mt-3">
                {{ $patrols->appends(request()->query())->links() }}
            </div>
            @endif
            {{-- AKHIR PERBAIKAN --}}

        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\admin\patroli\monitoring.blade.php
{{-- File: resources/views/admin/patroli/monitoring.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Monitoring Patroli Real-Time')

@push('styles')
{{-- Leaflet CSS --}}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
<style>
    #map-monitoring {
        height: 78vh; /* Tinggi peta disesuaikan */
        border-radius: .375rem;
        border: 1px solid #e3e6f0;
    }
    .active-patrol-list {
        height: 70vh; /* Tinggi daftar disesuaikan */
        overflow-y: auto;
    }
    .active-patrol-list .list-group-item {
        cursor: pointer;
        transition: background-color 0.2s ease-in-out, border-left-color 0.2s ease-in-out;
    }
    .active-patrol-list .list-group-item:hover {
        background-color: #f8f9fa;
    }
    .active-patrol-list .list-group-item.active {
        background-color: #eaf2ff; /* Warna highlight biru lebih muda */
        border-left: 4px solid #4e73df;
        font-weight: 500;
    }
    /* Style untuk status jeda */
    .active-patrol-list .list-group-item.status-jeda {
        background-color: #fff9e6; /* Latar belakang kuning muda */
        border-left: 4px solid #ffc107; /* Border kuning */
    }
    .active-patrol-list .list-group-item.status-jeda:hover {
        background-color: #fff3cd;
    }
    .officer-avatar {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0 0 5px rgba(0,0,0,0.2);
    }
    .leaflet-marker-icon.officer-avatar {
        border-radius: 50%;
        border: 2px solid #4e73df; /* Default border biru */
    }
    /* Style border marker untuk status jeda */
    .leaflet-marker-icon.officer-avatar.status-jeda {
        border-color: #ffc107; /* Border kuning */
    }
    .btn-show-all {
        width: 100%;
        margin-bottom: 10px;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Monitoring Patroli Real-Time</h1>
        <div class="d-flex align-items-center">
            <div class="spinner-grow spinner-grow-sm text-danger me-2" role="status" id="live-indicator">
                <span class="visually-hidden">LIVE</span>
            </div>
            <span class="fw-bold text-danger">LIVE</span>
        </div>
    </div>

    <div class="row">
        <!-- Kolom Daftar Petugas Aktif -->
        <div class="col-lg-3 mb-4">
            <div class="card shadow h-100">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Petugas Berpatroli</h6>
                </div>
                <div class="card-body p-2">
                    <button class="btn btn-sm btn-outline-secondary btn-show-all" id="show-all-btn">
                        <i class="bi bi-arrows-fullscreen"></i> Tampilkan Semua
                    </button>
                    <div class="list-group list-group-flush active-patrol-list" id="active-officers-list">
                        <div id="loading-officers" class="text-center p-3">
                            <div class="spinner-border spinner-border-sm" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="text-muted small mt-2 mb-0">Memuat data...</p>
                        </div>
                        <p id="no-active-patrols" class="text-center text-muted p-3" style="display: none;">Tidak ada petugas yang sedang patroli.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Kolom Peta -->
        <div class="col-lg-9 mb-4">
            <div class="card shadow h-100">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary" id="map-title">Peta Lokasi Petugas</h6>
                </div>
                <div class="card-body p-0">
                    <div id="map-monitoring"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
{{-- Leaflet JS --}}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
    // --- PERBAIKAN: Mengatur level zoom ke 15 ---
    const map = L.map('map-monitoring').setView([-7.05165831256373, 110.44084456583003], 15); // Set view ke Undip dengan zoom 15
    // --- AKHIR PERBAIKAN ---

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    let officerMarkers = {};
    let officerPolylines = {};
    let focusedOfficerNik = null;
    let isFirstLoad = true;
    const POLLING_INTERVAL = 7000;

    const mapTitle = document.getElementById('map-title');
    const showAllBtn = document.getElementById('show-all-btn');
    const loadingOfficersEl = document.getElementById('loading-officers');

    function createPopupContent(officer) {
        return `
            <div class="text-center">
                <strong>${officer.nama_lengkap}</strong><br>
                <small>Username: ${officer.nik}</small><br>
                <small>Mulai: ${officer.start_time}</small><br>
                <small>Update: ${officer.last_update}</small><br>
                <span class="badge bg-${officer.status === 'jeda' ? 'warning text-dark' : 'success'}">${officer.status}</span>
            </div>
        `;
    }

    function updateOfficerMarker(officer) {
        const latLng = [officer.latitude, officer.longitude];
        const iconClass = `leaflet-marker-icon officer-avatar ${officer.status === 'jeda' ? 'status-jeda' : ''}`;
        const customIcon = L.icon({
            iconUrl: officer.foto_url,
            iconSize: [38, 38],
            iconAnchor: [19, 38],
            popupAnchor: [0, -38],
            className: iconClass
        });

        if (officerMarkers[officer.nik]) {
            officerMarkers[officer.nik].setLatLng(latLng);
            officerMarkers[officer.nik].setIcon(customIcon);
            officerMarkers[officer.nik].getPopup().setContent(createPopupContent(officer));
        } else {
            officerMarkers[officer.nik] = L.marker(latLng, { icon: customIcon })
                .addTo(map)
                .bindPopup(createPopupContent(officer));
        }

        if (officer.status === 'aktif') {
            if (officerPolylines[officer.nik]) {
                officerPolylines[officer.nik].addLatLng(latLng);
            } else {
                officerPolylines[officer.nik] = L.polyline([latLng], { color: 'blue' }).addTo(map);
            }
        }

        if (focusedOfficerNik === officer.nik) {
            map.panTo(latLng);
        }
    }

    function updateOfficerList(officers) {
        const listContainer = document.getElementById('active-officers-list');
        const noActivePatrolsEl = document.getElementById('no-active-patrols');
        
        listContainer.innerHTML = '';

        if (officers.length === 0) {
            listContainer.appendChild(noActivePatrolsEl);
            noActivePatrolsEl.style.display = 'block';
            loadingOfficersEl.style.display = 'none';
            return;
        }
        
        loadingOfficersEl.style.display = 'none';
        noActivePatrolsEl.style.display = 'none';

        officers.forEach(officer => {
            const listItem = document.createElement('a');
            listItem.href = '#';
            listItem.className = 'list-group-item list-group-item-action d-flex align-items-center';
            listItem.dataset.nik = officer.nik;
            
            if (officer.status === 'jeda') {
                listItem.classList.add('status-jeda');
            }
            
            if (officer.nik === focusedOfficerNik) {
                listItem.classList.add('active');
            }

            listItem.innerHTML = `
                <img src="${officer.foto_url}" alt="${officer.nama_lengkap}" class="officer-avatar me-3">
                <div>
                    <div class="fw-bold">${officer.nama_lengkap}</div>
                    <small class="text-muted">Username: ${officer.nik}</small>
                    ${officer.status === 'jeda' ? '<div class="mt-1"><span class="badge bg-warning text-dark">Jeda</span></div>' : ''}
                </div>
            `;

            listItem.addEventListener('click', function(e) {
                e.preventDefault();
                focusedOfficerNik = this.dataset.nik;
                const marker = officerMarkers[focusedOfficerNik];
                if (marker) {
                    map.flyTo(marker.getLatLng(), 17);
                    marker.openPopup();
                    mapTitle.textContent = `Memantau: ${officer.nama_lengkap}`;
                }
                document.querySelectorAll('.active-patrol-list .list-group-item').forEach(item => item.classList.remove('active'));
                this.classList.add('active');
            });

            listContainer.appendChild(listItem);
        });
    }

    showAllBtn.addEventListener('click', function() {
        focusedOfficerNik = null;
        mapTitle.textContent = 'Peta Lokasi Petugas';
        document.querySelectorAll('.active-patrol-list .list-group-item').forEach(item => item.classList.remove('active'));
        
        if (Object.keys(officerMarkers).length > 0) {
            const group = new L.featureGroup(Object.values(officerMarkers));
            map.fitBounds(group.getBounds().pad(0.5));
        } else {
            map.setView([-7.05165831256373, 110.44084456583003], 15);
        }
    });

    async function fetchAndUpdatePatrolData() {
        try {
            let liveDataUrl = '';
            @if(request()->is('komandan/*'))
                liveDataUrl = '{{ route("komandan.patroli.live_data") }}';
            @elseif(request()->is('ketua-departemen/*'))
                liveDataUrl = '{{ route("ketua-departemen.patroli.live_data") }}';
            @endif

            if (!liveDataUrl) {
                console.error("Tidak dapat menentukan URL data patroli.");
                loadingOfficersEl.style.display = 'none';
                document.getElementById('no-active-patrols').textContent = 'Kesalahan konfigurasi halaman.';
                document.getElementById('no-active-patrols').style.display = 'block';
                return;
            }
            
            const urlWithCacheBuster = `${liveDataUrl}?_=${new Date().getTime()}`;
            const response = await fetch(urlWithCacheBuster);

            if (!response.ok) throw new Error(`Gagal mengambil data patroli: ${response.statusText}`);
            
            const activeOfficers = await response.json();
            
            const activeNiks = activeOfficers.map(o => o.nik);
            for (const nik in officerMarkers) {
                if (!activeNiks.includes(nik)) {
                    map.removeLayer(officerMarkers[nik]);
                    delete officerMarkers[nik];
                    if (officerPolylines[nik]) {
                        map.removeLayer(officerPolylines[nik]);
                        delete officerPolylines[nik];
                    }
                }
            }

            activeOfficers.forEach(officer => {
                updateOfficerMarker(officer);
            });

            updateOfficerList(activeOfficers);
            
            if (isFirstLoad && activeOfficers.length > 0) {
                const group = new L.featureGroup(Object.values(officerMarkers));
                map.fitBounds(group.getBounds().pad(0.5));
                isFirstLoad = false;
            }

        } catch (error) {
            console.error('Error fetching patrol data:', error);
            const listContainer = document.getElementById('active-officers-list');
            if (listContainer.children.length === 0 || listContainer.querySelector('#loading-officers')) {
                 listContainer.innerHTML = `<p class="text-center text-danger p-3 small">Gagal memuat data. Mencoba lagi...</p>`;
            }
        }
    }

    fetchAndUpdatePatrolData();
    setInterval(fetchAndUpdatePatrolData, POLLING_INTERVAL);
});
</script>
@endpush


resources\views\admin\patroli\show.blade.php
{{-- File: resources/views/admin/patroli/show.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Detail Patroli Karyawan')

@push('styles')
{{-- Leaflet CSS --}}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
<style>
    #mapAdminDetail {
        width: 100%;
        height: 450px;
        border-radius: .375rem;
        border: 1px solid #e3e6f0;
    }
    .info-table th {
        width: 30%;
        font-weight: 500;
        background-color: #f8f9fc;
    }
    .info-table td, .info-table th {
        padding: .6rem .75rem;
        font-size: 0.9rem;
    }
    .face-verification-section {
        background-color: #f8f9fc;
        border-radius: .375rem;
        padding: 1rem;
        margin-top: 1rem;
    }
    .face-verification-image {
        max-width: 200px;
        max-height: 200px;
        border-radius: .375rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Patroli Karyawan</h1>
        <a href="{{ route('admin.patroli.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Histori Patroli
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Patroli oleh: {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }} ({{ $patrol->karyawan_nik }})
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-lg-5 mb-4 mb-lg-0">
                    <h5 class="mb-3">Informasi Patroli</h5>
                    <table class="table table-bordered table-sm info-table">
                        <tr>
                            <th>ID Patroli</th>
                            <td>{{ $patrol->_id }}</td>
                        </tr>
                        <tr>
                            <th>Waktu Mulai</th>
                            <td>{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</td>
                        </tr>
                        <tr>
                            <th>Waktu Selesai</th>
                            <td>{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') : '-' }}</td>
                        </tr>
                        <tr>
                            <th>Durasi</th>
                            <td>
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d jam %02d menit %02d detik', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                        </tr>
                        <tr>
                            <th>Jarak Tempuh</th>
                            <td>{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }} km</td>
                        </tr>
                        <tr>
                            <th>Status</th>
                            <td>
                                <span class="badge bg-{{ $patrol->status == 'selesai' ? 'success' : ($patrol->status == 'dibatalkan' ? 'danger' : 'secondary') }} text-capitalize">
                                    {{ $patrol->status }}
                                </span>
                            </td>
                        </tr>
                        {{-- NEW: Face verification status --}}
                        <tr>
                            <th>Verifikasi Wajah</th>
                            <td>
                                @if($patrol->face_verified ?? false)
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i>Terverifikasi
                                    </span>
                                    @if($patrol->face_verification_time)
                                        <br><small class="text-muted">
                                            {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('D MMM YYYY HH:mm') }}
                                        </small>
                                    @endif
                                @else
                                    <span class="badge bg-warning">
                                        <i class="bi bi-exclamation-triangle me-1"></i>Tidak Terverifikasi
                                    </span>
                                @endif
                            </td>
                        </tr>
                    </table>

                    {{-- NEW: Face verification section --}}
                    @if($patrol->face_verified && $patrol->face_verification_image)
                    <div class="face-verification-section">
                        <h6 class="mb-3">
                            <i class="bi bi-person-check me-2"></i>Foto Verifikasi Wajah
                        </h6>
                        <div class="text-center">
                            <img src="{{ asset('storage/' . $patrol->face_verification_image) }}" 
                                 alt="Foto Verifikasi Wajah" 
                                 class="face-verification-image"
                                 onclick="showImageModal(this.src)">
                            @if($patrol->face_verification_time)
                            <p class="text-muted mt-2 mb-0">
                                <small>Diverifikasi pada: {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</small>
                            </p>
                            @endif
                        </div>
                    </div>
                    @endif
                </div>
                <div class="col-lg-7">
                    <h5 class="mb-3">Jejak Patroli</h5>
                    <div id="mapAdminDetail"></div>
                </div>
            </div>
        </div>
    </div>
</div>

{{-- Modal for viewing face verification image --}}
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Foto Verifikasi Wajah</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Foto Verifikasi" class="img-fluid">
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
{{-- Leaflet JS --}}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pathData = @json($pathForMap ?? []);
        const officeLocation = @json($officeLocation ?? null);
        const officeRadius = @json($officeRadius ?? null);
        const officeLat = officeLocation ? officeLocation.coordinates[1] : null;
        const officeLng = officeLocation ? officeLocation.coordinates[0] : null;

        const mapContainer = document.getElementById('mapAdminDetail');
        if (!mapContainer) return;

        // Tentukan titik tengah peta. Prioritaskan lokasi kantor.
        let centerLat, centerLng;
        if (officeLat && officeLng) {
            centerLat = officeLat;
            centerLng = officeLng;
        } else if (pathData && pathData.length > 0) {
            centerLat = pathData[Math.floor(pathData.length / 2)][0];
            centerLng = pathData[Math.floor(pathData.length / 2)][1];
        } else {
            centerLat = -6.9927; // Default Semarang
            centerLng = 110.4204;
        }

        const mapAdminDetail = L.map('mapAdminDetail').setView([centerLat, centerLng], 15);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(mapAdminDetail);

        let bounds = L.latLngBounds();

        // Gambar jejak patroli jika ada
        if (pathData && pathData.length > 0) {
            const patrolPolylineDetail = L.polyline(pathData, { color: '#007bff', weight: 5 }).addTo(mapAdminDetail);
            bounds.extend(patrolPolylineDetail.getBounds());

            // Marker Mulai
            L.marker(pathData[0], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapAdminDetail).bindPopup('Mulai Patroli');
            
            // Marker Selesai (jika ada lebih dari 1 titik)
            if (pathData.length > 1) {
                L.marker(pathData[pathData.length - 1], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapAdminDetail).bindPopup('Selesai Patroli');
            }
        }

        // Gambar lokasi kerja dan radius jika ada
        if (officeLat && officeLng && officeRadius) {
            const officeCircle = L.circle([officeLat, officeLng], {
                color: '#dc3545',
                fillColor: '#dc3545',
                fillOpacity: 0.2,
                radius: officeRadius
            }).addTo(mapAdminDetail).bindPopup('Radius Lokasi Kerja');
            bounds.extend(officeCircle.getBounds());
        }

        // Sesuaikan zoom peta jika ada objek yang digambar
        if (bounds.isValid()) {
            mapAdminDetail.fitBounds(bounds.pad(0.2)); // Beri sedikit padding
        } else if (!pathData || pathData.length === 0) {
            // Jika tidak ada data sama sekali
            mapContainer.innerHTML = '<div class="d-flex justify-content-center align-items-center h-100"><p class="text-muted p-5">Tidak ada data jejak atau lokasi kerja untuk ditampilkan.</p></div>';
        }
    });

    // Function to show image in modal
    function showImageModal(imageSrc) {
        document.getElementById('modalImage').src = imageSrc;
        const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
        imageModal.show();
    }
</script>
@endpush

resources\views\admin\presensi\detail_karyawan.blade.php
{{-- File: resources/views/admin/presensi/detail_karyawan.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Detail Presensi Karyawan: ' . $karyawan->nama_lengkap)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .form-control-sm, .form-select-sm {
        font-size: 0.875rem;
    }
    .profile-header {
        background-color: #f8f9fc;
        padding: 1.5rem;
        border-radius: .5rem;
        margin-bottom: 1.5rem;
        border: 1px solid #e3e6f0;
    }
    .profile-header img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border: 3px solid #fff;
        box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
    }
    .profile-header h4 {
        margin-bottom: 0.25rem;
        font-weight: 600;
    }
    .profile-header p {
        margin-bottom: 0;
        font-size: 0.9rem;
        color: #5a5c69;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Presensi Karyawan</h1>
        <a href="{{ route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi
        </a>
    </div>

    <div class="profile-header">
        <div class="d-flex align-items-center">
            <img src="{{ $karyawan->foto ? asset('storage/' . $karyawan->foto) : asset('assets/img/sample/avatar/avatar1.jpg') }}" 
                 alt="Foto {{ $karyawan->nama_lengkap }}" class="rounded-circle me-3"
                 onerror="this.onerror=null;this.src='{{ asset('assets/img/sample/avatar/avatar1.jpg') }}';">
            <div>
                <h4>{{ $karyawan->nama_lengkap }}</h4>
                <p class="mb-0">Username: {{ $karyawan->nik }}</p>
                <p>Jabatan: {{ $karyawan->jabatan }}</p>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.presensi.detail_karyawan', $karyawan->nik) }}">
                <div class="row align-items-end gx-2">
                    <div class="col-md-4 mb-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Histori Presensi - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTableDetailPresensi" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Hari</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($historiPresensi as $index => $data)
                        @php
                            $tanggalCarbon = \Carbon\Carbon::parse($data->tgl_presensi);
                        @endphp
                        <tr> 
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('D MMM YY') }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('dddd') }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_in == 'admin' ? 'Admin' : ($data->lokasi_in ?? '-') }}</small></td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                {{-- PERBAIKAN: Menambahkan logika untuk menampilkan "Admin" --}}
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_out == 'admin' ? 'Admin' : ($data->lokasi_out ?? '-') }}</small></td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center">Tidak ada data presensi untuk periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush


resources\views\admin\presensi\harian.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Presensi Harian')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .form-control-sm, .form-select-sm {
        font-size: 0.875rem;
    }
    /* Menghapus highlight untuk keterlambatan jika tidak diperlukan lagi */
    /* .table-warning td {
        background-color: #fff3cd !important; 
    } */
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Presensi Harian</h1>
        <a href="{{ route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi Bulanan
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Pilih Tanggal Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.presensi.harian') }}">
                <div class="row align-items-end">
                    <div class="col-md-4 mb-3">
                        <label for="tanggal" class="form-label mb-1 small">Tanggal:</label>
                        <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $tanggal ?? date('Y-m-d') }}" required>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi Tanggal: {{ \Carbon\Carbon::parse($tanggal ?? date('Y-m-d'))->isoFormat('dddd, D MMMM YYYY') }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePresensiHarian" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Karyawan</th>
                            <th>Jabatan</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>

                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiHarian as $index => $data)
                        {{-- Menghapus class 'table-warning' untuk keterlambatan --}}
                        <tr>
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                    <a href="{{ route('admin.karyawan.show', $data->karyawan->_id) }}" target="_blank">
                                        {{ $data->karyawan->nama_lengkap }}
                                    </a>
                                @else
                                    N/A
                                @endif
                            </td>
                            <td>{{ $data->karyawan->jabatan ?? 'N/A' }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_in ?? '-' }}</small></td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_out ?? '-' }}</small></td>

                        </tr>
                        @empty
                        <tr>
                            <td colspan="11" class="text-center">Tidak ada data presensi untuk tanggal ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Inisialisasi tooltip Bootstrap jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\admin\presensi\rekapitulasi.blade.php
{{-- File: resources/views/admin/presensi/rekapitulasi.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Rekapitulasi Presensi')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
    .action-buttons .btn, .action-buttons .dropdown-item {
        font-size: 0.75rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Rekapitulasi Presensi</h1>
    <p class="mb-4">Menampilkan data presensi karyawan berdasarkan filter yang dipilih.</p>

    {{-- Card Filter --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.presensi.rekapitulasi') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulanIni == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahunIni == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="nik" class="form-label mb-1 small">Username Karyawan:</label>
                        <input type="text" name="nik" id="nik" class="form-control form-control-sm" value="{{ $searchNik ?? '' }}" placeholder="Masukkan Username">
                    </div>
                     <div class="col-md-3">
                        <label for="nama" class="form-label mb-1 small">Nama Karyawan:</label>
                        <input type="text" name="nama" id="nama" class="form-control form-control-sm" value="{{ $searchNama ?? '' }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                </div>
                 <div class="mt-3">
                    <a href="{{ route('admin.presensi.harian', ['tanggal' => date('Y-m-d')]) }}" class="btn btn-info btn-sm">
                        <i class="bi bi-calendar-day"></i> Laporan Harian Ini
                    </a>
                </div>
            </form>
        </div>
    </div>

    {{-- Card Data Presensi --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi ({{ $namaBulan[(int)$bulanIni] }} {{ $tahunIni }})</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePresensi" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Username</th>
                            <th>Nama</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiData as $index => $data)
                        <tr> 
                            <td class="text-center">{{ $presensiData->firstItem() + $index }}</td>
                            <td>{{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('dddd, D MMM YY') }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                <a href="{{ route('admin.presensi.detail_karyawan', $data->karyawan->nik) }}?bulan={{$bulanIni}}&tahun={{$tahunIni}}">
                                    {{ $data->karyawan->nama_lengkap }}
                                </a>
                                @else
                                    {{ 'N/A' }}
                                @endif
                            </td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                {{-- PERBAIKAN: Menampilkan "Admin" jika foto_out berisi 'admin' --}}
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td class="text-center action-buttons">
                                <div class="dropdown">
                                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton-{{ $data->_id }}" data-bs-toggle="dropdown" aria-expanded="false">
                                        Aksi
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-{{ $data->_id }}">
                                        <li><a class="dropdown-item" href="{{ route('admin.presensi.edit', $data->_id) }}"><i class="bi bi-pencil-square me-2"></i>Edit</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#resetMasukModal-{{ $data->_id }}"><i class="bi bi-arrow-counterclockwise me-2"></i>Reset Masuk</a></li>
                                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#resetPulangModal-{{ $data->_id }}"><i class="bi bi-box-arrow-left me-2"></i>Reset Pulang</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#deleteModal-{{ $data->_id }}"><i class="bi bi-trash me-2"></i>Hapus</a></li>
                                    </ul>
                                </div>
                            </td>
                        </tr>

                        <!-- Modal Reset Masuk -->
                        <div class="modal fade" id="resetMasukModal-{{ $data->_id }}" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Konfirmasi Reset Presensi Masuk</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Yakin ingin mereset data presensi masuk untuk <strong>{{ $data->karyawan->nama_lengkap ?? $data->nik }}</strong> pada tanggal {{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('D MMM YY') }}?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                                        <form action="{{ route('admin.presensi.reset.masuk', $data->_id) }}" method="POST">
                                            @csrf
                                            <button type="submit" class="btn btn-warning">Ya, Reset</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Modal Reset Pulang -->
                        <div class="modal fade" id="resetPulangModal-{{ $data->_id }}" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Konfirmasi Reset Presensi Pulang</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Yakin ingin mereset data presensi pulang untuk <strong>{{ $data->karyawan->nama_lengkap ?? $data->nik }}</strong> pada tanggal {{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('D MMM YY') }}?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                                        <form action="{{ route('admin.presensi.reset.pulang', $data->_id) }}" method="POST">
                                            @csrf
                                            <button type="submit" class="btn btn-warning">Ya, Reset</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Modal Hapus -->
                        <div class="modal fade" id="deleteModal-{{ $data->_id }}" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title">Konfirmasi Hapus Presensi</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Yakin ingin menghapus data presensi untuk <strong>{{ $data->karyawan->nama_lengkap ?? $data->nik }}</strong> pada tanggal {{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('D MMM YY') }}? Tindakan ini tidak dapat dibatalkan.
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                                        <form action="{{ route('admin.presensi.hapus', $data->_id) }}" method="POST">
                                            @csrf
                                            @method('DELETE')
                                            <button type="submit" class="btn btn-danger">Ya, Hapus</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center">Tidak ada data presensi untuk periode dan filter ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $presensiData->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush


resources\views\auth\login.blade.php
<!doctype html>
<html lang="id">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="{{ asset('assets/img/favicon.ico') }}" type="image/x-icon">
  <link rel="icon" href="{{ asset('assets/img/favicon.png') }}" type="image/png">
  <title>SiAmalin - Login</title>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">

  <style>
    body {
      background: linear-gradient(135deg, #dfe9f3, #ffffff);
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      font-family: 'Poppins', sans-serif;
      overflow: hidden;
    }

    /* BARU: Menambahkan class container untuk pembungkus utama */
    .login-container {
        max-width: 400px;
        width: 100%;
    }

    .card {
      border-radius: 20px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
      padding: 2rem;
      background: #fff;
      animation: fadeIn 1s ease forwards;
      transform: translateY(30px);
      opacity: 0;
      width: 100%;
    }

    .form-image {
      display: block;
      margin: 0 auto 1.5rem;
      max-width: 150px;
      width: 100%;
    }

    .card h1 {
      font-weight: 700;
      color: #0d6efd;
    }

    .btn-primary {
      background: #0d6efd;
      border: none;
      padding: 0.75rem;
      font-weight: 600;
      letter-spacing: 0.5px;
      transition: 0.3s ease;
      border-radius: 10px;
    }

    .btn-primary:hover {
      background: #0b5ed7;
      transform: scale(1.02); /* Sedikit disesuaikan agar lebih halus */
    }

    input.form-control {
      height: 50px;
      border-radius: 10px;
      border: 1px solid #ced4da;
      background-color: #f8f9fa;
      transition: 0.3s;
      padding-right: 2.5rem;
    }

    input.form-control:focus {
      border-color: #0d6efd;
      box-shadow: 0 0 10px rgba(13, 110, 253, 0.3);
    }

    .input-icon {
      position: absolute;
      top: 50%;
      right: 1rem;
      transform: translateY(-50%);
      cursor: pointer;
      color: #6c757d;
      font-size: 1.2rem;
    }

    .input-icon.bi-x-circle {
      font-size: 1.1rem;
    }

    .alert {
      border-radius: 10px;
    }
    
    .footer-link a {
        color: #003972;
        font-weight: 500;
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .footer-link a:hover {
        color: #002b5c;
        text-decoration: underline;
    }

    @keyframes fadeIn {
      0% {
        opacity: 0;
        transform: translateY(30px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }
  </style>
</head>

<body>
  {{-- PERUBAHAN UTAMA ADA DI SINI --}}
  <div class="login-container">
    <div class="card p-4">

      <div class="text-center">
        <img src="{{ asset('assets/img/login/login.jpg') }}" alt="Login Illustration" class="form-image" onerror="this.onerror=null;this.src='https://placehold.co/150x150/EBF4FF/0D6EFD?text=SiAmalin';">
      </div>

      <div class="text-center mb-3">
        <h1 class="text-primary">SiAmalin</h1>
        <h4>Silahkan Login</h4>
      </div>

      <div>
        @if (session('success'))
          <div id="successMessage" class="alert alert-success">
            {{ session('success') }}
          </div>
        @endif

        @if ($errors->any())
          <div class="alert alert-danger">
            <ul class="mb-0">
              @foreach ($errors->all() as $error)
                <li>{{ $error }}</li>
              @endforeach
            </ul>
          </div>
        @endif

        <form action="{{ route('proseslogin') }}" method="POST">
          @csrf

          <div class="mb-3 position-relative">
            <input type="text" name="nik" id="nik" class="form-control" placeholder="Masukkan Username" required value="{{ old('nik') }}">
            <i class="bi bi-x-circle input-icon" onclick="clearField('nik')" style="cursor: pointer; display: none;" id="clearNikIcon"></i>
          </div>

          <div class="mb-3 position-relative">
            <input type="password" name="password" id="password" class="form-control" placeholder="Masukkan Password" required>
            <i id="togglePasswordIcon" class="bi bi-eye-slash input-icon" onclick="togglePassword()" style="cursor: pointer;"></i>
          </div>

          <button type="submit" class="btn btn-primary w-100">Login</button>
        </form>
      </div>

    </div>
  </div>

  <script>
    const nikInput = document.getElementById('nik');
    const clearNikIcon = document.getElementById('clearNikIcon');

    function clearField(id) {
        const field = document.getElementById(id);
        field.value = '';
        field.focus();
        if (id === 'nik') {
            clearNikIcon.style.display = 'none';
        }
    }

    if(nikInput && clearNikIcon){
        nikInput.addEventListener('input', function() {
            clearNikIcon.style.display = this.value.length > 0 ? 'block' : 'none';
        });
        if (nikInput.value.length > 0) {
             clearNikIcon.style.display = 'block';
        }
    }


    function togglePassword() {
      const passwordInput = document.getElementById('password');
      const toggleIcon = document.getElementById('togglePasswordIcon');

      if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        toggleIcon.classList.remove('bi-eye-slash');
        toggleIcon.classList.add('bi-eye');
      } else {
        passwordInput.type = 'password';
        toggleIcon.classList.remove('bi-eye');
        toggleIcon.classList.add('bi-eye-slash');
      }
    }

    if (document.getElementById('successMessage')) {
      setTimeout(function() {
        var successMessage = document.getElementById('successMessage');
        if (successMessage) {
            successMessage.style.transition = 'opacity 0.5s ease';
            successMessage.style.opacity = '0';
            setTimeout(() => successMessage.style.display = 'none', 500);
        }
      }, 3000);
    }
  </script>

</body>
</html>

resources\views\dashboard\dashboard.blade.php
@extends('layouts.presensi')
@section('content')

<style>
    .logout {
        position: absolute;
        color: rgba(255, 255, 255, 0.8);
        font-size: 24px;
        right: 16px;
        top: 16px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.1);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
    }
    .logout:hover {
        color: white;
        transform: scale(1.1);
        background: rgba(255, 255, 255, 0.2);
    }
</style>

<!-- User Section -->
<div class="section" id="user-section" style="padding-bottom: 40px;">
    <a href="/proseslogout" class="logout">
        <ion-icon name="exit-outline"></ion-icon>
    </a>
    <div id="user-detail" class="d-flex align-items-center" style="margin-top: 10px;">
        <div class="avatar" style="margin-left: 20px;">
            @if(!empty(Auth::guard('karyawan')->user()->foto))
                <img src="{{ asset('storage/' . Auth::guard('karyawan')->user()->foto) }}" 
                     alt="avatar" 
                     class="imaged w64 rounded-circle" 
                     style="height:70px; width:70px; object-fit: cover; border: 3px solid rgba(255,255,255,0.2); box-shadow: 0 4px 15px rgba(0,0,0,0.1)">
            @else
                <img src="{{ asset('assets/img/sample/avatar/avatar1.jpg') }}" 
                     alt="avatar" 
                     class="imaged w64 rounded-circle"
                     style="height:70px; width:70px; object-fit: cover; border: 3px solid rgba(255,255,255,0.2); box-shadow: 0 4px 15px rgba(0,0,0,0.1)">
            @endif
        </div>
        <div id="user-info" class="ms-0 flex-grow-1">
            <h2 id="user-name" style="margin-bottom: 5px; font-weight: 600; color: white; text-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                {{ Auth::guard('karyawan')->user()->nama_lengkap }}
            </h2>
            <span id="user-role" style="color: rgba(255,255,255,0.8); font-size: 14px; display: inline-block; background: rgba(0,0,0,0.15); padding: 3px 10px; border-radius: 20px;">
                {{ Auth::guard('karyawan')->user()->jabatan }}
            </span>
        </div>
    </div>
</div>

<!-- Menu Section -->
<div class="section" id="menu-section" style="margin-top: 0px;">
    <div class="card" style="border-radius: 20px; overflow: hidden; box-shadow: 0 10px 30px rgba(0,0,0,0.08); border: none;">
        <div class="card-body" style="padding: 15px;">
            <div class="list-menu d-flex justify-content-around">
                <div class="item-menu text-center">
                    <div class="menu-icon">
                        <a href="/profile" class="bg-gradient-primary" style="width: 50px; height: 50px; display: inline-flex; align-items: center; justify-content: center; border-radius: 15px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);">
                            <ion-icon name="person-circle-outline" style="font-size: 28px; color: white;"></ion-icon>
                        </a>
                    </div>
                    <div class="menu-name mt-2">
                        <span style="font-size: 12px; font-weight: 500; color: #6c757d;">Profil</span>
                    </div>
                </div>
                <div class="item-menu text-center">
                    <div class="menu-icon">
                        <a href="/presensi/histori" class="bg-gradient-warning" style="width: 50px; height: 50px; display: inline-flex; align-items: center; justify-content: center; border-radius: 15px; background: linear-gradient(135deg, #f6d365 0%, #fda085 100%); box-shadow: 0 4px 15px rgba(246, 211, 101, 0.3);">
                            <ion-icon name="time-outline" style="font-size: 28px; color: white;"></ion-icon>
                        </a>
                    </div>
                    <div class="menu-name mt-2">
                        <span style="font-size: 12px; font-weight: 500; color: #6c757d;">Histori</span>
                    </div>
                </div>
                <div class="item-menu text-center">
                    <div class="menu-icon">
                        <a href="/laporan" class="bg-gradient-danger" style="width: 50px; height: 50px; display: inline-flex; align-items: center; justify-content: center; border-radius: 15px; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); box-shadow: 0 4px 15px rgba(245, 87, 108, 0.3);">
                            <ion-icon name="document-text-outline" style="font-size: 28px; color: white;"></ion-icon>
                        </a>
                    </div>
                    <div class="menu-name mt-2">
                        <span style="font-size: 12px; font-weight: 500; color: #6c757d;">Laporan</span>
                    </div>
                </div>
                <div class="item-menu text-center">
                    <div class="menu-icon">
                        <a href="{{ route('patroli.index') }}" class="bg-gradient-info" style="width: 50px; height: 50px; display: inline-flex; align-items: center; justify-content: center; border-radius: 15px; background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); box-shadow: 0 4px 15px rgba(79, 172, 254, 0.3);">
                            <ion-icon name="walk-outline" style="font-size: 28px; color: white;"></ion-icon>
                        </a>
                    </div>
                    <div class="menu-name mt-2">
                        <span style="font-size: 12px; font-weight: 500; color: #6c757d;">Patroli</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Presence Section -->
<div class="section mt-2" id="presence-section">
    <div class="todaypresence">
        <div class="row justify-content-center" style="margin-left: 0; margin-right: 0;">
            <div class="col-5" style="padding-left: 0px; padding-right: 0px;">
                <div class="card gradasigreen" style="border-radius: 15px; overflow: hidden; border: none; box-shadow: 0 6px 15px rgba(28, 200, 138, 0.2);">
                    <div class="card-body" style="padding: 15px;">
                        <div class="presencecontent d-flex align-items-center">
                            <div class="iconpresence mr-3" style="background: rgba(255,255,255,0.2); width: 45px; height: 45px; border-radius: 12px; display: flex; align-items: center; justify-content: center;">
                                <ion-icon name="enter-outline" style="font-size: 24px; color: white;"></ion-icon>
                            </div>
                            <div class="presencedetail">
                                <h4 class="presencetitle mb-1" style="font-size: 14px; color: rgba(255,255,255,0.8);">Masuk</h4>
                                <span style="font-size: 18px; font-weight: 600; color: white;">{{ $presensihariini?->jam_in ?? '--:--' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-5" style="padding-left: 0px; padding-right: 0px;">
                <div class="card gradasired" style="border-radius: 15px; overflow: hidden; border: none; box-shadow: 0 6px 15px rgba(231, 74, 59, 0.2);">
                    <div class="card-body" style="padding: 15px;">
                        <div class="presencecontent d-flex align-items-center">
                            <div class="iconpresence mr-3" style="background: rgba(255,255,255,0.2); width: 45px; height: 45px; border-radius: 12px; display: flex; align-items: center; justify-content: center;">
                                <ion-icon name="exit-outline" style="font-size: 24px; color: white;"></ion-icon>
                            </div>
                            <div class="presencedetail">
                                <h4 class="presencetitle mb-1" style="font-size: 14px; color: rgba(255,255,255,0.8);">Pulang</h4>
                                <span style="font-size: 18px; font-weight: 600; color: white;">{{ ($presensihariini?->jam_out && $presensihariini?->jam_out != '00:00:00') ? $presensihariini->jam_out : '--:--' }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Absen Button -->
    <div class="row mt-3">
        <div class="col-12">
            @if ($presensihariini == null)
                <a href="/presensi/create" class="btn btn-primary btn-block">
                    <ion-icon name="camera-outline"></ion-icon>
                    ABSEN MASUK
                </a>
            @elseif ($presensihariini->jam_out == null)
                <a href="/presensi/create" class="btn btn-danger btn-block">
                    <ion-icon name="camera-outline"></ion-icon>
                    ABSEN PULANG
                </a>
            @else
                <button class="btn btn-secondary btn-block" disabled>
                    <ion-icon name="checkmark-done-outline"></ion-icon> ABSENSI SELESAI
                </button>
            @endif
        </div>
    </div>

    <!-- Rekap Presensi -->
    <div id="rekappresensi" class="mt-3 mb-2">
        <h3 style="font-weight: 700; position: relative; display: inline-block;">
            <span style="position: relative; z-index: 2;">Rekap Presensi</span>
            <span style="position: absolute; bottom: 5px; left: 0; width: 100%; height: 8px; background: linear-gradient(to right, rgba(78, 115, 223, 0.3), rgba(28, 200, 138, 0.3)); z-index: 1; border-radius: 4px;"></span>
        </h3>
    </div>

    <div class="presencetab mt-2">
        <div class="tab-pane fade show active" id="pilled" role="tabpanel">
            <ul class="nav nav-tabs style1" role="tablist" style="border-bottom: none; position: relative;">
                <li class="nav-item" style="flex: 1; text-align: center;">
                    <a class="nav-link active" data-toggle="tab" href="#home" role="tab" 
                       style="border: none; color: #495057; font-weight: 600; padding: 10px 0; position: relative; overflow: hidden; border-radius: 10px 10px 0 0;">
                        <span style="position: relative; z-index: 2;">Bulan Ini</span>
                        <span class="active-indicator" style="position: absolute; bottom: 0; left: 0; width: 100%; height: 3px; background: linear-gradient(to right, #4e73df, #1cc88a); border-radius: 3px 3px 0 0;"></span>
                    </a>
                </li>
                <li class="nav-item" style="flex: 1; text-align: center;">
                    <a class="nav-link" data-toggle="tab" href="#profile" role="tab" 
                       style="border: none; color: #6c757d; font-weight: 500; padding: 10px 0; position: relative; overflow: hidden; border-radius: 10px 10px 0 0;">
                        <span style="position: relative; z-index: 2;">Hari Ini</span>
                        <span class="hover-indicator" style="position: absolute; bottom: 0; left: 0; width: 0; height: 3px; background: linear-gradient(to right, #4e73df, #1cc88a); transition: width 0.3s ease; border-radius: 3px 3px 0 0;"></span>
                    </a>
                </li>
            </ul>
        </div>

        <div class="tab-content mt-0" style="margin-bottom:100px;">
            <div class="tab-pane fade show active" id="home" role="tabpanel">
                <ul class="listview image-listview" style="border-radius: 15px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">
                    @foreach ($historibulanini as $d)
                        @php
                        $warnaJamIn = ($d->jam_in == null || $d->jam_in == '00:00:00') ? 'bg-warning' : 'bg-success';
                        $warnaJamOut = ($d->jam_out == null || $d->jam_out == '00:00:00') ? 'bg-secondary' : 'bg-primary';
                        @endphp
                        <li style="border-bottom: 1px solid rgba(0,0,0,0.05);">
                            <div class="item" style="padding: 12px 15px;">
                                <div class="icon-box" style="background: rgba(78, 115, 223, 0.1); color: #4e73df; width: 40px; height: 40px; border-radius: 10px; display: flex; align-items: center; justify-content: center; margin-bottom: 15px;">
                                    <ion-icon name="calendar-outline" style="font-size: 20px;"></ion-icon>
                                </div>
                                <div class="in d-flex justify-content-between align-items-center" style="flex: 1; margin-left: 15px; margin-bottom: 12px;">
                                    <div style="font-weight: 500; color: #343a40;">
                                        {{ date("d M Y", strtotime($d->tgl_presensi)) }}
                                        <div class="text-muted" style="font-size: 12px; margin-top: 2px;">
                                            {{ date("l", strtotime($d->tgl_presensi)) }}
                                        </div>
                                    </div>
                                    <div class="text-end">
                                        <div class="badge {{ $warnaJamIn }} mb-1" style="border-radius: 8px; padding: 5px 10px; font-weight: 500; font-size: 12px;">
                                            {{ $d->jam_in == null || $d->jam_in == '00:00:00' ? 'Belum Absen' : $d->jam_in }}
                                        </div>
                                        <div class="badge {{ $warnaJamOut }}" style="border-radius: 8px; padding: 5px 10px; font-weight: 500; font-size: 12px;">
                                            {{ $d->jam_out == null || $d->jam_out == '00:00:00' ? 'Belum Absen' : $d->jam_out }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    @endforeach
                </ul>
            </div>
            <div class="tab-pane fade" id="profile" role="tabpanel">
                <ul class="listview image-listview" style="border-radius: 15px; overflow: hidden; box-shadow: 0 5px 15px rgba(0,0,0,0.05);">
                    @foreach ($leaderboard as $d)
                        @php
                        $warnaJam = (!isset($d['jam_in']) || $d['jam_in'] == null || $d['jam_in'] == '00:00:00') ? 'bg-warning' : 'bg-success';
                        $jamInText = (!isset($d['jam_in']) || $d['jam_in'] == null || $d['jam_in'] == '00:00:00') ? 'Belum Absen' : $d['jam_in'];
                        @endphp
                        <li style="border-bottom: 1px solid rgba(0,0,0,0.05);">
                            <div class="item" style="padding: 12px 15px;">
                                <img src="{{ asset('assets/img/sample/avatar/avatar1.jpg') }}" alt="image" class="image" style="width: 40px; height: 40px; border-radius: 10px; object-fit: cover;">
                                <div class="in" style="flex: 1; margin-left: 15px;">
                                    <div>
                                        <b style="color: #343a40;">{{ $d['nama_lengkap'] ?? '-' }}</b><br>
                                        <small class="text-muted">{{ $d['jabatan'] ?? 'N/A' }}</small>
                                    </div>
                                    <div class="mt-1">
                                        <span class="badge {{ $warnaJam }}" style="border-radius: 8px; padding: 5px 10px; font-weight: 500; font-size: 12px;">
                                            {{ $jamInText }}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </li>
                    @endforeach
                </ul>
            </div>
        </div>
    </div>
</div>

@endsection

@push('myscript')
<script>
$(document).ready(function() {
    // Hover effect for menu items
    $('.list-menu .item-menu').hover(
        function() {
            $(this).find('.menu-icon a').css('transform', 'scale(1.1)');
            $(this).find('.menu-name span').css('color', '#4e73df');
        },
        function() {
            $(this).find('.menu-icon a').css('transform', 'scale(1)');
            $(this).find('.menu-name span').css('color', '#6c757d');
        }
    );

    // Hover effect for nav tabs
    $('.nav-tabs .nav-link').hover(
        function() {
            if (!$(this).hasClass('active')) {
                $(this).find('.hover-indicator').css('width', '100%');
            }
        },
        function() {
            $(this).find('.hover-indicator').css('width', '0');
        }
    );

    // Animation for today's presence cards
    $('.todaypresence .card').each(function(index) {
        $(this).css({
            'opacity': '0',
            'transform': index === 0 ? 'translateX(-20px)' : 'translateX(20px)'
        }).delay(index * 100).animate({
            'opacity': '1',
            'transform': 'translateX(0)'
        }, 300);
    });

    // Animation for list items
    $('.listview li').each(function(index) {
        $(this).css({
            'opacity': '0',
            'transform': 'translateY(10px)'
        }).delay(index * 50).animate({
            'opacity': '1',
            'transform': 'translateY(0)'
        }, 200);
    });
});
</script>
@endpush

resources\views\ketua-departemen\dashboard.blade.php
@extends('admin.layouts.app')

@section('title', 'Dashboard Ketua Departemen')

@push('styles')
<style>
    .info-box .info-box-icon { font-size: 2.5rem; }
    .info-box .info-box-content { text-align: right; }
    .border-left-primary { border-left: .25rem solid #4e73df!important; }
    .border-left-success { border-left: .25rem solid #1cc88a!important; }
    .border-left-info { border-left: .25rem solid #36b9cc!important; }
    .border-left-warning { border-left: .25rem solid #f6c23e!important; }
    .border-left-danger { border-left: .25rem solid #e74a3b!important; } 
    .text-gray-300 { color: #dddfeb!important; }
    .text-gray-800 { color: #5a5c69!important; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard Ketua Departemen</h1>
        <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas ?? 'N/A' }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen ?? 'N/A' }}</span>
        </div>
    </div>

    <p>Selamat datang di panel Ketua Departemen SiAmalin.</p>

    <div class="row">
        {{-- Total Petugas Keamanan --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Petugas Keamanan</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $jumlahPetugas ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-people-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- Hadir Hari Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Hadir Hari Ini (Petugas)</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $hadirHariIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-calendar-check-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        {{-- Laporan Belum Ditinjau --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Laporan Baru (Petugas)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $laporanBelumDitinjau ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-file-earmark-medical-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- Total Laporan Bulan Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Total Laporan Bulan Ini</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $totalLaporanBulanIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-file-earmark-text-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        {{-- Total Patroli Selesai Bulan Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Total Patroli Selesai (Bulan Ini)</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $totalPatroliBulanIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-signpost-split-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-lg-8 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Ringkasan Presensi Petugas Bulan Ini ({{ $departemen }})</h6>
                </div>
                <div class="card-body">
                    @if($rekapPresensiBulanan && ($rekapPresensiBulanan['totalHadir'] ?? 0) > 0)
                    <p>Total Kehadiran Petugas: <strong>{{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}</strong></p>
                    <div style="position: relative; height:300px; width:100%;">
                        <canvas id="presensiKetuaChart"></canvas>
                    </div>
                    @else
                    <p>Belum ada data presensi petugas untuk bulan ini di departemen Anda.</p>
                    @endif
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-4">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Akses Cepat</h6>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.karyawan.index') }}">Data Petugas Keamanan</a></li>
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.presensi.rekapitulasi') }}">Monitoring Presensi</a></li>
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.laporan.index') }}">Laporan Petugas</a></li>
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.patroli.index') }}">Patroli Petugas</a></li>
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.jadwalshift.index') }}">Lihat Jadwal Shift</a></li>
                        <li class="list-group-item"><a href="{{ route('ketua-departemen.laporankinerja.index') }}">Laporan Kinerja Bulanan</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

</div>
@endsection

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    @if(isset($rekapPresensiBulanan) && ($rekapPresensiBulanan['totalHadir'] ?? 0) > 0)
    const ctxKetua = document.getElementById('presensiKetuaChart');
    if (ctxKetua) {
        new Chart(ctxKetua, {
            type: 'bar', 
            data: {
                labels: ['Hadir'],
                datasets: [{
                    label: 'Jumlah Presensi Petugas Bulan Ini',
                    data: [
                        {{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}
                    ],
                    backgroundColor: [
                        'rgba(28, 200, 138, 0.5)'
                    ],
                    borderColor: [
                        'rgba(28, 200, 138, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0 
                        }
                    }
                },
                responsive: true,
                maintainAspectRatio: false 
            }
        });
    }
    @endif
</script>
@endpush

resources\views\ketua-departemen\jadwal_shift\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Jadwal Shift Petugas - ' . $ketua->departemen)

@push('styles')
<style>
    .table-jadwal th, .table-jadwal td {
        vertical-align: middle;
        text-align: center;
        font-size: 0.85rem;
        padding: 0.5rem;
        min-width: 100px;
    }
    .table-jadwal th.nama-karyawan, .table-jadwal td.nama-karyawan {
        text-align: left;
        min-width: 180px;
        background-color: #f8f9fc;
        position: sticky;
        left: 0;
        z-index: 1;
        box-shadow: 2px 0 5px -2px #ccc;
    }
     .table-responsive {
        max-height: 70vh;
    }
    .shift-pagi { background-color: #d1e7dd !important; color: #0f5132 !important; } 
    .shift-malam { background-color: #cfe2ff !important; color: #084298 !important; } 
    .shift-libur { background-color: #f2ababff !important; color: #000000ff !important; } 
    .shift-custom { background-color: #e2e3e5 !important; color: #495057 !important; } 

    .filter-form .form-control-sm, .filter-form .btn-sm {
        font-size: 0.875rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Jadwal Shift Petugas</h1>
        <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $ketua->unit }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $ketua->departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Menampilkan jadwal shift mingguan untuk petugas keamanan di departemen Anda.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Minggu</h6>
        </div>
        <div class="card-body filter-form">
            <form method="GET" action="{{ route('ketua-departemen.jadwalshift.index') }}" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-3">
                    <label for="tanggal" class="form-label mb-1 small">Pilih Tanggal:</label>
                    <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $selectedDate->format('Y-m-d') }}">
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                </div>
                <div class="col-md-3">
                    <a href="{{ route('ketua-departemen.jadwalshift.index', ['tanggal' => $startOfWeek->copy()->subWeek()->format('Y-m-d')]) }}" class="btn btn-outline-secondary btn-sm w-100">
                        <i class="bi bi-chevron-left"></i> Minggu Sebelumnya
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="{{ route('ketua-departemen.jadwalshift.index', ['tanggal' => $startOfWeek->copy()->addWeek()->format('Y-m-d')]) }}" class="btn btn-outline-secondary btn-sm w-100">
                        Minggu Berikutnya <i class="bi bi-chevron-right"></i>
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Jadwal Shift Minggu: {{ $startOfWeek->isoFormat('D MMM YY') }} - {{ $endOfWeek->isoFormat('D MMM YY') }}
            </h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm table-jadwal">
                    <thead class="table-light">
                        <tr>
                            <th class="nama-karyawan">Nama Petugas</th>
                            @foreach ($datesOfWeek as $date)
                                <th class="text-center">
                                    {{ $date->isoFormat('dddd') }}<br>
                                    <small>{{ $date->isoFormat('D MMM') }}</small>
                                </th>
                            @endforeach
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($jadwalMingguan as $nik => $dataJadwal)
                        <tr>
                            <td class="nama-karyawan">
                                {{ $dataJadwal['nama_lengkap'] }}
                                <small class="d-block text-muted">Username: {{ $nik }}</small>
                            </td>
                            @foreach ($datesOfWeek as $tanggal)
                                @php
                                    $shift = $dataJadwal['shifts'][$tanggal->format('Y-m-d')] ?? null;
                                    $shiftClass = '';
                                    $shiftText = 'Kosong';
                                    if ($shift) {
                                        $shiftNamaUpper = strtoupper($shift->shift_nama);
                                        if ($shiftNamaUpper === 'PAGI') $shiftClass = 'shift-pagi';
                                        elseif ($shiftNamaUpper === 'MALAM') $shiftClass = 'shift-malam';
                                        elseif ($shiftNamaUpper === 'LIBUR') $shiftClass = 'shift-libur';
                                        else $shiftClass = 'shift-custom'; 
                                        
                                        $shiftText = $shift->shift_nama;
                                        if ($shift->jam_mulai && $shift->jam_selesai) {
                                            $shiftText .= "<br><small>(" . substr($shift->jam_mulai, 0, 5) . "-" . substr($shift->jam_selesai, 0, 5) . ")</small>";
                                        }
                                    }
                                @endphp
                                <td class="{{ $shiftClass }}">
                                    {!! $shift ? $shiftText : '<span class="text-muted fst-italic">Kosong</span>' !!}
                                </td>
                            @endforeach
                        </tr>
                        @empty
                        <tr>
                            <td colspan="{{ count($datesOfWeek) + 1 }}" class="text-center">
                                Belum ada petugas keamanan di departemen ini.
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection


resources\views\ketua-departemen\karyawan\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Data Petugas - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td { font-size: 0.85rem; padding: 0.5rem; vertical-align: middle; }
    .img-thumbnail-xs { width: 45px; height: 45px; object-fit: cover; border-radius: 0.25rem; }
    .card-header .form-control-sm { max-width: 300px; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Data Petugas Keamanan</h1>
        <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Daftar petugas keamanan yang berada di bawah naungan departemen Anda.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Petugas</h6>
            <form action="{{ route('ketua-departemen.karyawan.index') }}" method="GET" class="d-inline-block">
                <div class="input-group input-group-sm">
                    <input type="text" name="search" class="form-control" placeholder="Cari NIK atau Nama..." value="{{ request('search') }}">
                    <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-search"></i></button>
                    @if(request('search'))
                    <a href="{{ route('ketua-departemen.karyawan.index') }}" class="btn btn-outline-danger" title="Reset Pencarian"><i class="bi bi-x-lg"></i></a>
                    @endif
                </div>
            </form>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Lengkap</th>
                            <th>Jabatan</th>
                            <th>No. HP</th>
                            <th>Foto</th>
                            <th>Status Wajah</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($karyawans as $index => $karyawan)
                        <tr>
                            <td class="text-center">{{ $karyawans->firstItem() + $index }}</td>
                            <td>{{ $karyawan->nik }}</td>
                            <td>{{ $karyawan->nama_lengkap }}</td>
                            <td>{{ $karyawan->jabatan }}</td>
                            <td>{{ $karyawan->no_hp }}</td>
                            <td class="text-center">
                                @if($karyawan->foto)
                                    <img src="{{ asset('storage/' . $karyawan->foto) }}" alt="Foto {{ $karyawan->nama_lengkap }}" class="img-thumbnail-xs">
                                @else
                                    <span class="text-muted">N/A</span>
                                @endif
                            </td>
                            <td class="text-center">
                                @if($karyawan->face_embedding)
                                    <span class="badge bg-success">Terdaftar</span>
                                @else
                                    <span class="badge bg-warning text-dark">Belum</span>
                                @endif
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="7" class="text-center">Belum ada data petugas keamanan di departemen ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $karyawans->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\ketua-departemen\laporan\index.blade.php
{{--resources\views\ketua-departemen\laporan\index.blade.php--}}

@extends('admin.layouts.app')

@section('title', 'Laporan Petugas - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem; /* Slightly increase padding for readability */
        vertical-align: middle; /* Center content vertically */
    }
    .table td {
        line-height: 1.4; /* Improve line spacing */
    }
    .form-select-sm, .form-control-sm { 
        font-size: 0.875rem; 
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Petugas Keamanan</h1>
         <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Menampilkan laporan yang dikirim oleh petugas di departemen Anda.</p>

    {{-- Card Filter --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.laporan.index') }}">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_mulai" class="form-label">Tanggal Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_akhir" class="form-label">Tanggal Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="nik_karyawan" class="form-label">Username Petugas:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Username">
                    </div>
                     <div class="col-md-3 mb-3">
                        <label for="nama_karyawan" class="form-label">Nama Petugas:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Nama">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="jenis_laporan" class="form-label">Jenis Laporan:</label>
                        <select name="jenis_laporan" id="jenis_laporan" class="form-select form-select-sm">
                            <option value="">Semua Jenis</option>
                            <option value="harian" {{ request('jenis_laporan') == 'harian' ? 'selected' : '' }}>Harian</option>
                            <option value="kegiatan" {{ request('jenis_laporan') == 'kegiatan' ? 'selected' : '' }}>Kegiatan</option>
                            <option value="masalah" {{ request('jenis_laporan') == 'masalah' ? 'selected' : '' }}>Masalah</option>
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="status_laporan" class="form-label">Status Laporan:</label>
                        <select name="status_laporan" id="status_laporan" class="form-select form-select-sm">
                            <option value="">Semua Status</option>
                            <option value="belum_ditinjau" {{ request('status_laporan') == 'belum_ditinjau' ? 'selected' : '' }}>Belum Ditinjau</option>
                            <option value="Diterima" {{ request('status_laporan') == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                            <option value="Ditolak" {{ request('status_laporan') == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                            <option value="Perlu Revisi" {{ request('status_laporan') == 'Perlu Revisi' ? 'selected' : '' }}>Perlu Revisi</option>
                        </select>
                    </div>
                    <div class="col-md-3 align-self-end mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-funnel-fill"></i> Filter</button>
                        <a href="{{ route('ketua-departemen.laporan.index') }}" class="btn btn-secondary btn-sm"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{-- Card Daftar Laporan --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Laporan</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            {{-- Menambahkan class "text-center" pada semua header --}}
                            <th class="text-center" style="width: 5%;">No</th>
                            <th class="text-center" style="width: 15%;">Waktu Laporan</th>
                            <th class="text-center" style="width: 20%;">Petugas</th>
                            <th class="text-center" style="width: 10%;">Jenis</th>
                            <th class="text-center">Keterangan</th>
                            <th class="text-center" style="width: 12%;">Status</th>
                            <th class="text-center" style="width: 8%;">Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @php
                            use Illuminate\Support\Str;
                        @endphp
                        @forelse ($laporans as $index => $laporan)
                        <tr>
                            {{-- Menambahkan "text-center" untuk kolom No --}}
                            <td class="text-center">{{ $laporans->firstItem() + $index }}</td>
                            <td>
                                {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('D MMM YY') }}
                                <br>
                                <small class="text-muted">{{ $laporan->jam }}</small>
                            </td>
                            <td>
                                {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}
                                <br>
                                <small class="text-muted">{{ $laporan->nik }}</small>
                            </td>
                            {{-- Menambahkan "text-center" untuk kolom Jenis --}}
                            <td class="text-center">
                                @php
                                    $badgeClass = 'bg-secondary'; // Default color
                                    if ($laporan->jenis_laporan == 'harian') $badgeClass = 'bg-primary';
                                    elseif ($laporan->jenis_laporan == 'kegiatan') $badgeClass = 'bg-success';
                                    elseif ($laporan->jenis_laporan == 'masalah') $badgeClass = 'bg-danger';
                                @endphp
                                <span class="badge {{ $badgeClass }} text-capitalize">{{ $laporan->jenis_laporan }}</span>
                            </td>
                            <td>{{ Str::limit($laporan->keterangan, 70) }}</td>
                            {{-- Menambahkan "text-center" untuk kolom Status --}}
                            <td class="text-center">
                                @if($laporan->status_admin)
                                    <span class="badge 
                                        @if($laporan->status_admin == 'Diterima') bg-success
                                        @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                        @elseif($laporan->status_admin == 'Perlu Revisi') bg-warning text-dark
                                        @else bg-secondary @endif">
                                        {{ $laporan->status_admin }}
                                    </span>
                                @else
                                    <span class="badge bg-secondary">Belum Ditinjau</span>
                                @endif
                            </td>
                            {{-- Menambahkan "text-center" untuk kolom Aksi --}}
                            <td class="text-center">
                                <a href="{{ route('ketua-departemen.laporan.show', $laporan->_id) }}" 
                                   class="btn btn-info btn-sm py-0 px-1" 
                                   title="Lihat Detail Laporan">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="7" class="text-center">Tidak ada data laporan yang sesuai dengan filter.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3">
                {{ $laporans->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\ketua-departemen\laporan\show.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Laporan Petugas - ' . $departemen)

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Laporan Petugas</h1>
        <a href="{{ route('ketua-departemen.laporan.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Daftar Laporan
        </a>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Informasi Laporan ({{ $fakultas }} - Dept. {{ $departemen }})</h6>
                </div>
                <div class="card-body">
                    <table class="table table-borderless table-sm">
                        <tr>
                            <th style="width: 30%;">ID Laporan</th>
                            <td>: {{ $laporan->_id }}</td>
                        </tr>
                        <tr>
                            <th>Tanggal Laporan</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('dddd, D MMMM YYYY') }}</td>
                        </tr>
                        <tr>
                            <th>Jam Laporan</th>
                            <td>: {{ $laporan->jam }}</td>
                        </tr>
                        <tr>
                            <th>Username Petugas</th>
                            <td>: {{ $laporan->nik }}</td>
                        </tr>
                        <tr>
                            <th>Nama Petugas</th>
                            <td>: {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jabatan</th>
                            <td>: {{ $laporan->karyawan->jabatan ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jenis Laporan</th>
                            <td>: <span class="badge bg-info text-capitalize">{{ $laporan->jenis_laporan }}</span></td>
                        </tr>
                        <tr>
                            <th>Lokasi Pengiriman</th>
                            <td>: {{ $laporan->lokasi }}</td>
                        </tr>
                        <tr>
                            <th class="align-top">Keterangan</th>
                            <td class="align-top">: <div style="white-space: pre-wrap;">{{ $laporan->keterangan }}</div></td>
                        </tr>
                        <tr>
                            <th>Foto Bukti</th>
                            <td>:
                                @if($laporan->foto)
                                <a href="{{ $laporan->foto_url }}" target="_blank">
                                    <img src="{{ $laporan->foto_url }}" alt="Foto Bukti" class="img-thumbnail mt-1" style="max-width: 250px; max-height: 250px;">
                                </a>
                                @else
                                Tidak ada foto bukti.
                                @endif
                            </td>
                        </tr>
                        <tr>
                            <th>Foto Verifikasi Wajah</th>
                            <td>:
                                @if($laporan->face_verification_image)
                                <a href="{{ $laporan->face_verification_url }}" target="_blank">
                                    <img src="{{ $laporan->face_verification_url }}" alt="Foto Verifikasi Wajah" class="img-thumbnail mt-1" style="max-width: 150px; max-height: 150px;">
                                </a>
                                @else
                                Tidak ada foto verifikasi.
                                @endif
                            </td>
                        </tr>
                         <tr>
                            <th>Tanggal Dibuat</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->created_at)->isoFormat('D MMM YYYY, HH:mm:ss') }}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Status & Tindakan</h6>
                </div>
                <div class="card-body">
                    <p><strong>Status Saat Ini:</strong>
                        @if($laporan->status_admin)
                            <span class="badge 
                                @if($laporan->status_admin == 'Diterima') bg-success
                                @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                @else bg-secondary @endif">
                                {{ $laporan->status_admin }}
                            </span>
                            @if($laporan->tanggal_peninjauan_admin)
                                <small class="d-block text-muted">Ditinjau pada: {{ \Carbon\Carbon::parse($laporan->tanggal_peninjauan_admin)->isoFormat('D MMM YY, HH:mm') }}</small>
                            @endif
                        @else
                            <span class="badge bg-secondary">Belum Ditinjau</span>
                        @endif
                    </p>
                    @if($laporan->catatan_admin)
                    <p><strong>Catatan:</strong><br>
                        <small class="text-muted" style="white-space: pre-wrap;">{{ $laporan->catatan_admin }}</small>
                    </p>
                    @endif

                    <hr>
                    <form action="{{ route('ketua-departemen.laporan.update_status', $laporan->_id) }}" method="POST">
                        @csrf
                        <div class="mb-3">
                            <label for="status_admin" class="form-label">Ubah Status:</label>
                            <select name="status_admin" id="status_admin" class="form-select @error('status_admin') is-invalid @enderror" required>
                                <option value="">-- Pilih Status --</option>
                                <option value="Diterima" {{ old('status_admin', $laporan->status_admin) == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                                <option value="Ditolak" {{ old('status_admin', $laporan->status_admin) == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                            </select>
                            @error('status_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <div class="mb-3">
                            <label for="catatan_admin" class="form-label">Catatan (Opsional):</label>
                            <textarea name="catatan_admin" id="catatan_admin" rows="3" class="form-control @error('catatan_admin') is-invalid @enderror">{{ old('catatan_admin', $laporan->catatan_admin) }}</textarea>
                            @error('catatan_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Update Status</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\ketua-departemen\laporan_kinerja\cetak.blade.php
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cetak Laporan Kinerja - {{ $departemen }} - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body { font-family: 'Times New Roman', Times, serif; color: #000; }
        .header-container { text-align: center; margin-bottom: 20px; border-bottom: 3px double #000; padding-bottom: 15px; }
        .header-container img { width: 80px; height: auto; position: absolute; left: 20px; top: 20px; }
        .report-title { font-size: 1.5rem; font-weight: bold; text-transform: uppercase; margin-bottom: 5px; }
        .report-subtitle { font-size: 1rem; margin-bottom: 15px; }
        .report-period { font-size: 1.1rem; font-weight: bold; }
        .table { width: 100%; border-collapse: collapse; font-size: 12px; }
        .table th, .table td { border: 1px solid #000 !important; padding: 8px; text-align: center; vertical-align: middle; }
        .table th { background-color: #e9ecef; font-weight: bold; }
        .signature-section { margin-top: 50px; page-break-inside: avoid; }
        .signature-box { width: 300px; float: right; text-align: center; }
        .signature-box .signature-name { margin-top: 70px; font-weight: bold; text-decoration: underline; }
        .signature-box .signature-nik { margin-top: 5px; }

        @media print {
            body { margin: 0; color: #000; }
            .container { width: 100% !important; padding: 0 !important; margin: 0 !important; }
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="header-container">
            <img src="{{ asset('assets/img/Undip Logo.png') }}" alt="Logo">
            <h4>KEMENTERIAN PENDIDIKAN, KEBUDAYAAN,<br>RISET, DAN TEKNOLOGI</h4>
            <h4 class="fw-bold">UNIVERSITAS DIPONEGORO</h4>
            <small>Jalan Prof. H. Soedarto, S.H., Tembalang, Semarang, Jawa Tengah 50275</small>
        </div>

        <h3 class="text-center fw-bold text-decoration-underline mb-3">LAPORAN KINERJA BULANAN</h3>
        
        <table class="table table-borderless table-sm mb-4" style="font-size: 14px;">
            <tr>
                <td style="width: 15%;">Unit Kerja</td>
                <td style="width: 2%;">:</td>
                <td>Satuan Pengamanan {{ $departemen }}, {{ $fakultas }}</td>
            </tr>
             <tr>
                <td>Periode</td>
                <td>:</td>
                <td>{{ $namaBulan[(int)$bulan] }} {{ $tahun }}</td>
            </tr>
        </table>
        
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Username</th>
                    <th>Nama Petugas</th>
                    <th>Hari Kerja Terjadwal</th>
                    <th>Hari Hadir Aktual</th>
                    <th>Persentase Kehadiran (%)</th>
                    <th>Total Jam Kerja Terjadwal</th>
                    <th>Total Jam Kerja Aktual</th>
                </tr>
            </thead>
            <tbody>
                @forelse ($laporanKinerjaData as $index => $data)
                <tr>
                    <td>{{ $index + 1 }}</td>
                    <td class="text-start">{{ $data['nik'] }}</td>
                    <td class="text-start">{{ $data['nama_lengkap'] }}</td>
                    <td>{{ $data['jumlah_hari_kerja_terjadwal'] }}</td>
                    <td>{{ $data['jumlah_hari_hadir'] }}</td>
                    <td>{{ $data['persentase_kehadiran'] }}%</td>
                    <td>{{ $data['total_jam_kerja_jadwal_format'] }}</td>
                    <td>{{ $data['total_jam_kerja_aktual_format'] }}</td>
                </tr>
                @empty
                <tr>
                    <td colspan="8" class="text-center">Tidak ada data kinerja untuk ditampilkan pada periode ini.</td>
                </tr>
                @endforelse
            </tbody>
        </table>

        <div class="signature-section">
            <div class="signature-box">
                <div>Semarang, {{ \Carbon\Carbon::now()->locale('id')->isoFormat('D MMMM YYYY') }}</div>
                <div>Ketua Departemen</div>
                <div>{{ $departemen }}</div>
                <div class="signature-name">{{ $ketua->nama_lengkap }}</div>
                <div class="signature-nik">NIK. {{ $ketua->nik }}</div>
            </div>
        </div>
    </div>

    <script>
        window.onload = function() {
            window.print();
        }
    </script>
</body>
</html>

resources\views\ketua-departemen\laporan_kinerja\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Kinerja Bulanan - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Kinerja Bulanan Petugas</h1>
        <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Menampilkan ringkasan kinerja bulanan petugas keamanan di departemen Anda.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.laporankinerja.index') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                    <div class="col-md-2">
                        <a href="{{ route('ketua-departemen.laporankinerja.index') }}" class="btn btn-secondary btn-sm w-100"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                    </div>
                    <div class="col-md-2">
                        <a href="{{ route('ketua-departemen.laporankinerja.cetak', request()->query()) }}" target="_blank" class="btn btn-success btn-sm w-100">
                            <i class="bi bi-printer-fill"></i> Cetak
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Laporan Kinerja - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}
            </h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="tableLaporanKinerja" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Hari Kerja Terjadwal</th>
                            <th>Hari Hadir Aktual</th>
                            <th>Persentase Kehadiran</th>
                            <th>Total Jam Kerja Terjadwal</th>
                            <th>Total Jam Kerja Aktual</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($laporanKinerjaData as $index => $data)
                        <tr>
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $data['nik'] }}</td>
                            <td>{{ $data['nama_lengkap'] }}</td>
                            <td class="text-center">{{ $data['jumlah_hari_kerja_terjadwal'] }} hari</td>
                            <td class="text-center">{{ $data['jumlah_hari_hadir'] }} hari</td>
                            <td class="text-center">
                                <div class="progress" style="height: 20px; font-size: 0.75rem;">
                                    <div class="progress-bar bg-{{ $data['persentase_kehadiran'] >= 80 ? 'success' : ($data['persentase_kehadiran'] >= 60 ? 'warning' : 'danger') }}" 
                                         role="progressbar" 
                                         style="width: {{ $data['persentase_kehadiran'] }}%;" 
                                         aria-valuenow="{{ $data['persentase_kehadiran'] }}" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                        {{ $data['persentase_kehadiran'] }}%
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">{{ $data['total_jam_kerja_jadwal_format'] }}</td>
                            <td class="text-center">{{ $data['total_jam_kerja_aktual_format'] }}</td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data kinerja untuk ditampilkan pada periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\ketua-departemen\patroli\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Histori Patroli Petugas - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
    .action-buttons .btn {
        margin-right: 0.25rem;
    }
    .fixed-alert {
        position: fixed;
        top: 70px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
        min-width: 300px;
        max-width: 600px;
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
    }
    /* PERBAIKAN: CSS untuk mengatur ulang layout paginasi */
    .pagination-container nav > div {
        display: flex;
        flex-direction: column-reverse; /* Membalik urutan: link di atas, teks di bawah */
        align-items: center;
        gap: 0.5rem; /* Memberi jarak antara link dan teks */
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Histori Patroli Petugas</h1>
        <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Menampilkan histori patroli petugas keamanan di departemen Anda.</p>
    
    @if(session('success'))
        <div class="alert alert-success alert-dismissible fade show fixed-alert" role="alert" id="pageSuccessMessage">
            {{ session('success') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif
    @if(session('error'))
         <div class="alert alert-danger alert-dismissible fade show fixed-alert" role="alert" id="pageErrorMessage">
            {{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Patroli</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.patroli.index') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="nik_karyawan" class="form-label mb-1 small">Username Petugas:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Masukkan Username">
                    </div>
                    <div class="col-md-3">
                        <label for="nama_karyawan" class="form-label mb-1 small">Nama Petugas:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_mulai" class="form-label mb-1 small">Tgl Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_akhir" class="form-label mb-1 small">Tgl Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-1">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                    <div class="col-md-1">
                        <a href="{{ route('ketua-departemen.patroli.index') }}" class="btn btn-secondary btn-sm w-100" title="Reset Filter"><i class="bi bi-arrow-clockwise"></i></a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Patroli Selesai</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePatroliKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Petugas (Username)</th>
                            <th>Waktu Mulai</th>
                            <th>Waktu Selesai</th>
                            <th>Durasi</th>
                            <th>Jarak (km)</th>
                            <th>Status</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($patrols as $index => $patrol)
                        <tr>
                            <td class="text-center">{{ $patrols->firstItem() + $index }}</td>
                            <td>
                                {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }}
                                <small class="d-block text-muted">({{ $patrol->karyawan_nik }})</small>
                            </td>
                            <td class="text-center">{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('D MMM YY, HH:mm') }}</td>
                            <td class="text-center">{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('D MMM YY, HH:mm') : '-' }}</td>
                            <td class="text-center">
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d:%02d:%02d', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                            <td class="text-center">{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }}</td>
                            <td class="text-center">
                                <span class="badge bg-{{ $patrol->status == 'selesai' ? 'success' : ($patrol->status == 'dibatalkan' ? 'danger' : 'secondary') }} text-capitalize">
                                    {{ $patrol->status }}
                                </span>
                            </td>
                            <td class="text-center action-buttons">
                                <a href="{{ route('ketua-departemen.patroli.show', $patrol->_id) }}" class="btn btn-info btn-sm py-0 px-1" title="Lihat Detail">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                                {{-- Tombol Hapus Dihilangkan --}}
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data patroli yang ditemukan.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            {{-- PERBAIKAN TAMPILAN PAGINASI --}}
            @if ($patrols->hasPages())
            <div class="pagination-container mt-3">
                {{ $patrols->appends(request()->query())->links() }}
            </div>
            @endif
            {{-- AKHIR PERBAIKAN --}}
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
    
    window.setTimeout(function() {
        $(".fixed-alert").fadeTo(500, 0).slideUp(500, function(){
            $(this).remove(); 
        });
    }, 4000);
</script>
@endpush

resources\views\ketua-departemen\patroli\show.blade.php
{{-- File: resources/views/ketua-departemen/patroli/show.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Detail Patroli Petugas - ' . $departemen)

@push('styles')
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
<style>
    #mapDetailPatroli { 
        height: 450px; 
        border-radius: .375rem; 
        border: 1px solid #e3e6f0; 
    }
    .info-table th { 
        width: 30%; 
        font-weight: 500; 
        background-color: #f8f9fc; 
    }
    .info-table td, .info-table th { 
        padding: .6rem .75rem; 
        font-size: 0.9rem; 
    }
    .face-verification-section {
        background-color: #f8f9fc;
        border-radius: .375rem;
        padding: 1rem;
        margin-top: 1rem;
    }
    .face-verification-image {
        max-width: 200px;
        max-height: 200px;
        border-radius: .375rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Patroli Petugas</h1>
        <a href="{{ route('ketua-departemen.patroli.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Histori
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Patroli oleh: {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }} ({{ $patrol->karyawan_nik }})
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-lg-5 mb-4 mb-lg-0">
                    <h5 class="mb-3">Informasi Patroli</h5>
                    <table class="table table-bordered table-sm info-table">
                        <tr>
                            <th>Waktu Mulai</th>
                            <td>{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</td>
                        </tr>
                        <tr>
                            <th>Waktu Selesai</th>
                            <td>{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') : '-' }}</td>
                        </tr>
                        <tr>
                            <th>Durasi</th>
                            <td>
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d jam %02d menit %02d detik', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                        </tr>
                        <tr>
                            <th>Jarak Tempuh</th>
                            <td>{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }} km</td>
                        </tr>
                        {{-- NEW: Face verification status --}}
                        <tr>
                            <th>Verifikasi Wajah</th>
                            <td>
                                @if($patrol->face_verified ?? false)
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i>Terverifikasi
                                    </span>
                                    @if($patrol->face_verification_time)
                                        <br><small class="text-muted">
                                            {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('D MMM YYYY HH:mm') }}
                                        </small>
                                    @endif
                                @else
                                    <span class="badge bg-warning">
                                        <i class="bi bi-exclamation-triangle me-1"></i>Tidak Terverifikasi
                                    </span>
                                @endif
                            </td>
                        </tr>
                    </table>

                    {{-- NEW: Face verification section --}}
                    @if($patrol->face_verified && $patrol->face_verification_image)
                    <div class="face-verification-section">
                        <h6 class="mb-3">
                            <i class="bi bi-person-check me-2"></i>Foto Verifikasi Wajah
                        </h6>
                        <div class="text-center">
                            <img src="{{ asset('storage/' . $patrol->face_verification_image) }}" 
                                 alt="Foto Verifikasi Wajah" 
                                 class="face-verification-image"
                                 onclick="showImageModal(this.src)">
                            @if($patrol->face_verification_time)
                            <p class="text-muted mt-2 mb-0">
                                <small>Diverifikasi pada: {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</small>
                            </p>
                            @endif
                        </div>
                    </div>
                    @endif
                </div>
                <div class="col-lg-7">
                    <h5 class="mb-3">Jejak Patroli</h5>
                    <div id="mapDetailPatroli"></div>
                </div>
            </div>
        </div>
    </div>
</div>

{{-- Modal for viewing face verification image --}}
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Foto Verifikasi Wajah</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Foto Verifikasi" class="img-fluid">
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pathData = @json($pathForMap ?? []);
        const officeLocation = @json($officeLocation ?? null);
        const officeRadius = @json($officeRadius ?? null);
        const officeLat = officeLocation ? officeLocation.coordinates[1] : null;
        const officeLng = officeLocation ? officeLocation.coordinates[0] : null;

        const mapContainer = document.getElementById('mapDetailPatroli');
        if (!mapContainer) return;
        
        // Tentukan titik tengah peta. Prioritaskan lokasi kantor.
        let centerLat, centerLng;
        if (officeLat && officeLng) {
            centerLat = officeLat;
            centerLng = officeLng;
        } else if (pathData && pathData.length > 0) {
            centerLat = pathData[Math.floor(pathData.length / 2)][0];
            centerLng = pathData[Math.floor(pathData.length / 2)][1];
        } else {
            centerLat = -6.9927; // Default Semarang
            centerLng = 110.4204;
        }
        
        const map = L.map('mapDetailPatroli').setView([centerLat, centerLng], 15);
        
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        let bounds = L.latLngBounds();

        // Gambar jejak patroli jika ada
        if (pathData && pathData.length > 0) {
            const polyline = L.polyline(pathData, { 
                color: '#007bff', 
                weight: 5 
            }).addTo(map);
            bounds.extend(polyline.getBounds());

            L.marker(pathData[0], {
                icon: L.icon({
                    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
                    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                    iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]
                })
            }).addTo(map).bindPopup('Mulai Patroli');

            if (pathData.length > 1) {
                L.marker(pathData[pathData.length - 1], {
                    icon: L.icon({
                        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
                        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                        iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]
                    })
                }).addTo(map).bindPopup('Selesai Patroli');
            }
        }

        // Gambar lokasi kerja dan radius jika ada
        if (officeLat && officeLng && officeRadius) {
            const officeCircle = L.circle([officeLat, officeLng], {
                color: '#dc3545',
                fillColor: '#dc3545',
                fillOpacity: 0.2,
                radius: officeRadius
            }).addTo(map).bindPopup('Radius Lokasi Kerja');
            bounds.extend(officeCircle.getBounds());
        }

        // Sesuaikan zoom peta jika ada objek yang digambar
        if (bounds.isValid()) {
            map.fitBounds(bounds.pad(0.2));
        } else if (!pathData || pathData.length === 0) {
            mapContainer.innerHTML = '<div class="d-flex justify-content-center align-items-center h-100"><p class="text-muted p-5">Tidak ada data jejak atau lokasi kerja untuk ditampilkan.</p></div>';
        }
    });

    // Function to show image in modal
    function showImageModal(imageSrc) {
        document.getElementById('modalImage').src = imageSrc;
        const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
        imageModal.show();
    }
</script>
@endpush

resources\views\ketua-departemen\presensi\detail_karyawan.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Presensi Petugas: ' . $karyawan->nama_lengkap)

@push('styles')
<style>
    .table-sm th, .table-sm td { font-size: 0.85rem; padding: 0.4rem; vertical-align: middle; }
    .img-thumbnail-xs { width: 40px; height: 40px; object-fit: cover; border-radius: 0.25rem; }
    .form-control-sm, .form-select-sm { font-size: 0.875rem; }
    .profile-header { background-color: #f8f9fc; padding: 1.5rem; border-radius: .5rem; margin-bottom: 1.5rem; border: 1px solid #e3e6f0; }
    .profile-header img { width: 80px; height: 80px; object-fit: cover; border: 3px solid #fff; box-shadow: 0 .125rem .25rem rgba(0,0,0,.075); }
    .profile-header h4 { margin-bottom: 0.25rem; font-weight: 600; }
    .profile-header p { margin-bottom: 0; font-size: 0.9rem; color: #5a5c69; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Presensi Petugas</h1>
        <a href="{{ route('ketua-departemen.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi
        </a>
    </div>

    <div class="profile-header">
        <div class="d-flex align-items-center">
            <img src="{{ $karyawan->foto ? asset('storage/' . $karyawan->foto) : asset('assets/img/sample/avatar/avatar1.jpg') }}" 
                 alt="Foto {{ $karyawan->nama_lengkap }}" class="rounded-circle me-3"
                 onerror="this.onerror=null;this.src='{{ asset('assets/img/sample/avatar/avatar1.jpg') }}';">
            <div>
                <h4>{{ $karyawan->nama_lengkap }}</h4>
                <p class="mb-0">Username: {{ $karyawan->nik }}</p>
                <p>Departemen: {{ $departemen }}</p>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.presensi.detail_karyawan', $karyawan->nik) }}">
                <div class="row align-items-end gx-2">
                    <div class="col-md-4 mb-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Histori Presensi - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Hari</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($historiPresensi as $index => $data)
                        @php $tanggalCarbon = \Carbon\Carbon::parse($data->tgl_presensi); @endphp
                        <tr> 
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('D MMM YY') }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('dddd') }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_in == 'admin' ? 'Admin' : ($data->lokasi_in ?? '-') }}</small></td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_out == 'admin' ? 'Admin' : ($data->lokasi_out ?? '-') }}</small></td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center">Tidak ada data presensi untuk periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\ketua-departemen\presensi\harian.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Presensi Harian - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td { font-size: 0.85rem; padding: 0.4rem; vertical-align: middle; }
    .img-thumbnail-xs { width: 40px; height: 40px; object-fit: cover; border-radius: 0.25rem; }
    .form-control-sm, .form-select-sm { font-size: 0.875rem; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Presensi Harian Petugas</h1>
        <a href="{{ route('ketua-departemen.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Pilih Tanggal (Departemen {{ $departemen }})</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.presensi.harian') }}">
                <div class="row align-items-end gx-2">
                    <div class="col-md-4 mb-3">
                        <label for="tanggal" class="form-label mb-1 small">Tanggal:</label>
                        <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $tanggal ?? date('Y-m-d') }}" required>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi Tanggal: {{ \Carbon\Carbon::parse($tanggal ?? date('Y-m-d'))->isoFormat('dddd, D MMMM YYYY') }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Jabatan</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>

                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiHarian as $index => $data)
                        <tr>
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                    <a href="{{ route('ketua-departemen.presensi.detail_karyawan', $data->karyawan->nik) }}?bulan={{ \Carbon\Carbon::parse($data->tgl_presensi)->format('m') }}&tahun={{ \Carbon\Carbon::parse($data->tgl_presensi)->format('Y') }}">
                                        {{ $data->karyawan->nama_lengkap }}
                                    </a>
                                @else
                                    N/A
                                @endif
                            </td>
                            <td>{{ $data->karyawan->jabatan ?? 'N/A' }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>

                        </tr>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center">Tidak ada data presensi untuk tanggal ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\ketua-departemen\presensi\rekapitulasi.blade.php
@extends('admin.layouts.app')

@section('title', 'Rekapitulasi Presensi - ' . $departemen)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Rekapitulasi Presensi Petugas</h1>
         <div>
            <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultas }}</span>
            <span class="badge bg-info text-white p-2">Departemen: {{ $departemen }}</span>
        </div>
    </div>
    <p class="mb-4">Menampilkan data presensi petugas keamanan di departemen Anda.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('ketua-departemen.presensi.rekapitulasi') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulanIni == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahunIni == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="nik" class="form-label mb-1 small">Username Petugas:</label>
                        <input type="text" name="nik" id="nik" class="form-control form-control-sm" value="{{ $searchNik ?? '' }}" placeholder="Masukkan Username">
                    </div>
                     <div class="col-md-3">
                        <label for="nama" class="form-label mb-1 small">Nama Petugas:</label>
                        <input type="text" name="nama" id="nama" class="form-control form-control-sm" value="{{ $searchNama ?? '' }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                </div>
                 <div class="mt-3">
                    <a href="{{ route('ketua-departemen.presensi.harian', ['tanggal' => date('Y-m-d')]) }}" class="btn btn-info btn-sm">
                        <i class="bi bi-calendar-day"></i> Laporan Harian Ini
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi ({{ $namaBulan[(int)$bulanIni] }} {{ $tahunIni }})</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePresensiKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiData as $index => $data)
                        <tr> 
                            <td class="text-center">{{ $presensiData->firstItem() + $index }}</td>
                            <td>{{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('dddd, D MMM YY') }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                <a href="{{ route('ketua-departemen.presensi.detail_karyawan', $data->karyawan->nik) }}?bulan={{$bulanIni}}&tahun={{$tahunIni}}">
                                    {{ $data->karyawan->nama_lengkap }}
                                </a>
                                @else
                                    {{ 'N/A' }}
                                @endif
                            </td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data presensi untuk periode dan filter ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $presensiData->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\komandan\dashboard.blade.php
@extends('admin.layouts.app')

@section('title', 'Dashboard Komandan')

@push('styles')
<style>
    .info-box .info-box-icon { font-size: 2.5rem; }
    .info-box .info-box-content { text-align: right; }
    .border-left-primary { border-left: .25rem solid #4e73df!important; }
    .border-left-success { border-left: .25rem solid #1cc88a!important; }
    .border-left-info { border-left: .25rem solid #36b9cc!important; }
    .border-left-warning { border-left: .25rem solid #f6c23e!important; }
    .border-left-danger { border-left: .25rem solid #e74a3b!important; } 
    .text-gray-300 { color: #dddfeb!important; }
    .text-gray-800 { color: #5a5c69!important; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard Komandan</h1>
        <span class="badge bg-primary text-white p-2">Fakultas: {{ $fakultasKomandan ?? 'N/A' }}</span>
    </div>

    <p>Selamat datang di panel Komandan SiAmalin.</p>

    <div class="row">
        {{-- Total Petugas Keamanan --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Petugas Keamanan</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $jumlahPetugas ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-people-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- Hadir Hari Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Hadir Hari Ini (Petugas)</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $hadirHariIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-calendar-check-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        {{-- Laporan Belum Ditinjau --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Laporan Baru (Petugas)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $laporanBelumDitinjau ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-file-earmark-medical-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- Total Laporan Bulan Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Total Laporan Bulan Ini</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $totalLaporanBulanIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-file-earmark-text-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        {{-- Total Patroli Selesai Bulan Ini --}}
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Total Patroli Selesai (Bulan Ini)</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{ $totalPatroliBulanIni ?? 0 }}</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-signpost-split-fill fs-2 text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-lg-8 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Ringkasan Presensi Petugas Bulan Ini ({{ $fakultasKomandan }})</h6>
                </div>
                <div class="card-body">
                    @if($rekapPresensiBulanan && ($rekapPresensiBulanan['totalHadir'] ?? 0) > 0)
                    <p>Total Kehadiran Petugas: <strong>{{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}</strong></p>
                    <div style="position: relative; height:300px; width:100%;">
                        <canvas id="presensiKomandanChart"></canvas>
                    </div>
                    @else
                    <p>Belum ada data presensi petugas untuk bulan ini di fakultas Anda.</p>
                    @endif
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-4">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Akses Cepat</h6>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item"><a href="{{ route('komandan.karyawan.index') }}">Data Petugas Keamanan</a></li>
                        <li class="list-group-item"><a href="{{ route('komandan.presensi.rekapitulasi') }}">Monitoring Presensi Petugas</a></li>
                        <li class="list-group-item"><a href="{{ route('komandan.laporan.index') }}">Laporan Petugas</a></li>
                        <li class="list-group-item"><a href="{{ route('komandan.patroli.index') }}">Patroli Petugas</a></li>
                        <li class="list-group-item"><a href="{{ route('komandan.jadwalshift.index') }}">Atur Jadwal Shift</a></li>
                        <li class="list-group-item"><a href="{{ route('komandan.laporankinerja.index') }}">Laporan Kinerja Bulanan</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

</div>
@endsection

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    @if(isset($rekapPresensiBulanan) && ($rekapPresensiBulanan['totalHadir'] ?? 0) > 0)
    const ctxKomandan = document.getElementById('presensiKomandanChart');
    if (ctxKomandan) {
        new Chart(ctxKomandan, {
            type: 'bar', 
            data: {
                labels: ['Hadir'],
                datasets: [{
                    label: 'Jumlah Presensi Petugas Bulan Ini',
                    data: [
                        {{ $rekapPresensiBulanan['totalHadir'] ?? 0 }}
                    ],
                    backgroundColor: [
                        'rgba(28, 200, 138, 0.5)'
                    ],
                    borderColor: [
                        'rgba(28, 200, 138, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0 
                        }
                    }
                },
                responsive: true,
                maintainAspectRatio: false 
            }
        });
    }
    @endif
</script>
@endpush

resources\views\komandan\jadwal_shift\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Pengaturan Jadwal Shift - Fakultas ' . $fakultasKomandan)

@push('styles')
<meta name="csrf-token" content="{{ csrf_token() }}"> {{-- Tambahkan CSRF token untuk AJAX --}}
<style>
    .table-jadwal th, .table-jadwal td {
        vertical-align: middle;
        text-align: center;
        font-size: 0.85rem;
        padding: 0.5rem;
        min-width: 100px; /* Agar kolom hari tidak terlalu sempit */
    }
    .table-jadwal th.nama-karyawan, .table-jadwal td.nama-karyawan {
        text-align: left;
        min-width: 180px;
        background-color: #f8f9fc; /* Light background for name column */
        position: sticky;
        left: 0;
        z-index: 1;
        box-shadow: 2px 0 5px -2px #ccc; /* Optional: shadow for sticky column */
    }
     .table-responsive {
        max-height: 70vh; /* Batasi tinggi tabel agar bisa discroll */
    }
    .shift-cell {
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    .shift-cell:hover {
        background-color: #e9ecef;
    }
    .shift-pagi { background-color: #d1e7dd !important; color: #0f5132 !important; } 
    .shift-malam { background-color: #cfe2ff !important; color: #084298 !important; } 
    .shift-libur { background-color: #f2ababff !important; color: #000000ff !important; } 
    .shift-custom { background-color: #e2e3e5 !important; color: #495057 !important; } 

    .shift-badge {
        display: block;
        padding: 0.3em 0.5em;
        border-radius: 0.25rem;
        font-weight: 500;
        font-size: 0.8em;
    }
    .filter-form .form-control-sm, .filter-form .btn-sm {
        font-size: 0.875rem;
    }
    .modal-body p strong {
        color: #4e73df; /* Warna biru untuk info penting di modal */
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Pengaturan Jadwal Shift</h1>
        <span class="badge bg-info text-white p-2">Fakultas: {{ $fakultasKomandan }}</span>
    </div>
    <p class="mb-4">Atur jadwal shift mingguan untuk petugas keamanan di fakultas Anda. Klik pada sel untuk mengatur shift.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Minggu</h6>
        </div>
        <div class="card-body filter-form">
            <form method="GET" action="{{ route('komandan.jadwalshift.index') }}" class="row gx-2 gy-2 align-items-end">
                <div class="col-md-3">
                    <label for="tanggal" class="form-label mb-1 small">Pilih Tanggal (dalam minggu yang diinginkan):</label>
                    <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $selectedDate->format('Y-m-d') }}">
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                </div>
                <div class="col-md-3">
                    <a href="{{ route('komandan.jadwalshift.index', ['tanggal' => $startOfWeek->copy()->subWeek()->format('Y-m-d')]) }}" class="btn btn-outline-secondary btn-sm w-100">
                        <i class="bi bi-chevron-left"></i> Minggu Sebelumnya
                    </a>
                </div>
                <div class="col-md-3">
                     <a href="{{ route('komandan.jadwalshift.index', ['tanggal' => $startOfWeek->copy()->addWeek()->format('Y-m-d')]) }}" class="btn btn-outline-secondary btn-sm w-100">
                        Minggu Berikutnya <i class="bi bi-chevron-right"></i>
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Jadwal Shift Minggu: {{ $startOfWeek->isoFormat('D MMM YY') }} - {{ $endOfWeek->isoFormat('D MMM YY') }}
            </h6>
        </div>
        <div class="card-body">
            @if(session('success'))
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    {{ session('success') }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            @endif
            @if(session('error'))
                 <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    {{ session('error') }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            @endif

            {{-- Tambahan tulisan informasi --}}
            <div class="alert alert-info small mb-3" role="alert">
                <i class="bi bi-info-circle-fill me-2"></i>
                Setelah menerapkan atau mengubah jadwal, tabel akan diperbarui secara otomatis. Jika ada kendala, silakan refresh halaman ini.
            </div>

            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm table-jadwal" id="tableJadwalShift">
                    <thead class="table-light">
                        <tr>
                            <th class="nama-karyawan">Nama Petugas</th>
                            @foreach ($datesOfWeek as $date)
                                <th class="text-center">
                                    {{ $date->isoFormat('dddd') }}<br>
                                    <small>{{ $date->isoFormat('D MMM') }}</small>
                                </th>
                            @endforeach
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($jadwalMingguan as $nik => $dataJadwal)
                        <tr>
                            <td class="nama-karyawan">
                                {{ $dataJadwal['nama_lengkap'] }}
                                <small class="d-block text-muted">Username: {{ $nik }}</small>
                            </td>
                            @foreach ($datesOfWeek as $tanggal)
                                @php
                                    $shift = $dataJadwal['shifts'][$tanggal->format('Y-m-d')] ?? null;
                                    $shiftClass = '';
                                    $shiftText = 'Kosong';
                                    if ($shift) {
                                        $shiftNamaUpper = strtoupper($shift->shift_nama);
                                        if ($shiftNamaUpper === 'PAGI') $shiftClass = 'shift-pagi';
                                        elseif ($shiftNamaUpper === 'MALAM') $shiftClass = 'shift-malam';
                                        elseif ($shiftNamaUpper === 'LIBUR') $shiftClass = 'shift-libur';
                                        elseif ($shiftNamaUpper === 'CUSTOM') $shiftClass = 'shift-custom';
                                        else $shiftClass = 'shift-custom'; 
                                        
                                        $shiftText = $shift->shift_nama;
                                        if ($shift->jam_mulai && $shift->jam_selesai) {
                                            $shiftText .= "<br><small>(" . substr($shift->jam_mulai, 0, 5) . "-" . substr($shift->jam_selesai, 0, 5) . ")</small>";
                                        } elseif ($shiftNamaUpper === 'CUSTOM' && (!$shift->jam_mulai || !$shift->jam_selesai) ) {
                                            $shiftText .= "<br><small>(Jam Belum Lengkap)</small>";
                                        } elseif ($shiftNamaUpper !== 'LIBUR') {
                                             $shiftText .= "<br><small>(Jam Tidak Ditentukan)</small>";
                                        }
                                    }
                                @endphp
                                <td class="shift-cell {{ $shiftClass }}" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#setShiftModal"
                                    data-nik="{{ $nik }}"
                                    data-nama="{{ $dataJadwal['nama_lengkap'] }}"
                                    data-tanggal="{{ $tanggal->format('Y-m-d') }}"
                                    data-tanggal-display="{{ $tanggal->isoFormat('dddd, D MMMM YYYY') }}"
                                    data-shift-nama="{{ $shift->shift_nama ?? '' }}"
                                    data-jam-mulai="{{ $shift->jam_mulai ?? '' }}"
                                    data-jam-selesai="{{ $shift->jam_selesai ?? '' }}"
                                    data-keterangan="{{ $shift->keterangan ?? '' }}">
                                    {!! $shift ? $shiftText : '<span class="text-muted fst-italic">Kosong</span>' !!}
                                </td>
                            @endforeach
                        </tr>
                        @empty
                        <tr>
                            <td colspan="{{ count($datesOfWeek) + 1 }}" class="text-center">
                                Belum ada petugas keamanan di fakultas ini.
                            </td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal Set/Edit Shift -->
<div class="modal fade" id="setShiftModal" tabindex="-1" aria-labelledby="setShiftModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="formSetShift" method="POST" action="{{ route('komandan.jadwalshift.store') }}">
                @csrf
                <input type="hidden" name="karyawan_nik" id="modal_karyawan_nik">
                <input type="hidden" name="tanggal" id="modal_tanggal">

                <div class="modal-header">
                    <h5 class="modal-title" id="setShiftModalLabel">Atur Shift untuk <strong id="modal_nama_karyawan_display"></strong></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="mb-3">Tanggal: <strong id="modal_tanggal_display_text"></strong></p>
                    
                    <div class="mb-3">
                        <label for="modal_shift_nama" class="form-label">Jenis Shift <span class="text-danger">*</span></label>
                        <select name="shift_nama" id="modal_shift_nama" class="form-select form-select-sm" required>
                            <option value="">-- Pilih Shift --</option>
                            @foreach($definedShifts as $key => $shiftInfo)
                                <option value="{{ $key }}">{{ $shiftInfo['label'] }}</option>
                            @endforeach
                            <option value="CUSTOM">Kustom Waktu</option>
                        </select>
                    </div>

                    <div id="custom_time_fields" style="display:none;">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="modal_jam_mulai" class="form-label">Jam Mulai (HH:MM) <span id="jam_mulai_star" class="text-danger" style="display:none;">*</span></label>
                                <input type="time" name="jam_mulai" id="modal_jam_mulai" class="form-control form-control-sm">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="modal_jam_selesai" class="form-label">Jam Selesai (HH:MM) <span id="jam_selesai_star" class="text-danger" style="display:none;">*</span></label>
                                <input type="time" name="jam_selesai" id="modal_jam_selesai" class="form-control form-control-sm">
                            </div>
                        </div>
                         <small class="form-text text-muted">Untuk shift malam yang melewati tengah malam (misal 19:00 - 07:00), sistem akan menanganinya dengan benar.</small>
                    </div>

                    <div class="mb-3">
                        <label for="modal_keterangan" class="form-label">Keterangan (Opsional)</label>
                        <textarea name="keterangan" id="modal_keterangan" class="form-control form-control-sm" rows="2"></textarea>
                    </div>
                    <div id="modalErrorMessage" class="alert alert-danger mt-2" style="display: none;"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-sm btn-primary">Simpan Jadwal</button>
                </div>
            </form>
        </div>
    </div>
</div>

@endsection

@push('scripts')
<script>
document.addEventListener('DOMContentLoaded', function () {
    const setShiftModalElement = document.getElementById('setShiftModal');
    const setShiftModal = setShiftModalElement ? new bootstrap.Modal(setShiftModalElement) : null;
    
    const modalForm = document.getElementById('formSetShift');
    const modalShiftNamaSelect = document.getElementById('modal_shift_nama');
    const customTimeFields = document.getElementById('custom_time_fields');
    const modalJamMulaiInput = document.getElementById('modal_jam_mulai');
    const modalJamSelesaiInput = document.getElementById('modal_jam_selesai');
    const jamMulaiStar = document.getElementById('jam_mulai_star');
    const jamSelesaiStar = document.getElementById('jam_selesai_star');
    const modalErrorMessage = document.getElementById('modalErrorMessage');

    let activeCellElement = null; // Pindahkan ke scope yang lebih luas jika diperlukan di luar event listener

    $('#tableJadwalShift').on('click', '.shift-cell', function () {
        if (!setShiftModal) {
            console.error("Modal #setShiftModal tidak ditemukan.");
            return;
        }
        activeCellElement = this; // Simpan elemen sel yang diklik saat ini

        const nik = $(this).data('nik');
        const nama = $(this).data('nama');
        const tanggal = $(this).data('tanggal');
        const tanggalDisplay = $(this).data('tanggal-display');
        let shiftNama = $(this).data('shift-nama') || '';
        let jamMulai = $(this).data('jam-mulai') || '';
        let jamSelesai = $(this).data('jam-selesai') || '';
        const keterangan = $(this).data('keterangan') || '';

        $('#modal_karyawan_nik').val(nik);
        $('#modal_nama_karyawan_display').text(nama); 
        $('#modal_tanggal').val(tanggal);
        $('#modal_tanggal_display_text').text(tanggalDisplay); 
        
        let currentShiftKey = shiftNama.toUpperCase();
        const definedShiftsFromBlade = typeof $definedShifts !== 'undefined' ? @json($definedShifts) : {};
        const definedShiftKeys = Object.keys(definedShiftsFromBlade).map(k => k.toUpperCase());

        if (!definedShiftKeys.includes(currentShiftKey) && currentShiftKey !== 'CUSTOM' && (jamMulai || jamSelesai)) {
            currentShiftKey = 'CUSTOM';
        } else if (!definedShiftKeys.includes(currentShiftKey) && currentShiftKey !== 'CUSTOM') {
            currentShiftKey = '';
        }
        
        $('#modal_shift_nama').val(currentShiftKey);
        $('#modal_keterangan').val(keterangan);
        
        modalErrorMessage.style.display = 'none';
        modalErrorMessage.innerHTML = '';

        if (currentShiftKey === 'CUSTOM') {
            customTimeFields.style.display = 'block';
            modalJamMulaiInput.value = jamMulai;
            modalJamSelesaiInput.value = jamSelesai;
            modalJamMulaiInput.required = true;
            modalJamSelesaiInput.required = true;
            jamMulaiStar.style.display = 'inline';
            jamSelesaiStar.style.display = 'inline';
        } else {
            customTimeFields.style.display = 'none';
            modalJamMulaiInput.value = '';
            modalJamSelesaiInput.value = '';
            modalJamMulaiInput.required = false;
            modalJamSelesaiInput.required = false;
            jamMulaiStar.style.display = 'none';
            jamSelesaiStar.style.display = 'none';
        }
        setShiftModal.show();
    });

    if (modalShiftNamaSelect) {
        modalShiftNamaSelect.addEventListener('change', function() {
            if (this.value === 'CUSTOM') {
                customTimeFields.style.display = 'block';
                modalJamMulaiInput.required = true;
                modalJamSelesaiInput.required = true;
                jamMulaiStar.style.display = 'inline';
                jamSelesaiStar.style.display = 'inline';
            } else {
                customTimeFields.style.display = 'none';
                modalJamMulaiInput.required = false;
                modalJamSelesaiInput.required = false;
                jamMulaiStar.style.display = 'none';
                jamSelesaiStar.style.display = 'none';
            }
        });
    }

    if (modalForm) {
        modalForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            const submitButton = $(this).find('button[type="submit"]');
            const originalButtonText = submitButton.html();
            submitButton.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Menyimpan...');
            modalErrorMessage.style.display = 'none';
            modalErrorMessage.innerHTML = '';

            fetch(this.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '{{ csrf_token() }}',
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                const contentType = response.headers.get("content-type");
                if (contentType && contentType.indexOf("application/json") !== -1) {
                    return response.json().then(data => ({ status: response.status, ok: response.ok, body: data }));
                } else {
                    return response.text().then(text => { 
                        console.error("Server response was not JSON:", text);
                        return { status: response.status, ok: false, body: { message: "Respon server tidak valid.", _raw: text.substring(0,500) } };
                    });
                }
            })
            .then(responseObj => {
                const data = responseObj.body;
                if (responseObj.ok && data.success) {
                    if(setShiftModal) setShiftModal.hide();
                    // Tidak perlu Swal.fire jika sudah ada info refresh
                    // Swal.fire({
                    //     icon: 'success',
                    //     title: 'Berhasil!',
                    //     text: data.message,
                    //     timer: 1000, 
                    //     showConfirmButton: false
                    // });

                    if (activeCellElement && data.shift) {
                        const newShift = data.shift;
                        let shiftText = newShift.shift_nama;
                        let shiftClass = '';
                        const shiftNamaUpper = newShift.shift_nama.toUpperCase();

                        if (shiftNamaUpper === 'PAGI') shiftClass = 'shift-pagi';
                        else if (shiftNamaUpper === 'MALAM') shiftClass = 'shift-malam';
                        else if (shiftNamaUpper === 'LIBUR') shiftClass = 'shift-libur';
                        else if (shiftNamaUpper === 'CUSTOM') shiftClass = 'shift-custom';
                        else shiftClass = 'shift-custom'; 

                        if (newShift.jam_mulai && newShift.jam_selesai) {
                            shiftText += `<br><small>(${newShift.jam_mulai.substring(0,5)}-${newShift.jam_selesai.substring(0,5)})</small>`;
                        } else if (shiftNamaUpper === 'CUSTOM' && (!newShift.jam_mulai || !newShift.jam_selesai)) {
                            shiftText += `<br><small>(Jam Belum Lengkap)</small>`;
                        } else if (shiftNamaUpper !== 'LIBUR') {
                            shiftText += `<br><small>(Jam Tidak Ditentukan)</small>`;
                        }
                        
                        $(activeCellElement).html(shiftText);
                        activeCellElement.className = 'shift-cell'; 
                        if(shiftClass) $(activeCellElement).addClass(shiftClass);

                        $(activeCellElement).data('shift-nama', newShift.shift_nama);
                        $(activeCellElement).data('jam-mulai', newShift.jam_mulai || '');
                        $(activeCellElement).data('jam-selesai', newShift.jam_selesai || '');
                        $(activeCellElement).data('keterangan', newShift.keterangan || '');
                        
                        // Tambahkan notifikasi sukses kecil di atas tabel
                        const successAlertHtml = `
                            <div class="alert alert-success alert-dismissible fade show small" role="alert" id="shiftUpdateSuccessAlert">
                                ${data.message} Silakan refresh halaman jika perubahan tidak langsung terlihat.
                                <button type="button" class="btn-close btn-sm" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>`;
                        // Hapus alert lama jika ada, lalu tambahkan yang baru
                        $('#shiftUpdateSuccessAlert').remove(); 
                        $('.card-body .table-responsive').before(successAlertHtml);
                        window.setTimeout(() => { $('#shiftUpdateSuccessAlert').alert('close'); }, 5000);


                    }
                } else {
                    let errorMsgText = "Terjadi kesalahan."; 
                    if (typeof data === 'object' && data !== null) { 
                        errorMsgText = data.message || 'Data tidak valid.';
                        if(data.errors){
                            errorMsgText += '<br><ul class="list-unstyled text-start mt-2">';
                            for(const field in data.errors){
                                data.errors[field].forEach(err => {
                                    errorMsgText += `<li><small>${err}</small></li>`;
                                });
                            }
                            errorMsgText += '</ul>';
                        }
                    } else if (typeof data === 'string') { 
                         errorMsgText = "Gagal memproses permintaan. Respon server tidak valid.";
                         console.error("Raw server response (not JSON):", data);
                    }
                    
                    modalErrorMessage.innerHTML = errorMsgText;
                    modalErrorMessage.style.display = 'block';
                }
            })
            .catch(error => {
                console.error('Fetch Error:', error);
                modalErrorMessage.innerHTML = 'Terjadi kesalahan jaringan atau server. <br><small>' + error.message + '</small>';
                modalErrorMessage.style.display = 'block';
            })
            .finally(() => {
                 submitButton.prop('disabled', false).html(originalButtonText);
            });
        });
    }
});
</script>
@endpush

resources\views\komandan\karyawan\index.blade.php
@extends('admin.layouts.app') {{-- Sementara menggunakan layout admin --}}

@section('title', 'Data Petugas Keamanan Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 45px;
        height: 45px;
        object-fit: cover;
        border-radius: 0.25rem; /* Sedikit rounded corner */
    }
    .card-header .form-control-sm {
        max-width: 300px; /* Batasi lebar search bar */
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Data Petugas Keamanan - {{ $fakultasKomandan }}</h1>
        {{-- Komandan mungkin tidak bisa menambah karyawan, tergantung kebutuhan --}}
        {{-- <a href="#" class="btn btn-primary btn-sm">
            <i class="bi bi-plus-circle me-1"></i> Tambah Petugas (Jika Diperlukan)
        </a> --}}
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Petugas</h6>
            <form action="{{ route('komandan.karyawan.index') }}" method="GET" class="d-inline-block">
                <div class="input-group input-group-sm">
                    <input type="text" name="search" class="form-control" placeholder="Cari NIK atau Nama..." value="{{ request('search') }}">
                    <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-search"></i></button>
                    @if(request('search'))
                    <a href="{{ route('komandan.karyawan.index') }}" class="btn btn-outline-danger" title="Reset Pencarian"><i class="bi bi-x-lg"></i></a>
                    @endif
                </div>
            </form>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTableKaryawanKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Lengkap</th>
                            <th>Jabatan</th>
                            <th>No. HP</th>
                            <th>Foto</th>
                            <th>Program Studi</th>
                            <th>Status Wajah</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($karyawans as $index => $karyawan)
                        <tr>
                            <td class="text-center">{{ $karyawans->firstItem() + $index }}</td>
                            <td>{{ $karyawan->nik }}</td>
                            <td>{{ $karyawan->nama_lengkap }}</td>
                            <td>{{ $karyawan->jabatan }}</td>
                            <td>{{ $karyawan->no_hp }}</td>
                            <td class="text-center">
                                @if($karyawan->foto)
                                    <img src="{{ asset('storage/' . $karyawan->foto) }}" alt="Foto {{ $karyawan->nama_lengkap }}" class="img-thumbnail-xs">
                                @else
                                    <span class="text-muted">N/A</span>
                                @endif
                            </td>
                            <td>{{ $karyawan->departemen ?? 'N/A' }}</td>
                            <td class="text-center">
                                @if($karyawan->face_embedding)
                                    <span class="badge bg-success">Terdaftar</span>
                                @else
                                    <span class="badge bg-warning text-dark">Belum</span>
                                @endif
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Belum ada data petugas keamanan di fakultas ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $karyawans->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\komandan\laporan\index.blade.php
{{--resources\views\komandan\laporan\index.blade.php--}}

@extends('admin.layouts.app')

@section('title', 'Laporan Petugas - Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem; /* Slightly increase padding for readability */
        vertical-align: middle; /* Center content vertically */
    }
    .table td {
        line-height: 1.4; /* Improve line spacing */
    }
    .form-select-sm, .form-control-sm { 
        font-size: 0.875rem; 
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Laporan Petugas Keamanan</h1>
    <p class="mb-4">Menampilkan semua laporan yang dikirim oleh petugas keamanan di {{ $fakultasKomandan }}.</p>

    {{-- Card Filter --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.laporan.index') }}">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_mulai" class="form-label">Tanggal Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="tanggal_akhir" class="form-label">Tanggal Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="nik_karyawan" class="form-label">Username Petugas:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Username">
                    </div>
                     <div class="col-md-3 mb-3">
                        <label for="nama_karyawan" class="form-label">Nama Petugas:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Nama">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <label for="jenis_laporan" class="form-label">Jenis Laporan:</label>
                        <select name="jenis_laporan" id="jenis_laporan" class="form-select form-select-sm">
                            <option value="">Semua Jenis</option>
                            <option value="harian" {{ request('jenis_laporan') == 'harian' ? 'selected' : '' }}>Harian</option>
                            <option value="kegiatan" {{ request('jenis_laporan') == 'kegiatan' ? 'selected' : '' }}>Kegiatan</option>
                            <option value="masalah" {{ request('jenis_laporan') == 'masalah' ? 'selected' : '' }}>Masalah</option>
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="status_laporan" class="form-label">Status Laporan:</label>
                        <select name="status_laporan" id="status_laporan" class="form-select form-select-sm">
                            <option value="">Semua Status</option>
                            <option value="belum_ditinjau" {{ request('status_laporan') == 'belum_ditinjau' ? 'selected' : '' }}>Belum Ditinjau</option>
                            <option value="Diterima" {{ request('status_laporan') == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                            <option value="Ditolak" {{ request('status_laporan') == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                            <option value="Perlu Revisi" {{ request('status_laporan') == 'Perlu Revisi' ? 'selected' : '' }}>Perlu Revisi</option>
                        </select>
                    </div>
                    <div class="col-md-3 align-self-end mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-funnel-fill"></i> Filter</button>
                        <a href="{{ route('komandan.laporan.index') }}" class="btn btn-secondary btn-sm"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{-- Card Daftar Laporan --}}
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Laporan Petugas</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTableLaporanKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            {{-- Menambahkan class "text-center" pada semua header --}}
                            <th class="text-center" style="width: 5%;">No</th>
                            <th class="text-center" style="width: 15%;">Waktu Laporan</th>
                            <th class="text-center" style="width: 20%;">Petugas</th>
                            <th class="text-center" style="width: 10%;">Jenis</th>
                            <th class="text-center">Keterangan</th>
                            <th class="text-center" style="width: 12%;">Status</th>
                            <th class="text-center" style="width: 8%;">Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @php
                            use Illuminate\Support\Str;
                        @endphp
                        @forelse ($laporans as $index => $laporan)
                        <tr>
                            {{-- Menambahkan "text-center" untuk kolom No --}}
                            <td class="text-center">{{ $laporans->firstItem() + $index }}</td>
                            <td>
                                {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('D MMM YY') }}
                                <br>
                                <small class="text-muted">{{ $laporan->jam }}</small>
                            </td>
                            <td>
                                {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}
                                <br>
                                <small class="text-muted">{{ $laporan->nik }}</small>
                            </td>
                            {{-- Menambahkan "text-center" untuk kolom Jenis --}}
                            <td class="text-center">
                                @php
                                    $badgeClass = 'bg-secondary'; // Default color
                                    if ($laporan->jenis_laporan == 'harian') $badgeClass = 'bg-primary';
                                    elseif ($laporan->jenis_laporan == 'kegiatan') $badgeClass = 'bg-success';
                                    elseif ($laporan->jenis_laporan == 'masalah') $badgeClass = 'bg-danger';
                                @endphp
                                <span class="badge {{ $badgeClass }} text-capitalize">{{ $laporan->jenis_laporan }}</span>
                            </td>
                            <td>{{ Str::limit($laporan->keterangan, 70) }}</td>
                            {{-- Menambahkan "text-center" untuk kolom Status --}}
                            <td class="text-center">
                                @if($laporan->status_admin)
                                    <span class="badge 
                                        @if($laporan->status_admin == 'Diterima') bg-success
                                        @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                        @elseif($laporan->status_admin == 'Perlu Revisi') bg-warning text-dark
                                        @else bg-secondary @endif">
                                        {{ $laporan->status_admin }}
                                    </span>
                                @else
                                    <span class="badge bg-secondary">Belum Ditinjau</span>
                                @endif
                            </td>
                            {{-- Menambahkan "text-center" untuk kolom Aksi --}}
                            <td class="text-center">
                                <a href="{{ route('komandan.laporan.show', $laporan->_id) }}" 
                                   class="btn btn-info btn-sm py-0 px-1" 
                                   title="Lihat Detail Laporan">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="7" class="text-center">Tidak ada data laporan yang sesuai dengan filter.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3">
                {{ $laporans->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\komandan\laporan\show.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Laporan Petugas - Fakultas ' . $fakultasKomandan)

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Laporan Petugas</h1>
        <a href="{{ route('komandan.laporan.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Daftar Laporan
        </a>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Informasi Laporan ({{ $fakultasKomandan }})</h6>
                </div>
                <div class="card-body">
                    <table class="table table-borderless table-sm">
                        <tr>
                            <th style="width: 30%;">ID Laporan</th>
                            <td>: {{ $laporan->_id }}</td>
                        </tr>
                        <tr>
                            <th>Tanggal Laporan</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->tanggal)->isoFormat('dddd, D MMMM YYYY') }}</td>
                        </tr>
                        <tr>
                            <th>Jam Laporan</th>
                            <td>: {{ $laporan->jam }}</td>
                        </tr>
                        <tr>
                            <th>Username Petugas</th>
                            <td>: {{ $laporan->nik }}</td>
                        </tr>
                        <tr>
                            <th>Nama Petugas</th>
                            <td>: {{ $laporan->karyawan->nama_lengkap ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jabatan</th>
                            <td>: {{ $laporan->karyawan->jabatan ?? 'N/A' }}</td>
                        </tr>
                        <tr>
                            <th>Jenis Laporan</th>
                            <td>: <span class="badge bg-info text-capitalize">{{ $laporan->jenis_laporan }}</span></td>
                        </tr>
                        <tr>
                            <th>Lokasi Pengiriman</th>
                            <td>: {{ $laporan->lokasi }}</td>
                        </tr>
                        <tr>
                            <th class="align-top">Keterangan</th>
                            <td class="align-top">: <div style="white-space: pre-wrap;">{{ $laporan->keterangan }}</div></td>
                        </tr>
                        <tr>
                            <th>Foto Bukti</th>
                            <td>:
                                @if($laporan->foto)
                                <a href="{{ $laporan->foto_url }}" target="_blank">
                                    <img src="{{ $laporan->foto_url }}" alt="Foto Bukti" class="img-thumbnail mt-1" style="max-width: 250px; max-height: 250px;">
                                </a>
                                @else
                                Tidak ada foto bukti.
                                @endif
                            </td>
                        </tr>
                        <tr>
                            <th>Foto Verifikasi Wajah</th>
                            <td>:
                                @if($laporan->face_verification_image)
                                <a href="{{ $laporan->face_verification_url }}" target="_blank">
                                    <img src="{{ $laporan->face_verification_url }}" alt="Foto Verifikasi Wajah" class="img-thumbnail mt-1" style="max-width: 150px; max-height: 150px;">
                                </a>
                                @else
                                Tidak ada foto verifikasi.
                                @endif
                            </td>
                        </tr>
                         <tr>
                            <th>Tanggal Dibuat</th>
                            <td>: {{ \Carbon\Carbon::parse($laporan->created_at)->isoFormat('D MMM YYYY, HH:mm:ss') }}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Status & Tindakan</h6>
                </div>
                <div class="card-body">
                    <p><strong>Status Saat Ini:</strong>
                        @if($laporan->status_admin)
                            <span class="badge 
                                @if($laporan->status_admin == 'Diterima') bg-success
                                @elseif($laporan->status_admin == 'Ditolak') bg-danger
                                {{-- @elseif($laporan->status_admin == 'Perlu Revisi') bg-warning text-dark --}}
                                @else bg-secondary @endif">
                                {{ $laporan->status_admin }}
                            </span>
                            @if($laporan->tanggal_peninjauan_admin)
                                <small class="d-block text-muted">Ditinjau pada: {{ \Carbon\Carbon::parse($laporan->tanggal_peninjauan_admin)->isoFormat('D MMM YYYY, HH:mm') }}</small>
                            @endif
                        @else
                            <span class="badge bg-secondary">Belum Ditinjau</span>
                        @endif
                    </p>
                    @if($laporan->catatan_admin)
                    <p><strong>Catatan:</strong><br>
                        <small class="text-muted" style="white-space: pre-wrap;">{{ $laporan->catatan_admin }}</small>
                    </p>
                    @endif

                    <hr>
                    <form action="{{ route('komandan.laporan.update_status', $laporan->_id) }}" method="POST">
                        @csrf
                        <div class="mb-3">
                            <label for="status_admin" class="form-label">Ubah Status:</label>
                            <select name="status_admin" id="status_admin" class="form-select @error('status_admin') is-invalid @enderror" required>
                                <option value="">-- Pilih Status --</option>
                                <option value="Diterima" {{ old('status_admin', $laporan->status_admin) == 'Diterima' ? 'selected' : '' }}>Diterima</option>
                                <option value="Ditolak" {{ old('status_admin', $laporan->status_admin) == 'Ditolak' ? 'selected' : '' }}>Ditolak</option>
                                {{-- Opsi "Perlu Revisi" dihapus --}}
                            </select>
                            @error('status_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <div class="mb-3">
                            <label for="catatan_admin" class="form-label">Catatan (Opsional):</label>
                            <textarea name="catatan_admin" id="catatan_admin" rows="3" class="form-control @error('catatan_admin') is-invalid @enderror">{{ old('catatan_admin', $laporan->catatan_admin) }}</textarea>
                            @error('catatan_admin') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">Update Status</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\komandan\laporan_kinerja\cetak.blade.php
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cetak Laporan Kinerja - {{ $fakultasKomandan }} - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}</title>
    <link href="[https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css](https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css)" rel="stylesheet">
    <style>
        body {
            font-family: 'Times New Roman', Times, serif;
            color: #000;
        }
        .header-container {
            text-align: center;
            margin-bottom: 20px;
            border-bottom: 3px double #000;
            padding-bottom: 15px;
        }
        .header-container img {
            width: 80px;
            height: auto;
            position: absolute;
            left: 20px;
            top: 20px;
        }
        .report-title {
            font-size: 1.5rem;
            font-weight: bold;
            text-transform: uppercase;
            margin-bottom: 5px;
        }
         .report-subtitle {
            font-size: 1rem;
            margin-bottom: 15px;
        }
        .report-period {
            font-size: 1.1rem;
            font-weight: bold;
        }
        .table {
            width: 100%;
            border-collapse: collapse;
            font-size: 12px;
        }
        .table th, .table td {
            border: 1px solid #000 !important;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
        }
        .table th {
            background-color: #e9ecef;
            font-weight: bold;
        }
        .signature-section {
            margin-top: 50px;
            page-break-inside: avoid;
        }
        .signature-box {
            width: 300px;
            float: right;
            text-align: center;
        }
        .signature-box .signature-name {
            margin-top: 70px;
            font-weight: bold;
            text-decoration: underline;
        }
        .signature-box .signature-nik {
            margin-top: 5px;
        }

        @media print {
            body {
                margin: 0;
                color: #000;
            }
            .container {
                width: 100% !important;
                padding: 0 !important;
                margin: 0 !important;
            }
            .no-print {
                display: none;
            }
            .page-break {
                page-break-after: always;
            }
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="header-container">
            {{-- Ganti URL logo ini dengan URL logo instansi Anda --}}
            <img src="{{ asset('assets/img/Undip Logo.png') }}" alt="Logo">
            <h4>KEMENTERIAN PENDIDIKAN, KEBUDAYAAN,<br>RISET, DAN TEKNOLOGI</h4>
            <h4 class="fw-bold">UNIVERSITAS DIPONEGORO</h4>
            <small>Jalan Prof. H. Soedarto, S.H., Tembalang, Semarang, Jawa Tengah 50275</small>
        </div>

        <h3 class="text-center fw-bold text-decoration-underline mb-3">LAPORAN KINERJA BULANAN</h3>
        
        <table class="table table-borderless table-sm mb-4" style="font-size: 14px;">
            <tr>
                <td style="width: 15%;">Unit Kerja</td>
                <td style="width: 2%;">:</td>
                <td>Satuan Pengamanan {{ $fakultasKomandan }}</td>
            </tr>
             <tr>
                <td>Periode</td>
                <td>:</td>
                <td>{{ $namaBulan[(int)$bulan] }} {{ $tahun }}</td>
            </tr>
        </table>
       

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Username</th>
                    <th>Nama Petugas</th>
                    <th>Hari Kerja Terjadwal</th>
                    <th>Hari Hadir Aktual</th>
                    <th>Persentase Kehadiran (%)</th>
                    <th>Total Jam Kerja Terjadwal</th>
                    <th>Total Jam Kerja Aktual</th>
                </tr>
            </thead>
            <tbody>
                @forelse ($laporanKinerjaData as $index => $data)
                <tr>
                    <td>{{ $index + 1 }}</td>
                    <td class="text-start">{{ $data['nik'] }}</td>
                    <td class="text-start">{{ $data['nama_lengkap'] }}</td>
                    <td>{{ $data['jumlah_hari_kerja_terjadwal'] }}</td>
                    <td>{{ $data['jumlah_hari_hadir'] }}</td>
                    <td>{{ $data['persentase_kehadiran'] }}%</td>
                    <td>{{ $data['total_jam_kerja_jadwal_format'] }}</td>
                    <td>{{ $data['total_jam_kerja_aktual_format'] }}</td>
                </tr>
                @empty
                <tr>
                    <td colspan="8" class="text-center">Tidak ada data kinerja untuk ditampilkan pada periode ini.</td>
                </tr>
                @endforelse
            </tbody>
        </table>

        <div class="signature-section">
            <div class="signature-box">
                <div>Semarang, {{ \Carbon\Carbon::now()->locale('id')->isoFormat('D MMMM YYYY') }}</div>
                <div>Komandan Satuan Pengamanan</div>
                <div> {{ $fakultasKomandan }}</div>
                <div class="signature-name">{{ $komandan->nama_lengkap }}</div>
                <div class="signature-nik">NIK. {{ $komandan->nik }}</div>
            </div>
        </div>
    </div>

    <script>
        window.onload = function() {
            window.print();
        }
    </script>
</body>
</html>

resources\views\komandan\laporan_kinerja\index.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Kinerja Bulanan - Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
    .text-success { color: #1cc88a !important; }
    .text-primary { color: #4e73df !important; }
    .text-muted-light { color: #858796 !important; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Kinerja Bulanan Petugas</h1>
        <span class="badge bg-info text-white p-2">Fakultas: {{ $fakultasKomandan }}</span>
    </div>
    <p class="mb-4">Menampilkan ringkasan kinerja bulanan petugas keamanan di fakultas Anda.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode Laporan</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.laporankinerja.index') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                     <div class="col-md-2">
                        <a href="{{ route('komandan.laporankinerja.index') }}" class="btn btn-secondary btn-sm w-100"><i class="bi bi-arrow-clockwise"></i> Reset</a>
                    </div>
                    {{-- Tombol Cetak Baru --}}
                    <div class="col-md-2">
                        <a href="{{ route('komandan.laporankinerja.cetak', request()->query()) }}" target="_blank" class="btn btn-success btn-sm w-100">
                            <i class="bi bi-printer-fill"></i> Cetak
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Laporan Kinerja - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}
            </h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="tableLaporanKinerja" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Hari Kerja Terjadwal</th>
                            <th>Hari Hadir Aktual</th>
                            <th>Persentase Kehadiran</th>
                            <th>Total Jam Kerja Terjadwal</th>
                            <th>Total Jam Kerja Aktual</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($laporanKinerjaData as $index => $data)
                        <tr>
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $data['nik'] }}</td>
                            <td>{{ $data['nama_lengkap'] }}</td>
                            <td class="text-center">{{ $data['jumlah_hari_kerja_terjadwal'] }} hari</td>
                            <td class="text-center">{{ $data['jumlah_hari_hadir'] }} hari</td>
                            <td class="text-center">
                                <div class="progress" style="height: 20px; font-size: 0.75rem;">
                                    <div class="progress-bar bg-{{ $data['persentase_kehadiran'] >= 80 ? 'success' : ($data['persentase_kehadiran'] >= 60 ? 'warning' : 'danger') }}" 
                                         role="progressbar" 
                                         style="width: {{ $data['persentase_kehadiran'] }}%;" 
                                         aria-valuenow="{{ $data['persentase_kehadiran'] }}" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                        {{ $data['persentase_kehadiran'] }}%
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">{{ $data['total_jam_kerja_jadwal_format'] }}</td>
                            <td class="text-center">{{ $data['total_jam_kerja_aktual_format'] }}</td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data kinerja untuk ditampilkan pada periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
{{-- Script tambahan jika diperlukan, misal untuk export atau sorting tabel client-side --}}
@endpush

resources\views\komandan\patroli\index.blade.php
{{-- File: resources/views/komandan/patroli/index.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Histori Patroli Petugas - Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.5rem;
        vertical-align: middle;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
    .action-buttons .btn {
        margin-right: 0.25rem;
    }
    .fixed-alert {
        position: fixed;
        top: 70px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
        min-width: 300px;
        max-width: 600px;
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,.15);
    }
    /* PERBAIKAN: CSS untuk mengatur ulang layout paginasi */
    .pagination-container nav > div {
        display: flex;
        flex-direction: column-reverse; /* Membalik urutan: link di atas, teks di bawah */
        align-items: center;
        gap: 0.5rem; /* Memberi jarak antara link dan teks */
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Histori Patroli Petugas</h1>
    </div>
    <p class="mb-4">Menampilkan histori patroli petugas keamanan di {{ $fakultasKomandan }}.</p>

    @if(session('success'))
        <div class="alert alert-success alert-dismissible fade show fixed-alert" role="alert" id="pageSuccessMessage">
            {{ session('success') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif
    @if(session('error'))
         <div class="alert alert-danger alert-dismissible fade show fixed-alert" role="alert" id="pageErrorMessage">
            {{ session('error') }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    @endif


    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Patroli</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.patroli.index') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="nik_karyawan" class="form-label mb-1 small">Username Petugas:</label>
                        <input type="text" name="nik_karyawan" id="nik_karyawan" class="form-control form-control-sm" value="{{ request('nik_karyawan') }}" placeholder="Masukkan Username">
                    </div>
                    <div class="col-md-3">
                        <label for="nama_karyawan" class="form-label mb-1 small">Nama Petugas:</label>
                        <input type="text" name="nama_karyawan" id="nama_karyawan" class="form-control form-control-sm" value="{{ request('nama_karyawan') }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_mulai" class="form-label mb-1 small">Tgl Mulai:</label>
                        <input type="date" name="tanggal_mulai" id="tanggal_mulai" class="form-control form-control-sm" value="{{ request('tanggal_mulai') }}">
                    </div>
                    <div class="col-md-2">
                        <label for="tanggal_akhir" class="form-label mb-1 small">Tgl Akhir:</label>
                        <input type="date" name="tanggal_akhir" id="tanggal_akhir" class="form-control form-control-sm" value="{{ request('tanggal_akhir') }}">
                    </div>
                    <div class="col-md-1">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                    <div class="col-md-1">
                        <a href="{{ route('komandan.patroli.index') }}" class="btn btn-secondary btn-sm w-100" title="Reset Filter"><i class="bi bi-arrow-clockwise"></i></a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Daftar Patroli Selesai</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePatroliKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Petugas (Username)</th>
                            <th>Waktu Mulai</th>
                            <th>Waktu Selesai</th>
                            <th>Durasi</th>
                            <th>Jarak (km)</th>
                            <th>Status</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($patrols as $index => $patrol)
                        <tr>
                            <td class="text-center">{{ $patrols->firstItem() + $index }}</td>
                            <td>
                                {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }}
                                <small class="d-block text-muted">({{ $patrol->karyawan_nik }})</small>
                            </td>
                            <td class="text-center">{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('D MMM YY, HH:mm') }}</td>
                            <td class="text-center">{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('D MMM YY, HH:mm') : '-' }}</td>
                            <td class="text-center">
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d:%02d:%02d', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                            <td class="text-center">{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }}</td>
                            <td class="text-center">
                                <span class="badge bg-{{ $patrol->status == 'selesai' ? 'success' : ($patrol->status == 'dibatalkan' ? 'danger' : 'secondary') }} text-capitalize">
                                    {{ $patrol->status }}
                                </span>
                            </td>
                            <td class="text-center action-buttons">
                                <a href="{{ route('komandan.patroli.show', $patrol->_id) }}" class="btn btn-info btn-sm py-0 px-1" title="Lihat Detail">
                                    <i class="bi bi-eye-fill"></i>
                                </a>
                                {{-- Tombol Hapus Dihilangkan --}}
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data patroli yang ditemukan.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            {{-- PERBAIKAN TAMPILAN PAGINASI --}}
            @if ($patrols->hasPages())
            <div class="pagination-container mt-3">
                {{ $patrols->appends(request()->query())->links() }}
            </div>
            @endif
            {{-- AKHIR PERBAIKAN --}}
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })

    // Script untuk auto-hide alert setelah beberapa detik
    window.setTimeout(function() {
        $(".fixed-alert").fadeTo(500, 0).slideUp(500, function(){
            $(this).remove(); 
        });
    }, 4000); // 4 detik
</script>
@endpush

resources\views\komandan\patroli\show.blade.php
{{-- File: resources/views/komandan/patroli/show.blade.php --}}
@extends('admin.layouts.app')

@section('title', 'Detail Patroli Petugas - Fakultas ' . $fakultasKomandan)

@push('styles')
{{-- Leaflet CSS --}}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
<style>
    #mapKomandanDetail {
        width: 100%;
        height: 450px;
        border-radius: .375rem; 
        border: 1px solid #e3e6f0; 
    }
    .info-table th {
        width: 30%;
        font-weight: 500;
        background-color: #f8f9fc;
    }
    .info-table td, .info-table th {
        padding: .6rem .75rem;
        font-size: 0.9rem;
    }
    .face-verification-section {
        background-color: #f8f9fc;
        border-radius: .375rem;
        padding: 1rem;
        margin-top: 1rem;
    }
    .face-verification-image {
        max-width: 200px;
        max-height: 200px;
        border-radius: .375rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Patroli Petugas</h1>
        <a href="{{ route('komandan.patroli.index') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Histori Patroli
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">
                Patroli oleh: {{ $patrol->karyawan->nama_lengkap ?? 'N/A' }} ({{ $patrol->karyawan_nik }})
            </h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-lg-5 mb-4 mb-lg-0">
                    <h5 class="mb-3">Informasi Patroli</h5>
                    <table class="table table-bordered table-sm info-table">
                        <tr>
                            <th>ID Patroli</th>
                            <td>{{ $patrol->_id }}</td>
                        </tr>
                        <tr>
                            <th>Waktu Mulai</th>
                            <td>{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</td>
                        </tr>
                        <tr>
                            <th>Waktu Selesai</th>
                            <td>{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') : '-' }}</td>
                        </tr>
                        <tr>
                            <th>Durasi</th>
                            <td>
                                @php
                                    $duration = $patrol->duration_seconds ?? 0;
                                    $hours = floor($duration / 3600);
                                    $minutes = floor(($duration % 3600) / 60);
                                    $seconds = $duration % 60;
                                    echo sprintf('%02d jam %02d menit %02d detik', $hours, $minutes, $seconds);
                                @endphp
                            </td>
                        </tr>
                        <tr>
                            <th>Jarak Tempuh</th>
                            <td>{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }} km</td>
                        </tr>
                        <tr>
                            <th>Status</th>
                            <td>
                                <span class="badge bg-{{ $patrol->status == 'selesai' ? 'success' : ($patrol->status == 'dibatalkan' ? 'danger' : 'secondary') }} text-capitalize">
                                    {{ $patrol->status }}
                                </span>
                            </td>
                        </tr>
                        {{-- NEW: Face verification status --}}
                        <tr>
                            <th>Verifikasi Wajah</th>
                            <td>
                                @if($patrol->face_verified ?? false)
                                    <span class="badge bg-success">
                                        <i class="bi bi-check-circle me-1"></i>Terverifikasi
                                    </span>
                                    @if($patrol->face_verification_time)
                                        <br><small class="text-muted">
                                            {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('D MMM YYYY HH:mm') }}
                                        </small>
                                    @endif
                                @else
                                    <span class="badge bg-warning">
                                        <i class="bi bi-exclamation-triangle me-1"></i>Tidak Terverifikasi
                                    </span>
                                @endif
                            </td>
                        </tr>
                    </table>

                    {{-- NEW: Face verification section --}}
                    @if($patrol->face_verified && $patrol->face_verification_image)
                    <div class="face-verification-section">
                        <h6 class="mb-3">
                            <i class="bi bi-person-check me-2"></i>Foto Verifikasi Wajah
                        </h6>
                        <div class="text-center">
                            <img src="{{ asset('storage/' . $patrol->face_verification_image) }}" 
                                 alt="Foto Verifikasi Wajah" 
                                 class="face-verification-image"
                                 onclick="showImageModal(this.src)">
                            @if($patrol->face_verification_time)
                            <p class="text-muted mt-2 mb-0">
                                <small>Diverifikasi pada: {{ \Carbon\Carbon::parse($patrol->face_verification_time)->isoFormat('dddd, D MMMM YYYY HH:mm:ss') }}</small>
                            </p>
                            @endif
                        </div>
                    </div>
                    @endif
                </div>
                <div class="col-lg-7">
                    <h5 class="mb-3">Jejak Patroli</h5>
                    <div id="mapKomandanDetail"></div>
                </div>
            </div>
        </div>
    </div>
</div>

{{-- Modal for viewing face verification image --}}
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Foto Verifikasi Wajah</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="Foto Verifikasi" class="img-fluid">
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
{{-- Leaflet JS --}}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pathData = @json($pathForMap ?? []);
        const officeLocation = @json($officeLocation ?? null);
        const officeRadius = @json($officeRadius ?? null);
        const officeLat = officeLocation ? officeLocation.coordinates[1] : null;
        const officeLng = officeLocation ? officeLocation.coordinates[0] : null;

        const mapContainer = document.getElementById('mapKomandanDetail');
        if (!mapContainer) return;

        // Tentukan titik tengah peta. Prioritaskan lokasi kantor.
        let centerLat, centerLng;
        if (officeLat && officeLng) {
            centerLat = officeLat;
            centerLng = officeLng;
        } else if (pathData && pathData.length > 0) {
            centerLat = pathData[Math.floor(pathData.length / 2)][0];
            centerLng = pathData[Math.floor(pathData.length / 2)][1];
        } else {
            centerLat = -6.9927; // Default Semarang
            centerLng = 110.4204;
        }

        const mapKomandanDetail = L.map('mapKomandanDetail').setView([centerLat, centerLng], 15);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(mapKomandanDetail);

        let bounds = L.latLngBounds();

        // Gambar jejak patroli jika ada
        if (pathData && pathData.length > 0) {
            const patrolPolylineDetail = L.polyline(pathData, { color: '#007bff', weight: 5 }).addTo(mapKomandanDetail);
            bounds.extend(patrolPolylineDetail.getBounds());

            // Marker Mulai
            L.marker(pathData[0], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapKomandanDetail).bindPopup('Mulai Patroli');
            
            // Marker Selesai (jika ada lebih dari 1 titik)
            if (pathData.length > 1) {
                L.marker(pathData[pathData.length - 1], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapKomandanDetail).bindPopup('Selesai Patroli');
            }
        }

        // Gambar lokasi kerja dan radius jika ada
        if (officeLat && officeLng && officeRadius) {
            const officeCircle = L.circle([officeLat, officeLng], {
                color: '#dc3545',
                fillColor: '#dc3545',
                fillOpacity: 0.2,
                radius: officeRadius
            }).addTo(mapKomandanDetail).bindPopup('Radius Lokasi Kerja');
            bounds.extend(officeCircle.getBounds());
        }

        // Sesuaikan zoom peta jika ada objek yang digambar
        if (bounds.isValid()) {
            mapKomandanDetail.fitBounds(bounds.pad(0.2)); // Beri sedikit padding
        } else if (!pathData || pathData.length === 0) {
            // Jika tidak ada data sama sekali
            mapContainer.innerHTML = '<div class="d-flex justify-content-center align-items-center h-100"><p class="text-muted p-5">Tidak ada data jejak atau lokasi kerja untuk ditampilkan.</p></div>';
        }
    });

    // Function to show image in modal
    function showImageModal(imageSrc) {
        document.getElementById('modalImage').src = imageSrc;
        const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
        imageModal.show();
    }

resources\views\komandan\presensi\detail_karyawan.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Presensi Petugas: ' . $karyawan->nama_lengkap)

@push('styles')
<style>
    .table-sm th, .table-sm td { font-size: 0.85rem; padding: 0.4rem; vertical-align: middle; }
    .img-thumbnail-xs { width: 40px; height: 40px; object-fit: cover; border-radius: 0.25rem; }
    .form-control-sm, .form-select-sm { font-size: 0.875rem; }
    .profile-header { background-color: #f8f9fc; padding: 1.5rem; border-radius: .5rem; margin-bottom: 1.5rem; border: 1px solid #e3e6f0; }
    .profile-header img { width: 80px; height: 80px; object-fit: cover; border: 3px solid #fff; box-shadow: 0 .125rem .25rem rgba(0,0,0,.075); }
    .profile-header h4 { margin-bottom: 0.25rem; font-weight: 600; }
    .profile-header p { margin-bottom: 0; font-size: 0.9rem; color: #5a5c69; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Detail Presensi Petugas</h1>
        <a href="{{ route('komandan.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi
        </a>
    </div>

    <div class="profile-header">
        <div class="d-flex align-items-center">
            <img src="{{ $karyawan->foto ? asset('storage/' . $karyawan->foto) : asset('assets/img/sample/avatar/avatar1.jpg') }}" 
                 alt="Foto {{ $karyawan->nama_lengkap }}" class="rounded-circle me-3"
                 onerror="this.onerror=null;this.src='{{ asset('assets/img/sample/avatar/avatar1.jpg') }}';">
            <div>
                <h4>{{ $karyawan->nama_lengkap }}</h4>
                <p class="mb-0">Username: {{ $karyawan->nik }}</p>
                <p>Jabatan: {{ $karyawan->jabatan }}</p>
                <p>Fakultas: {{ $fakultasKomandan }}</p>
            </div>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.presensi.detail_karyawan', $karyawan->nik) }}">
                <div class="row align-items-end gx-2">
                    <div class="col-md-4 mb-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Histori Presensi - {{ $namaBulan[(int)$bulan] }} {{ $tahun }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTableDetailPresensiKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Hari</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($historiPresensi as $index => $data)
                        @php $tanggalCarbon = \Carbon\Carbon::parse($data->tgl_presensi); @endphp
                        <tr> 
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('D MMM YY') }}</td>
                            <td>{{ $tanggalCarbon->isoFormat('dddd') }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_in == 'admin' ? 'Admin' : ($data->lokasi_in ?? '-') }}</small></td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_out == 'admin' ? 'Admin' : ($data->lokasi_out ?? '-') }}</small></td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="9" class="text-center">Tidak ada data presensi untuk periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\komandan\presensi\edit.blade.php
@extends('admin.layouts.app')

@section('title', 'Edit Data Presensi Petugas')

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Edit Data Presensi Petugas</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Petugas: {{ $presensi->karyawan->nama_lengkap ?? $presensi->nik }} (Fakultas: {{ $fakultasKomandan }})
                <br> Tanggal: {{ \Carbon\Carbon::parse($presensi->tgl_presensi)->isoFormat('D MMMM YYYY') }}
            </h6>
        </div>
        <div class="card-body">
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif

            <form action="{{ route('komandan.presensi.update', $presensi->_id) }}" method="POST">
                @csrf
                @method('PUT')

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="nik_display" class="form-label">NIK</label>
                        <input type="text" id="nik_display" class="form-control" value="{{ $presensi->nik }}" readonly>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="nama_display" class="form-label">Nama Petugas</label>
                        <input type="text" id="nama_display" class="form-control" value="{{ $presensi->karyawan->nama_lengkap ?? 'N/A' }}" readonly>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="tgl_presensi_edit" class="form-label">Tanggal Presensi <span class="text-danger">*</span></label>
                    <input type="date" class="form-control @error('tgl_presensi_edit') is-invalid @enderror" id="tgl_presensi_edit" name="tgl_presensi_edit" value="{{ old('tgl_presensi_edit', \Carbon\Carbon::parse($presensi->tgl_presensi)->format('Y-m-d')) }}" required>
                    @error('tgl_presensi_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="jam_in_edit" class="form-label">Jam Masuk (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_in_edit') is-invalid @enderror" id="jam_in_edit" name="jam_in_edit" value="{{ old('jam_in_edit', $presensi->jam_in) }}">
                        @error('jam_in_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        @if($presensi->foto_in)
                        <small class="form-text text-muted">Foto Masuk: <a href="{{ asset('storage/' . $presensi->foto_in) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Masuk: {{ $presensi->lokasi_in ?? '-' }}</small>
                        @endif
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="jam_out_edit" class="form-label">Jam Pulang (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_out_edit') is-invalid @enderror" id="jam_out_edit" name="jam_out_edit" value="{{ old('jam_out_edit', $presensi->jam_out) }}">
                        @error('jam_out_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                         @if($presensi->foto_out)
                        <small class="form-text text-muted">Foto Pulang: <a href="{{ asset('storage/' . $presensi->foto_out) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Pulang: {{ $presensi->lokasi_out ?? '-' }}</small>
                        @endif
                    </div>
                </div>
                
                <div class="alert alert-warning small mt-3">
                    <strong>Perhatian:</strong> Mengubah data presensi akan tercatat. Pastikan perubahan yang dilakukan sudah benar. Foto dan lokasi asli tidak dapat diubah melalui form ini.
                </div>

                <div class="mt-4">
                    <a href="{{ url()->previous() != url()->current() ? url()->previous() : route('komandan.presensi.rekapitulasi') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

resources\views\komandan\presensi\harian.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Presensi Harian - Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td { font-size: 0.85rem; padding: 0.4rem; vertical-align: middle; }
    .img-thumbnail-xs { width: 40px; height: 40px; object-fit: cover; border-radius: 0.25rem; }
    .form-control-sm, .form-select-sm { font-size: 0.875rem; }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Presensi Harian Petugas</h1>
        <a href="{{ route('komandan.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekapitulasi Bulanan
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Pilih Tanggal Laporan (Fakultas {{ $fakultasKomandan }})</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.presensi.harian') }}">
                <div class="row align-items-end gx-2">
                    <div class="col-md-4 mb-3">
                        <label for="tanggal" class="form-label mb-1 small">Tanggal:</label>
                        <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $tanggal ?? date('Y-m-d') }}" required>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm w-100"><i class="bi bi-search"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi Tanggal: {{ \Carbon\Carbon::parse($tanggal ?? date('Y-m-d'))->isoFormat('dddd, D MMMM YYYY') }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePresensiHarianKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Jabatan</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>

                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiHarian as $index => $data)
                        <tr>
                            <td class="text-center">{{ $index + 1 }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                    <a href="{{ route('komandan.presensi.detail_karyawan', $data->karyawan->nik) }}?bulan={{ \Carbon\Carbon::parse($data->tgl_presensi)->format('m') }}&tahun={{ \Carbon\Carbon::parse($data->tgl_presensi)->format('Y') }}">
                                        {{ $data->karyawan->nama_lengkap }}
                                    </a>
                                @else N/A @endif
                            </td>
                            <td>{{ $data->karyawan->jabatan ?? 'N/A' }}</td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_in ?? '-' }}</small></td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td><small>{{ $data->lokasi_out ?? '-' }}</small></td>

                        </tr>
                        @empty
                        <tr>
                            <td colspan="11" class="text-center">Tidak ada data presensi untuk tanggal ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\komandan\presensi\rekapitulasi.blade.php
@extends('admin.layouts.app')

@section('title', 'Rekapitulasi Presensi - Fakultas ' . $fakultasKomandan)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
        vertical-align: middle;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
    .form-select-sm, .form-control-sm {
        font-size: 0.875rem;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Rekapitulasi Presensi Petugas</h1>
    <p class="mb-4">Menampilkan data presensi petugas keamanan di {{ $fakultasKomandan }}.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Data Presensi</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('komandan.presensi.rekapitulasi') }}">
                <div class="row gx-2 gy-2 align-items-end">
                    <div class="col-md-3">
                        <label for="bulan" class="form-label mb-1 small">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulanIni == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="tahun" class="form-label mb-1 small">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahunIni == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="nik" class="form-label mb-1 small">Username Petugas:</label>
                        <input type="text" name="nik" id="nik" class="form-control form-control-sm" value="{{ $searchNik ?? '' }}" placeholder="Masukkan Username">
                    </div>
                     <div class="col-md-3">
                        <label for="nama" class="form-label mb-1 small">Nama Petugas:</label>
                        <input type="text" name="nama" id="nama" class="form-control form-control-sm" value="{{ $searchNama ?? '' }}" placeholder="Masukkan Nama">
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary btn-sm w-100" title="Filter"><i class="bi bi-funnel-fill"></i></button>
                    </div>
                </div>
                 <div class="mt-3">
                    <a href="{{ route('komandan.presensi.harian', ['tanggal' => date('Y-m-d')]) }}" class="btn btn-info btn-sm">
                        <i class="bi bi-calendar-day"></i> Laporan Harian Ini
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi ({{ $namaBulan[(int)$bulanIni] }} {{ $tahunIni }}) - {{ $fakultasKomandan }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" id="dataTablePresensiKomandan" width="100%" cellspacing="0">
                    <thead>
                        <tr class="text-center">
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Username</th>
                            <th>Nama Petugas</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiData as $index => $data)
                        <tr> 
                            <td class="text-center">{{ $presensiData->firstItem() + $index }}</td>
                            <td>{{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('dddd, D MMM YY') }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>
                                @if($data->karyawan)
                                <a href="{{ route('komandan.presensi.detail_karyawan', $data->karyawan->nik) }}?bulan={{$bulanIni}}&tahun={{$tahunIni}}">
                                    {{ $data->karyawan->nama_lengkap }}
                                </a>
                                @else
                                    {{ 'N/A' }}
                                @endif
                            </td>
                            <td class="text-center">{{ $data->jam_in ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_in == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" data-bs-toggle="tooltip" title="Lihat Foto Masuk" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Masuk" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                            <td class="text-center">{{ $data->jam_out ?? '-' }}</td>
                            <td class="text-center">
                                @if($data->foto_out == 'admin')
                                    <span class="badge bg-info">Admin</span>
                                @elseif($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" data-bs-toggle="tooltip" title="Lihat Foto Pulang" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Pulang" class="img-thumbnail-xs">
                                </a>
                                @else - @endif
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="8" class="text-center">Tidak ada data presensi untuk periode dan filter ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
            <div class="mt-3 d-flex justify-content-center">
                {{ $presensiData->appends(request()->query())->links() }}
            </div>
        </div>
    </div>
</div>
@endsection

@push('scripts')
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
@endpush

resources\views\layouts\bottomNav.blade.php
    <div class="appBottomMenu">
        <a href="{{ route('dashboard') }}" class="item {{ request()->routeIs('dashboard') ? 'active' : ''}}">
            <div class="col">
                <ion-icon name="home-outline"></ion-icon>
                <strong>Home</strong>
            </div>
        </a>
        <a href="{{ route('presensi.histori') }}" class="item {{ request()->routeIs('presensi.histori') ? 'active' : ''}}">
            <div class="col">
                <ion-icon name="time-outline"></ion-icon>
                <strong>Histori</strong>
            </div>
        </a>
        <a href="{{ route('presensi.create') }}" class="item {{ request()->routeIs('presensi.create') ? 'active' : '' }}">
            <div class="col">
                <div class="action-button large">
                    <ion-icon name="camera" role="img" class="md hydrated" aria-label="add outline"></ion-icon>
                </div>
            </div>
        </a>
        {{-- PERUBAHAN DI SINI --}}
        <a href="{{ route('laporan.index') }}" class="item {{ request()->routeIs('laporan.index') || request()->routeIs('laporan.create') ? 'active' : ''}}">
            <div class="col">
                <ion-icon name="document-text-outline"></ion-icon>
                <strong>Laporan</strong>
            </div>
        </a>
        <a href="{{ route('profile') }}" class="item {{ request()->routeIs('profile') || request()->routeIs('editprofile') ? 'active' : ''}}">
            <div class="col">
                <ion-icon name="people-outline" role="img" class="md hydrated" aria-label="people outline"></ion-icon>
                <strong>Profile</strong>
            </div>
        </a>
    </div>
    
resources\views\layouts\presensi.blade.php
<!doctype html>
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
    <meta name="viewport"
        content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="theme-color" content="#000000">
    <title>Dashboard</title>
    <meta name="description" content="Mobilekit HTML Mobile UI Kit">
    <meta name="keywords" content="bootstrap 4, mobile template, cordova, phonegap, mobile, html" />
    
    <link rel="icon" type="image/png" href="{{ asset('assets/img/favicon.png') }}?v=3">
    <link rel="apple-touch-icon" sizes="180x180" href="{{ asset('assets/img/icon/192x192.png') }}?v=3">
    <link rel="shortcut icon" href="{{ asset('assets/img/favicon.ico') }}?v=3" type="image/x-icon">
    <link rel="stylesheet" href="{{ asset('assets/css/style.css')}}">
    <link rel="manifest" href="{{ asset('__manifest.json') }}">
</head>

<body style="background-color:#e9ecef;">

    <div id="loader">
        <div class="spinner-border text-primary" role="status"></div>
    </div>
    @yield('header')
    <div id="appCapsule">
        @yield('content')
    </div>
    @include('layouts.bottomNav')
    @include('layouts.script')

</body>

</html>

resources\views\layouts\script.blade.php
    <!-- ///////////// Js Files ////////////////////  -->
    <!-- Jquery -->
    <script src="{{ asset('assets/js/lib/jquery-3.4.1.min.js')}}"></script>
    <!-- Bootstrap-->
    <script src="{{ asset('assets/js/lib/popper.min.js')}}"></script>
    <script src="{{ asset('assets/js/lib/bootstrap.min.js')}}"></script>
    <!-- Ionicons -->
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <!-- Owl Carousel -->
    <script src="{{ asset('assets/js/plugins/owl-carousel/owl.carousel.min.js')}}"></script>
    <!-- jQuery Circle Progress -->
    <script src="{{ asset('assets/js/plugins/jquery-circle-progress/circle-progress.min.js')}}"></script>
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/webcamjs/1.0.26/webcam.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>
    <!-- Base Js File -->
    <script src="{{ asset('assets/js/base.js')}}"></script>

    <script>
        am4core.ready(function () {

            
            am4core.useTheme(am4themes_animated);
            

            var chart = am4core.create("chartdiv", am4charts.PieChart3D);
            chart.hiddenState.properties.opacity = 0;

            chart.legend = new am4charts.Legend();

            chart.data = [
                {
                    country: "Hadir",
                    litres: 501.9
                },
                {
                    country: "Sakit",
                    litres: 301.9
                },
                {
                    country: "Izin",
                    litres: 201.1
                },
                {
                    country: "Terlambat",
                    litres: 165.8
                },
            ];



            var series = chart.series.push(new am4charts.PieSeries3D());
            series.dataFields.value = "litres";
            series.dataFields.category = "country";
            series.alignLabels = false;
            series.labels.template.text = "{value.percent.formatNumber('#.0')}%";
            series.labels.template.radius = am4core.percent(-40);
            series.labels.template.fill = am4core.color("white");
            series.colors.list = [
                am4core.color("#1171ba"),
                am4core.color("#fca903"),
                am4core.color("#37db63"),
                am4core.color("#ba113b"),
            ];
        }); 
    </script>

    @stack('myscript')

resources\views\patroli\detail.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        {{-- PERUBAHAN: Menambahkan parameter cache-busting --}}
        <a href="{{ route('patroli.histori', ['_cb' => now()->timestamp]) }}" class="headerButton">
            <ion-icon name="chevron-back-outline"></ion-icon>
        </a>
    </div>
    <div class="pageTitle">Detail Patroli</div>
    <div class="right"></div>
</div>
{{-- Leaflet CSS --}}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
<style>
    #mapDetail {
        width: 100%;
        height: 400px; /* Lebih tinggi untuk detail */
        border-radius: 10px;
        border: 1px solid #ddd;
        margin-bottom: 1rem;
    }
    .detail-info {
        padding: 1rem;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.07);
    }
    .detail-info p {
        margin-bottom: 0.75rem;
        font-size: 1rem;
        color: #495057;
    }
    .detail-info p strong {
        font-weight: 600;
        color: #007bff;
    }
    .detail-info ion-icon {
        vertical-align: middle;
        margin-right: 8px;
        font-size: 1.2em;
        color: #007bff;
    }
</style>
@endsection

@section('content')
<div class="section full" style="padding-top: 70px; padding-bottom: 70px;">
    <div class="wide-block pt-2 pb-2">

        <div class="detail-info mb-3">
            <p><ion-icon name="person-circle-outline"></ion-icon>Karyawan: <strong>{{ $karyawan->nama_lengkap }} ({{ $karyawan->nik }})</strong></p>
            <p><ion-icon name="calendar-outline"></ion-icon>Tanggal: <strong>{{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('dddd, D MMMM YYYY') }}</strong></p>
            <p><ion-icon name="time-outline"></ion-icon>Waktu Mulai: <strong>{{ \Carbon\Carbon::parse($patrol->start_time)->format('H:i:s') }}</strong></p>
            <p><ion-icon name="time-outline"></ion-icon>Waktu Selesai: <strong>{{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->format('H:i:s') : '-' }}</strong></p>
            <p><ion-icon name="walk-outline"></ion-icon>Jarak Tempuh: <strong>{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }} km</strong></p>
            <p><ion-icon name="hourglass-outline"></ion-icon>Durasi:
                <strong>
                @php
                    $duration = $patrol->duration_seconds ?? 0;
                    $hours = floor($duration / 3600);
                    $minutes = floor(($duration % 3600) / 60);
                    $seconds = $duration % 60;
                    echo sprintf('%02d jam %02d menit %02d detik', $hours, $minutes, $seconds);
                @endphp
                </strong>
            </p>
            <p><ion-icon name="information-circle-outline"></ion-icon>Status: <strong class="text-capitalize">{{ $patrol->status }}</strong></p>
        </div>

        <div id="mapDetail"></div>

    </div>
</div>
@endsection

@push('myscript')
{{-- Leaflet JS --}}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const pathData = @json($pathForMap ?? []); // Path dalam format [[lat, lng], [lat, lng], ...]
        
        if (pathData && pathData.length > 0) {
            // Ambil titik tengah untuk pusat peta, atau titik pertama jika hanya satu titik
            const centerLat = pathData[Math.floor(pathData.length / 2)][0];
            const centerLng = pathData[Math.floor(pathData.length / 2)][1];

            const mapDetail = L.map('mapDetail').setView([centerLat, centerLng], 15);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(mapDetail);

            // Gambar jejak patroli
            const patrolPolylineDetail = L.polyline(pathData, { color: '#007bff', weight: 5 }).addTo(mapDetail);
            
            // Tambahkan marker untuk titik awal dan akhir
            if (pathData.length > 0) {
                L.marker(pathData[0], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapDetail).bindPopup('Mulai Patroli');
            }
            if (pathData.length > 1) { // Hanya tambahkan marker akhir jika ada lebih dari 1 titik
                L.marker(pathData[pathData.length - 1], {icon: L.icon({iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png', shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png', iconSize: [25, 41], iconAnchor: [12, 41], popupAnchor: [1, -34], shadowSize: [41, 41]})}).addTo(mapDetail).bindPopup('Selesai Patroli');
            }

            // Sesuaikan zoom peta agar semua jejak terlihat
            if (patrolPolylineDetail.getBounds().isValid()) {
                mapDetail.fitBounds(patrolPolylineDetail.getBounds().pad(0.1)); // pad(0.1) untuk sedikit padding
            }

        } else {
            // Tampilkan pesan jika tidak ada data jejak
            document.getElementById('mapDetail').innerHTML = '<p class="text-center text-muted mt-3">Tidak ada data jejak untuk ditampilkan.</p>';
            // Inisialisasi peta dengan lokasi default jika tidak ada path
            const defaultMap = L.map('mapDetail').setView([-6.966667, 110.416664], 13); // Semarang
             L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(defaultMap);
        }
    });
</script>
@endpush

resources\views\patroli\histori.blade.php
{{-- File: resources/views/patroli/histori.blade.php --}}
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="{{ route('dashboard') }}" class="headerButton goBack">
            <ion-icon name="chevron-back-outline"></ion-icon>
        </a>
    </div>
    <div class="pageTitle">Histori Patroli Saya</div>
    <div class="right">
         <a href="{{ route('patroli.index') }}" class="headerButton">
            <ion-icon name="play-outline" style="font-size: 24px;"></ion-icon>
        </a>
    </div>
</div>
<style>
    .patrol-card {
        border-radius: 12px;
        border: none;
        box-shadow: 0 4px 15px rgba(0,0,0,0.07);
        margin-bottom: 1rem;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        background: white;
    }
    .patrol-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }
    .patrol-card .card-body {
        padding: 1rem 1.25rem;
    }
    .patrol-card .patrol-date {
        font-weight: 600;
        color: #007bff; /* Primary color */
        font-size: 1.1em;
        margin-bottom: 0.3rem;
    }
    .patrol-card .patrol-meta {
        font-size: 0.9em;
        color: #6c757d; /* Muted color */
        margin-bottom: 0.2rem;
    }
    .patrol-card .patrol-meta ion-icon {
        vertical-align: middle;
        margin-right: 5px;
        font-size: 1.1em;
    }
    .patrol-card .patrol-status {
        font-size: 0.85em;
        font-weight: 500;
        padding: 0.3em 0.6em;
        border-radius: 0.25rem;
    }
    .status-selesai { background-color: #28a745; color: white; }
    .status-dibatalkan { background-color: #dc3545; color: white; }
    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        margin: 15px;
    }
    .empty-state ion-icon {
        font-size: 4rem;
        color: #adb5bd;
        margin-bottom: 1rem;
    }
    .empty-state h5 {
        font-weight: 600;
        color: #495057;
    }
    .empty-state p {
        color: #6c757d;
        font-size: 0.95em;
    }
    .alert-fixed-top {
        position: fixed;
        top: 70px; /* Disesuaikan dengan tinggi appHeader + sedikit margin */
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
        width: auto;
        min-width: 300px;
        max-width: 90%;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border-radius: .5rem;
    }
    /* Tambahan style untuk tombol dengan ikon */
    .btn-with-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }
    .btn-with-icon ion-icon {
        font-size: 1.2em;
        vertical-align: middle;
    }
</style>
@endsection

@section('content')
<div class="section full" style="padding-top: 70px; padding-bottom: 70px;">
    <div class="wide-block pt-2 pb-2">

        {{-- Menampilkan flash message jika ada --}}
        @if(session()->has('error'))
            <div class="alert alert-danger alert-dismissible fade show alert-fixed-top m-2" role="alert" id="flashErrorMessage">
                {{ session('error') }}
            </div>
        @endif
        @if(session()->has('success'))
             <div class="alert alert-success alert-dismissible fade show alert-fixed-top m-2" role="alert" id="flashSuccessMessage">
                {{ session('success') }}
            </div>
        @endif


        @if($patrols->isEmpty())
            <div class="empty-state">
                <ion-icon name="map-outline"></ion-icon>
                <h5>Belum Ada Histori Patroli</h5>
                <p>Mulai patroli pertama Anda untuk melihat riwayatnya di sini.</p>
                <a href="{{ route('patroli.index') }}" class="btn btn-primary mt-2 d-inline-flex align-items-center" style="border-radius: 20px; padding: 8px 20px;">
                    <ion-icon name="play-circle-outline" class="me-2" style="font-size: 1.2em; position: relative; top: 8px;"></ion-icon>
                    Mulai Patroli Sekarang
                </a>
            </div>
        @else
            @foreach ($patrols as $patrol)
            <a href="{{ route('patroli.histori.detail', $patrol->_id) }}" style="text-decoration: none; color: inherit;">
                <div class="card patrol-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <div class="patrol-date">
                                    {{ \Carbon\Carbon::parse($patrol->start_time)->isoFormat('dddd, D MMMM YYYY') }}
                                </div>
                                <div class="patrol-meta">
                                    <ion-icon name="time-outline"></ion-icon>
                                    {{ \Carbon\Carbon::parse($patrol->start_time)->format('H:i') }} - {{ $patrol->end_time ? \Carbon\Carbon::parse($patrol->end_time)->format('H:i') : 'Berlangsung' }}
                                </div>
                            </div>
                            <span class="patrol-status status-{{ strtolower(str_replace(' ', '-', $patrol->status)) }}">
                                {{ ucfirst($patrol->status) }}
                            </span>
                        </div>
                        <hr style="margin: 0.75rem 0;">
                        <div class="patrol-meta">
                            <ion-icon name="walk-outline"></ion-icon>
                            Jarak: <strong>{{ number_format(($patrol->total_distance_meters ?? 0) / 1000, 2) }} km</strong>
                        </div>
                        <div class="patrol-meta">
                            <ion-icon name="hourglass-outline"></ion-icon>
                            Durasi:
                            @php
                                $duration = $patrol->duration_seconds ?? 0;
                                $hours = floor($duration / 3600);
                                $minutes = floor(($duration % 3600) / 60);
                                $seconds = $duration % 60;
                                echo sprintf('%02d:%02d:%02d', $hours, $minutes, $seconds);
                            @endphp
                        </div>
                    </div>
                </div>
            </a>
            @endforeach
            <div class="mt-3 d-flex justify-content-center">
                {{ $patrols->links() }}
            </div>
        @endif
    </div>
</div>
@endsection

@push('scripts')
<script>
    // Script untuk tooltip jika digunakan (Bootstrap 5)
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })

    function hideFlashMessage(elementId, duration = 3000) { // Default duration 3 detik
        const alertElement = document.getElementById(elementId);
        if (alertElement) {
            // Tunggu durasi tertentu, lalu sembunyikan
            setTimeout(() => {
                // Coba tutup menggunakan instance Bootstrap jika ada untuk animasi fade
                const bsAlert = bootstrap.Alert.getInstance(alertElement);
                if (bsAlert) {
                    bsAlert.close();
                } else {
                    // Fallback jika tidak ada instance Bootstrap (misalnya, elemen sudah dimanipulasi)
                    // atau jika ingin langsung menghapus tanpa animasi Bootstrap.
                    alertElement.style.display = 'none'; // Atau alertElement.remove();
                }
            }, duration);
        }
    }

    // Menghilangkan flash message setelah beberapa detik pada saat halaman dimuat
    document.addEventListener('DOMContentLoaded', function() {
        hideFlashMessage('flashErrorMessage', 3000); 
        hideFlashMessage('flashSuccessMessage', 3000);
    });

    // Menghilangkan flash message jika halaman dimuat (termasuk dari bfcache)
    window.addEventListener('pageshow', function(event) {
        hideFlashMessage('flashErrorMessage', 3000); 
        hideFlashMessage('flashSuccessMessage', 3000);
    });
</script>
@endpush

resources\views\patroli\index.blade.php
{{-- File: resources/views/patroli/index.blade.php --}}
@extends('layouts.presensi')

@section('header')
<!-- App Header -->
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%) !important; box-shadow: 0 4px 20px rgba(79, 172, 254, 0.3);">
    <div class="left">
        <a href="{{ route('dashboard') }}" class="headerButton goBack">
            <ion-icon name="chevron-back-outline"></ion-icon>
        </a>
    </div>
    <div class="pageTitle">Mulai Patroli</div>
    <div class="right">
        <a href="{{ route('patroli.histori') }}" class="headerButton">
            <ion-icon name="list-outline" style="font-size: 24px;"></ion-icon>
        </a>
    </div>
</div>
<!-- * App Header -->

{{-- Leaflet CSS --}}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
<style>
    #map {
        width: 100%;
        height: 300px;
        border-radius: 10px;
        border: 1px solid #ddd;
        margin-bottom: 1rem;
    }
    .patrol-controls {
        display: flex;
        justify-content: space-around;
        align-items: center;
        flex-wrap: wrap;
        gap: 10px;
        padding: 10px;
        background-color: #f8f9fa;
        border-radius: 10px;
        margin-bottom: 1rem;
    }
    .patrol-controls .btn {
        flex-grow: 1;
        min-width: 120px;
        margin: 5px;
        border-radius: 20px;
        font-weight: 500;
        padding: 10px 15px;
    }
    .patrol-info {
        text-align: center;
        padding: 15px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.07);
    }
    .patrol-info p {
        margin-bottom: 0.5rem;
        font-size: 1rem;
    }
    .patrol-info strong {
        color: #007bff;
    }
    .radius-check {
        padding: 10px;
        margin-bottom: 1rem;
        border-radius: 10px;
        text-align: center;
        font-size: 0.9rem;
    }
    .radius-check.in-range {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }
    .radius-check.out-of-range {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
    .radius-check.checking {
        background-color: #e2e3e5;
        color: #383d41;
        border: 1px solid #d6d8db;
    }

    /* Outside radius warning during patrol */
    .patrol-warning {
        padding: 15px;
        margin-bottom: 1rem;
        border-radius: 10px;
        text-align: center;
        font-weight: 600;
        background-color: #fff3cd;
        color: #856404;
        border: 1px solid #ffeaa7;
        display: none;
        animation: pulse 2s infinite;
    }
    .patrol-warning.show {
        display: block;
    }

    /* NEW: Face verification styles */
    .face-verification-card {
        padding: 15px;
        margin-bottom: 1rem;
        border-radius: 10px;
        background-color: #fff;
        border: 1px solid #e0e0e0;
        display: none;
    }
    .face-verification-card.show {
        display: block;
    }
    .face-verification-card.verified {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
    }
    .webcam-container {
        position: relative;
        width: 100%;
        border-radius: 10px;
        overflow: hidden;
        background: #000;
        margin-bottom: 10px;
    }
    #faceVideo {
        width: 100%;
        display: block;
    }
    #faceCanvas {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.7; }
        100% { opacity: 1; }
    }

    .status-badge {
        padding: 0.5em 0.75em;
        border-radius: 0.25rem;
        font-weight: 600;
    }
    .status-aktif { background-color: #28a745; color: white; }
    .status-jeda { background-color: #ffc107; color: black; }
    .status-berhenti { background-color: #dc3545; color: white; }
    .status-tidak-aktif { background-color: #6c757d; color: white; }

    .btn-start-patrol { background: linear-gradient(135deg, #28a745 0%, #218838 100%); border: none; color: white !important; }
    .btn-pause-patrol { background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%); border: none; color: black !important; }
    .btn-resume-patrol { background: linear-gradient(135deg, #17a2b8 0%, #117a8b 100%); border: none; color: white !important; }
    .btn-stop-patrol { background: linear-gradient(135deg, #dc3545 0%, #c82333 100%); border: none; color: white !important; }
    .btn-verify-face { background: linear-gradient(135deg, #6f42c1 0%, #5a2d91 100%); border: none; color: white !important; }

    .btn ion-icon {
        font-size: 1.2em;
        margin-right: 5px;
        vertical-align: middle;
    }
    .swal2-popup {
        font-family: 'Poppins', sans-serif;
        border-radius: 15px !important;
    }
    .swal2-title {
        font-size: 1.5em !important;
        font-weight: 600 !important;
    }
    .swal2-confirm {
        border-radius: 8px !important;
        padding: 0.6em 1.5em !important;
    }
</style>
@endsection

@section('content')
<div class="section full" style="padding-top: 70px; padding-bottom: 70px;">
    <div class="wide-block pt-2 pb-2">

        <div class="patrol-info mb-3">
            <p>Status: <span id="statusPatroli" class="status-badge status-tidak-aktif">Tidak Aktif</span></p>
            <p>Jarak: <strong id="jarakPatroli">0.00 km</strong></p>
            <p>Durasi: <strong id="durasiPatroli">00:00:00</strong></p>
        </div>

        <div class="radius-check checking" id="radiusCheckContainer">
            <p class="mb-0" id="locationStatus">Mengecek lokasi Anda...</p>
            <small id="distanceToOffice"></small>
        </div>

        <!-- Warning when outside radius during patrol -->
        <div class="patrol-warning" id="patrolWarning">
            <ion-icon name="warning-outline" style="font-size: 1.5em; margin-right: 8px;"></ion-icon>
            <div>Anda berada di luar radius kerja!</div>
            <small>Patroli tidak terekam sampai Anda kembali ke area kerja</small>
        </div>

        <!-- NEW: Face Verification Card -->
        <div class="face-verification-card" id="faceVerificationCard">
            <h6 style="font-weight: 600; color: #343a40; margin-bottom: 15px;">
                <ion-icon name="person-circle-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                Verifikasi Wajah Patroli
            </h6>
            <div class="webcam-container" id="faceWebcamContainer" style="display: none;">
                <video id="faceVideo" autoplay playsinline></video>
                <canvas id="faceCanvas"></canvas>
            </div>
            <div id="faceVerificationStatus" class="text-center mt-2"></div>
            <div class="text-center mt-3">
                <button type="button" id="startFaceVerificationBtn" class="btn btn-verify-face" style="border-radius: 20px; padding: 8px 20px;">
                    <ion-icon name="scan-outline"></ion-icon> Mulai Verifikasi
                </button>
            </div>
        </div>

        <div id="map"></div>

        <div class="patrol-controls">
            <button id="btnMulai" class="btn btn-start-patrol" disabled>
                <ion-icon name="play-circle-outline"></ion-icon> Mulai
            </button>
            <button id="btnJeda" class="btn btn-pause-patrol" style="display: none;">
                <ion-icon name="pause-circle-outline"></ion-icon> Jeda
            </button>
            <button id="btnLanjutkan" class="btn btn-resume-patrol" style="display: none;">
                <ion-icon name="play-forward-circle-outline"></ion-icon> Lanjutkan
            </button>
            <button id="btnHentikan" class="btn btn-stop-patrol" style="display: none;">
                <ion-icon name="stop-circle-outline"></ion-icon> Hentikan
            </button>
        </div>

        <input type="hidden" id="currentPatrolId" value="{{ $patrolData['id'] ?? '' }}">
        <input type="hidden" id="userLatitude">
        <input type="hidden" id="userLongitude">
        <input type="hidden" id="faceVerified" value="{{ isset($patrolData['face_verified']) ? ($patrolData['face_verified'] ? 'true' : 'false') : 'false' }}">
    </div>
</div>
@endsection

@push('myscript')
{{-- Leaflet JS --}}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>
{{-- SweetAlert2 --}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
{{-- Face API --}}
<script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // State Variables
        let map;
        let userMarker;
        let patrolPath = @json($patrolData['path'] ?? []);
        let patrolPolyline;
        let patrolStatus = @json($patrolData['status'] ?? 'tidak_aktif');
        let watchId = null;
        let totalDistance = parseFloat(@json($patrolData['total_distance_meters'] ?? 0));
        let currentSegmentStartTime = null; 
        let accumulatedActiveDurationSeconds = parseInt(@json($patrolData['duration_seconds'] ?? 0));
        let timerInterval = null;
        let currentPatrolId = document.getElementById('currentPatrolId').value;
        let isBusy = false;
        const MINIMUM_DISTANCE_THRESHOLD = 2;
        
        // Radius tracking variables
        let isCurrentlyInRadius = true;
        let lastRadiusCheckTime = 0;
        let radiusCheckInterval = null;
        let hasShownOutsideWarning = false;
        
        // NEW: Face verification variables
        let faceStream = null;
        let isFaceVerified = document.getElementById('faceVerified').value === 'true';
        let faceDetectionInterval;
        let verificationSucceeded = false;
        const faceApiThreshold = 0.5;
        const storedDescriptor = @if(isset($faceDescriptor) && $faceDescriptor !== 'null') new Float32Array(Object.values(JSON.parse('{!! $faceDescriptor !!}'))) @else null @endif;
        
        const officeLocation = @json($officeLocation);
        const officeRadius = @json($officeRadius);
        const officeLat = officeLocation ? officeLocation.coordinates[1] : null;
        const officeLng = officeLocation ? officeLocation.coordinates[0] : null;

        // DOM Elements
        const statusPatroliEl = document.getElementById('statusPatroli');
        const jarakPatroliEl = document.getElementById('jarakPatroli');
        const durasiPatroliEl = document.getElementById('durasiPatroli');
        const btnMulai = document.getElementById('btnMulai');
        const btnJeda = document.getElementById('btnJeda');
        const btnLanjutkan = document.getElementById('btnLanjutkan');
        const btnHentikan = document.getElementById('btnHentikan');
        const userLatInput = document.getElementById('userLatitude');
        const userLngInput = document.getElementById('userLongitude');
        const radiusCheckContainer = document.getElementById('radiusCheckContainer');
        const locationStatusEl = document.getElementById('locationStatus');
        const distanceToOfficeEl = document.getElementById('distanceToOffice');
        const patrolWarning = document.getElementById('patrolWarning');
        
        // NEW: Face verification elements
        const faceVerificationCard = document.getElementById('faceVerificationCard');
        const faceWebcamContainer = document.getElementById('faceWebcamContainer');
        const faceVideo = document.getElementById('faceVideo');
        const faceCanvas = document.getElementById('faceCanvas');
        const faceVerificationStatus = document.getElementById('faceVerificationStatus');
        const startFaceVerificationBtn = document.getElementById('startFaceVerificationBtn');

        // Utility Functions
        async function sendDataToServer(url, data) {
            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || `Server error: ${response.status}`);
                }
                return await response.json();
            } catch (error) {
                console.error('Error sending data to server:', error);
                Swal.fire('Error Server', error.message || 'Gagal berkomunikasi dengan server.', 'error');
                throw error;
            }
        }
        
        function initMap(lat, lng) {
            if (map) map.remove();
            map = L.map('map').setView([lat, lng], 16);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
            userMarker = L.marker([lat, lng]).addTo(map).bindPopup('Posisi Anda').openPopup();

            if (officeLat && officeLng) {
                L.circle([officeLat, officeLng], { 
                    radius: officeRadius,
                    color: '#007bff',
                    fillColor: '#007bff',
                    fillOpacity: 0.1,
                    weight: 2
                }).addTo(map);
            }

            if (patrolPath.length > 0) {
                 patrolPolyline = L.polyline(patrolPath.map(p => [p[0], p[1]]), { color: 'blue', weight: 5 }).addTo(map);
                 if(patrolPath.length > 0) {
                    map.panTo(patrolPath[patrolPath.length -1]);
                 }
            }
        }

        function updateUI() {
            statusPatroliEl.textContent = patrolStatus.charAt(0).toUpperCase() + patrolStatus.slice(1).replace('_', ' ');
            statusPatroliEl.className = `status-badge status-${patrolStatus.replace('_', '-')}`;
            
            const isInRadius = radiusCheckContainer.classList.contains('in-range');
            btnMulai.style.display = patrolStatus === 'tidak_aktif' ? 'inline-flex' : 'none';
            btnMulai.disabled = !isInRadius;

            btnJeda.style.display = patrolStatus === 'aktif' ? 'inline-flex' : 'none';
            btnLanjutkan.style.display = patrolStatus === 'jeda' ? 'inline-flex' : 'none';
            btnHentikan.style.display = (patrolStatus === 'aktif' || patrolStatus === 'jeda') ? 'inline-flex' : 'none';
            
            // NEW: Update face verification card visibility
            if (patrolStatus === 'aktif' || patrolStatus === 'jeda') {
                if (!isFaceVerified) {
                    faceVerificationCard.classList.add('show');
                    faceVerificationCard.classList.remove('verified');
                } else {
                    faceVerificationCard.classList.add('show', 'verified');
                    faceVerificationStatus.innerHTML = '<div class="alert alert-success p-2 small"><strong>Wajah Terverifikasi!</strong></div>';
                }
            } else {
                faceVerificationCard.classList.remove('show');
            }
        }

        // NEW: Face verification functions
        async function initFaceVerification() {
            if (!storedDescriptor) {
                faceVerificationStatus.innerHTML = '<div class="alert alert-danger p-2 small">Data wajah tidak tersedia. Hubungi admin.</div>';
                return;
            }

            try {
                faceVerificationStatus.innerHTML = '<div class="alert alert-info p-2 small">Mempersiapkan kamera verifikasi...</div>';
                stopFaceStream();
                faceStream = await navigator.mediaDevices.getUserMedia({ 
                    video: { width: 320, height: 240, facingMode: 'user' }, 
                    audio: false 
                });
                faceVideo.srcObject = faceStream;
                faceWebcamContainer.style.display = 'block';
                startFaceVerificationBtn.style.display = 'none';
                
                faceVideo.onloadedmetadata = () => {
                    faceVerificationStatus.innerHTML = '<div class="alert alert-primary p-2 small">Posisikan wajah Anda di kamera.</div>';
                    startFaceDetection();
                };
            } catch (error) {
                faceVerificationStatus.innerHTML = `<div class="alert alert-danger p-2 small">Error kamera: ${error.message}</div>`;
            }
        }

        function startFaceDetection() {
            const displaySize = { width: faceVideo.videoWidth, height: faceVideo.videoHeight };
            faceapi.matchDimensions(faceCanvas, displaySize);

            faceDetectionInterval = setInterval(async () => {
                if (verificationSucceeded || isFaceVerified) return;

                const detection = await faceapi.detectSingleFace(faceVideo, new faceapi.TinyFaceDetectorOptions())
                    .withFaceLandmarks().withFaceDescriptor();
                
                if (detection) {
                    const distance = faceapi.euclideanDistance(storedDescriptor, detection.descriptor);
                    if (distance < faceApiThreshold) {
                        verificationSucceeded = true;
                        clearInterval(faceDetectionInterval);

                        faceVerificationStatus.innerHTML = '<div class="alert alert-success p-2 small"><strong>Verifikasi Berhasil!</strong> Mengirim data...</div>';
                        faceVideo.style.border = '3px solid #1cc88a';
                        
                        // Capture and send face image
                        const canvasForSaving = document.createElement('canvas');
                        canvasForSaving.width = faceVideo.videoWidth;
                        canvasForSaving.height = faceVideo.videoHeight;
                        canvasForSaving.getContext('2d').drawImage(faceVideo, 0, 0);
                        
                        const faceImageData = canvasForSaving.toDataURL('image/jpeg');
                        
                        try {
                            const result = await sendDataToServer("{{ route('patroli.verify_face') }}", {
                                patrol_id: currentPatrolId,
                                face_image: faceImageData
                            });
                            
                            if (result.success) {
                                isFaceVerified = true;
                                faceVerificationCard.classList.add('verified');
                                faceVerificationStatus.innerHTML = '<div class="alert alert-success p-2 small"><strong>Wajah Terverifikasi!</strong></div>';
                                stopFaceStream();
                                faceWebcamContainer.style.display = 'none';
                                Swal.fire('Berhasil!', 'Verifikasi wajah berhasil.', 'success');
                            }
                        } catch (error) {
                            faceVerificationStatus.innerHTML = '<div class="alert alert-danger p-2 small">Gagal mengirim data verifikasi.</div>';
                            verificationSucceeded = false;
                        }
                    } else {
                        if (!verificationSucceeded) {
                            faceVerificationStatus.innerHTML = '<div class="alert alert-warning p-2 small">Wajah tidak dikenali. Coba lagi.</div>';
                        }
                    }
                } else {
                    if (!verificationSucceeded) {
                        faceVerificationStatus.innerHTML = '<div class="alert alert-secondary p-2 small">Arahkan wajah ke kamera...</div>';
                    }
                }
            }, 1000);
        }

        function stopFaceStream() {
            if (faceStream) {
                faceStream.getTracks().forEach(track => track.stop());
                faceStream = null;
            }
            if (faceDetectionInterval) {
                clearInterval(faceDetectionInterval);
            }
        }

        // Event Listeners
        startFaceVerificationBtn.addEventListener('click', initFaceVerification);

        function startTimer() {
            if (timerInterval) clearInterval(timerInterval);
            
            timerInterval = setInterval(() => {
                if (patrolStatus === 'aktif' && currentSegmentStartTime) {
                    const now = new Date();
                    const currentSegmentElapsedMs = now - currentSegmentStartTime;
                    const totalElapsedSeconds = accumulatedActiveDurationSeconds + Math.floor(currentSegmentElapsedMs / 1000);

                    const hours = String(Math.floor(totalElapsedSeconds / 3600)).padStart(2, '0');
                    const minutes = String(Math.floor((totalElapsedSeconds % 3600) / 60)).padStart(2, '0');
                    const seconds = String(totalElapsedSeconds % 60).padStart(2, '0');
                    durasiPatroliEl.textContent = `${hours}:${minutes}:${seconds}`;
                }
            }, 1000);
        }

        function stopTimer() {
            clearInterval(timerInterval);
            timerInterval = null;
        }
        
        function resetPatrolInfo() {
            jarakPatroliEl.textContent = '0.00 km';
            durasiPatroliEl.textContent = '00:00:00';
            totalDistance = 0;
            patrolPath = [];
            if (patrolPolyline) {
                map.removeLayer(patrolPolyline);
                patrolPolyline = null;
            }
            currentSegmentStartTime = null;
            accumulatedActiveDurationSeconds = 0;
            
            // Reset radius tracking
            hidePatrolWarning();
            isCurrentlyInRadius = true;
            hasShownOutsideWarning = false;
            
            // NEW: Reset face verification
            isFaceVerified = false;
            verificationSucceeded = false;
            stopFaceStream();
            faceWebcamContainer.style.display = 'none';
            startFaceVerificationBtn.style.display = 'inline-block';
        }

        function haversineDistance(coords1, coords2) {
            function toRad(x) { return x * Math.PI / 180; }
            const R = 6371e3;
            const lat1 = coords1[0];
            const lon1 = coords1[1];
            const lat2 = coords2[0];
            const lon2 = coords2[1];

            const dLat = toRad(lat2 - lat1);
            const dLon = toRad(lon2 - lon1);
            const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                      Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *
                      Math.sin(dLon / 2) * Math.sin(dLon / 2);
            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            return R * c;
        }

        function updateMapPath(latlngArray) { 
            if (patrolPath.length > 0) {
                const prevPoint = patrolPath[patrolPath.length - 1];
                totalDistance += haversineDistance(prevPoint, latlngArray);
                jarakPatroliEl.textContent = (totalDistance / 1000).toFixed(2) + ' km';
            }
            patrolPath.push(latlngArray);

            if (patrolPolyline) {
                patrolPolyline.setLatLngs(patrolPath);
            } else {
                patrolPolyline = L.polyline(patrolPath, { color: 'blue', weight: 5 }).addTo(map);
            }
            
            if (map && userMarker) {
                 map.panTo(latlngArray);
            }
        }

        function showPatrolWarning() {
            patrolWarning.classList.add('show');
        }

        function hidePatrolWarning() {
            patrolWarning.classList.remove('show');
        }

        async function checkCurrentRadius(latitude, longitude) {
            try {
                const response = await fetch("{{ route('patroli.check_radius') }}", {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        latitude: latitude,
                        longitude: longitude
                    })
                });

                if (response.ok) {
                    const data = await response.json();
                    return data.within_radius;
                }
            } catch (error) {
                console.warn('Error checking radius:', error);
            }
            return true;
        }

        function updateLocationStatus(position) {
            const { latitude, longitude } = position.coords;
            userLatInput.value = latitude;
            userLngInput.value = longitude;

            if (!officeLat || !officeLng) {
                locationStatusEl.textContent = 'Lokasi kantor belum diatur.';
                radiusCheckContainer.className = 'radius-check out-of-range';
                btnMulai.disabled = true;
                return;
            }

            const distance = haversineDistance([latitude, longitude], [officeLat, officeLng]);
            distanceToOfficeEl.textContent = `Jarak: ${distance.toFixed(0)}m dari kantor.`;

            if (distance <= officeRadius) {
                locationStatusEl.textContent = 'Dalam Jangkauan';
                radiusCheckContainer.className = 'radius-check in-range';
                if (patrolStatus === 'tidak_aktif') {
                    btnMulai.disabled = false;
                }
                
                if ((patrolStatus === 'aktif' || patrolStatus === 'jeda') && !isCurrentlyInRadius) {
                    isCurrentlyInRadius = true;
                    hidePatrolWarning();
                    if (!hasShownOutsideWarning) {
                        Swal.fire({
                            title: 'Kembali dalam Radius',
                            text: 'Anda telah kembali ke area kerja. Patroli akan terekam kembali.',
                            icon: 'success',
                            timer: 3000,
                            showConfirmButton: false
                        });
                    }
                }
            } else {
                locationStatusEl.textContent = 'Luar Jangkauan';
                radiusCheckContainer.className = 'radius-check out-of-range';
                btnMulai.disabled = true;
                
                if ((patrolStatus === 'aktif' || patrolStatus === 'jeda') && isCurrentlyInRadius) {
                    isCurrentlyInRadius = false;
                    showPatrolWarning();
                    if (!hasShownOutsideWarning) {
                        hasShownOutsideWarning = true;
                        Swal.fire({
                            title: 'Keluar dari Radius!',
                            text: 'Anda telah keluar dari area kerja. Patroli tidak akan terekam hingga Anda kembali ke area kerja.',
                            icon: 'warning',
                            confirmButtonText: 'Mengerti'
                        });
                    }
                }
            }
        }

        function startWatchingLocation() {
            if (watchId) navigator.geolocation.clearWatch(watchId);
            watchId = navigator.geolocation.watchPosition(
                async (position) => {
                    const { latitude, longitude, accuracy, speed } = position.coords;
                    const currentLatLngArray = [latitude, longitude];

                    updateLocationStatus(position);

                    if (!userMarker && map) {
                         userMarker = L.marker(currentLatLngArray, {icon: L.icon({iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png', iconSize: [25,41], iconAnchor: [12,41]}) }).addTo(map).bindPopup('Posisi Anda Saat Ini');
                    } else if (userMarker) {
                        userMarker.setLatLng(currentLatLngArray);
                    }

                    if (patrolStatus === 'aktif' && !isBusy && isCurrentlyInRadius) {
                        const lastPoint = patrolPath.length > 0 ? patrolPath[patrolPath.length - 1] : null;
                        if (!lastPoint || haversineDistance(lastPoint, currentLatLngArray) > MINIMUM_DISTANCE_THRESHOLD) {
                            updateMapPath(currentLatLngArray);
                            try {
                                const response = await sendDataToServer("{{ route('patroli.store_point') }}", {
                                    patrol_id: currentPatrolId,
                                    latitude: latitude,
                                    longitude: longitude,
                                    timestamp: new Date().getTime(), 
                                    accuracy: accuracy,
                                    speed: speed === null ? 0 : speed
                                });
                                
                                if (response && response.outside_radius) {
                                    isCurrentlyInRadius = false;
                                    showPatrolWarning();
                                    if (!hasShownOutsideWarning) {
                                        hasShownOutsideWarning = true;
                                        Swal.fire({
                                            title: 'Keluar dari Radius!',
                                            text: 'Anda telah keluar dari area kerja. Patroli tidak akan terekam hingga Anda kembali ke area kerja.',
                                            icon: 'warning',
                                            confirmButtonText: 'Mengerti'
                                        });
                                    }
                                }
                            } catch (error) {
                                console.warn("Gagal mengirim titik patroli:", error.message);
                            }
                        }
                    }
                },
                (error) => {
                    console.error("Error watchPosition:", error);
                    Swal.fire('Error Lokasi', 'Tidak dapat mendapatkan lokasi Anda secara berkelanjutan.', 'error');
                },
                { enableHighAccuracy: true, maximumAge: 5000, timeout: 10000 }
            );
        }

        function stopWatchingLocation() {
            if (watchId) {
                navigator.geolocation.clearWatch(watchId);
                watchId = null;
            }
        }

        // Event Listeners for Patrol Controls
        btnMulai.addEventListener('click', async () => {
            if (isBusy) return;
            isBusy = true;

            const lat = userLatInput.value;
            const lng = userLngInput.value;

            if (!lat || !lng) {
                Swal.fire('Error', 'Lokasi Anda belum terdeteksi. Mohon tunggu sebentar.', 'error');
                isBusy = false;
                return;
            }

            if (navigator.geolocation) {
                resetPatrolInfo();
                try {
                    const data = await sendDataToServer("{{ route('patroli.start') }}", {
                        latitude: lat,
                        longitude: lng
                    });
                    if (data.success) {
                        currentPatrolId = data.patrol_id;
                        currentSegmentStartTime = new Date(data.start_time);
                        accumulatedActiveDurationSeconds = 0;
                        patrolStatus = 'aktif';
                        isCurrentlyInRadius = true;
                        hasShownOutsideWarning = false;
                        startTimer();
                        updateUI();
                        Swal.fire('Patroli Dimulai', data.message, 'success');
                        
                        if (userMarker) {
                            map.removeLayer(userMarker);
                            userMarker = null;
                        }
                        startWatchingLocation();
                    }
                } catch (error) { /* Handled */ }
            } else {
                Swal.fire('Error', 'Geolocation tidak didukung oleh browser ini.', 'error');
            }
            isBusy = false;
        });
        
        btnJeda.addEventListener('click', async () => {
            if (isBusy || !currentPatrolId) return;
            isBusy = true;
            stopTimer();
            stopWatchingLocation();

            if (patrolStatus === 'aktif' && currentSegmentStartTime) {
                const now = new Date();
                const currentSegmentDurationMs = now - currentSegmentStartTime;
                accumulatedActiveDurationSeconds += Math.floor(currentSegmentDurationMs / 1000);
            }
            currentSegmentStartTime = null;

            try {
                const data = await sendDataToServer("{{ route('patroli.pause') }}", { patrol_id: currentPatrolId });
                if (data.success) {
                    patrolStatus = 'jeda';
                    hidePatrolWarning();
                    updateUI();
                    const hours = String(Math.floor(accumulatedActiveDurationSeconds / 3600)).padStart(2, '0');
                    const minutes = String(Math.floor((accumulatedActiveDurationSeconds % 3600) / 60)).padStart(2, '0');
                    const seconds = String(accumulatedActiveDurationSeconds % 60).padStart(2, '0');
                    durasiPatroliEl.textContent = `${hours}:${minutes}:${seconds}`;
                    Swal.fire('Patroli Dijeda', data.message, 'info');
                } else {
                    startTimer();
                    startWatchingLocation();
                }
            } catch (error) {
                 startTimer();
                 startWatchingLocation();
            }
            isBusy = false;
        });

        btnLanjutkan.addEventListener('click', async () => {
            if (isBusy || !currentPatrolId) return;
            isBusy = true;
            try {
                const data = await sendDataToServer("{{ route('patroli.resume') }}", { patrol_id: currentPatrolId });
                if (data.success) {
                    patrolStatus = 'aktif';
                    currentSegmentStartTime = new Date();
                    hasShownOutsideWarning = false;
                    startTimer(); 
                    updateUI();
                    startWatchingLocation();
                    Swal.fire('Patroli Dilanjutkan', data.message, 'info');
                }
            } catch (error) { /* Handled */ }
            isBusy = false;
        });

        btnHentikan.addEventListener('click', async () => {
            if (isBusy || !currentPatrolId) return;
            
            // NEW: Check if face verification is required
            if (!isFaceVerified) {
                Swal.fire({
                    title: 'Verifikasi Wajah Diperlukan',
                    text: 'Anda harus melakukan verifikasi wajah sebelum menghentikan patroli.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            isBusy = true;
            stopWatchingLocation();
            
            let finalDurationSeconds = accumulatedActiveDurationSeconds;
            if (patrolStatus === 'aktif' && currentSegmentStartTime) {
                const now = new Date();
                const lastSegmentMs = now - currentSegmentStartTime;
                finalDurationSeconds += Math.floor(lastSegmentMs / 1000);
            }
            
            stopTimer();
            durasiPatroliEl.textContent = (() => {
                const hours = String(Math.floor(finalDurationSeconds / 3600)).padStart(2, '0');
                const minutes = String(Math.floor((finalDurationSeconds % 3600) / 60)).padStart(2, '0');
                const seconds = String(finalDurationSeconds % 60).padStart(2, '0');
                return `${hours}:${minutes}:${seconds}`;
            })();

            try {
                const data = await sendDataToServer("{{ route('patroli.stop') }}", {
                    patrol_id: currentPatrolId,
                    total_distance_meters: totalDistance,
                    duration_seconds: finalDurationSeconds 
                });
                if (data.success) {
                    patrolStatus = 'tidak_aktif'; 
                    updateUI(); 
                    Swal.fire('Patroli Selesai', `Jarak: ${(totalDistance/1000).toFixed(2)} km, Durasi: ${durasiPatroliEl.textContent}`, 'success')
                        .then(() => {
                             resetPatrolInfo(); 
                             currentPatrolId = null; 
                             updateLocationStatus({coords: {latitude: parseFloat(userLatInput.value), longitude: parseFloat(userLngInput.value)}});
                        });
                } else if (data.face_verification_required) {
                    Swal.fire({
                        title: 'Verifikasi Wajah Diperlukan',
                        text: data.message,
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                 updateUI(); 
            }
            isBusy = false;
        });

        function initializePage() {
            if (!navigator.geolocation) {
                Swal.fire('Error', 'Geolocation tidak didukung oleh browser ini.', 'error');
                locationStatusEl.textContent = 'Geolocation tidak didukung.';
                radiusCheckContainer.className = 'radius-check out-of-range';
                initMap(-6.966667, 110.4204); 
                updateUI();
                return;
            }

            navigator.geolocation.getCurrentPosition(
                (position) => {
                    const { latitude, longitude } = position.coords;
                    initMap(latitude, longitude);
                    updateLocationStatus(position);
                    
                    if (currentPatrolId && patrolStatus !== 'tidak_aktif') {
                        jarakPatroliEl.textContent = (totalDistance / 1000).toFixed(2) + ' km';
                        
                        const hours = String(Math.floor(accumulatedActiveDurationSeconds / 3600)).padStart(2, '0');
                        const minutes = String(Math.floor((accumulatedActiveDurationSeconds % 3600) / 60)).padStart(2, '0');
                        const seconds = String(accumulatedActiveDurationSeconds % 60).padStart(2, '0');
                        durasiPatroliEl.textContent = `${hours}:${minutes}:${seconds}`;

                        if (patrolStatus === 'aktif') {
                            currentSegmentStartTime = new Date(); 
                            startTimer();
                            startWatchingLocation();
                        }
                    } else {
                        resetPatrolInfo();
                    }
                    updateUI();
                },
                (error) => {
                    console.error("Error getCurrentPosition:", error);
                    Swal.fire('Error Lokasi', 'Tidak dapat mendapatkan lokasi awal Anda. Menggunakan lokasi default.', 'warning');
                    initMap(-6.966667, 110.4204); 
                    updateLocationStatus({coords: {latitude: -6.966667, longitude: 110.4204}});
                    updateUI();
                }
            );
        }

        // Initialize Face API models
        @if(isset($faceDescriptor) && $faceDescriptor !== 'null')
        Promise.all([
            faceapi.nets.tinyFaceDetector.loadFromUri('{{ asset("models") }}'),
            faceapi.nets.faceLandmark68Net.loadFromUri('{{ asset("models") }}'),
            faceapi.nets.faceRecognitionNet.loadFromUri('{{ asset("models") }}')
        ]).then(() => {
            console.log('Face API models loaded successfully');
        }).catch(err => {
            console.error('Failed to load Face API models:', err);
            faceVerificationStatus.innerHTML = '<div class="alert alert-danger p-2 small">Gagal memuat model wajah. Periksa koneksi.</div>';
        });
        @endif

        initializePage();

        window.addEventListener('beforeunload', () => {
            stopWatchingLocation();
            stopTimer();
            stopFaceStream();
        });
    });
</script>
@endpush


resources\views\presensi\buatlaporan.blade.php
{{-- resources\views\presensi\buatlaporan.blade.php --}}
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="{{ route('laporan.index') }}" class="headerButton goBack" style="color: white;">
            <ion-icon name="chevron-back-outline" style="font-size: 20px;"></ion-icon>
        </a>
    </div>
    <div class="pageTitle text-center" style="font-weight: 600; letter-spacing: 0.5px;">Buat Laporan</div>
    <div class="right"></div>
</div>
@endsection

@section('content')
<div class="row" style="margin-top: 70px; padding: 0 15px 80px;">
    <div class="col">
        <form id="laporanForm" method="POST" action="{{ route('laporan.store') }}" enctype="multipart/form-data">
            @csrf
            {{-- Input tersembunyi untuk menyimpan data yang akan dikirim --}}
            <input type="hidden" name="face_image" id="face_image">
            <input type="hidden" name="foto" id="fotoInput">
            <input type="hidden" name="nik" value="{{ Auth::guard('karyawan')->user()->nik }}">
            {{-- Input ini akan diisi dengan deskriptor wajah oleh JavaScript --}}
            <input type="hidden" name="face_descriptor" id="face_descriptor">

            {{-- Card Verifikasi Wajah --}}
            <div class="card mb-3" style="border-radius: 15px; border: none; box-shadow: 0 6px 15px rgba(0,0,0,0.05);">
                <div class="card-body" style="padding: 20px;">
                    <h5 style="font-weight: 600; color: #343a40; margin-bottom: 15px;">
                        <ion-icon name="person-circle-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                        Langkah 1: Verifikasi Wajah
                    </h5>

                    <div class="webcam-container mb-3" style="position: relative; width: 100%; border-radius: 10px; overflow: hidden; background: #000;">
                        <video id="videoElement" autoplay playsinline style="width: 100%; display: block;"></video>
                        <canvas id="canvasElement" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></canvas>
                    </div>

                    <div id="verificationStatus" class="text-center mt-2"></div>
                </div>
            </div>

            {{-- Card Foto Bukti --}}
            <div class="card mb-3" style="border-radius: 15px; border: none; box-shadow: 0 6px 15px rgba(0,0,0,0.05);">
                <div class="card-body" style="padding: 20px;">
                    <h5 style="font-weight: 600; color: #343a40; margin-bottom: 15px;">
                        <ion-icon name="camera-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                        Langkah 2: Ambil Foto Bukti <span class="required-asterisk">*</span>
                    </h5>

                    <div class="camera-container mb-3" style="display: none; position: relative; width: 100%; border-radius: 10px; overflow: hidden; background: #000;">
                        <video id="photoCamera" autoplay playsinline style="width: 100%; display: block;"></video>
                        <canvas id="photoCanvas" style="display: none;"></canvas>
                        <div id="photoOverlay" style="position: absolute; bottom: 10px; left: 10px; right: 10px; padding: 8px; background: rgba(0,0,0,0.6); color: white; border-radius: 8px; font-size: 11px; display: flex; justify-content: space-between; font-family: 'Courier New', monospace; font-weight: bold;">
                            <span id="photoTimestamp"></span>
                            <span id="photoLocation">Lokasi: Loading...</span>
                        </div>
                    </div>

                    <div id="photoPreviewContainer" class="text-center mb-3" style="display: none;">
                        <img id="photoPreview" src="" alt="Foto Bukti" class="img-fluid rounded shadow-sm" style="max-height: 300px;">
                    </div>

                    <div class="button-container" style="display: flex; flex-wrap: wrap; justify-content: center; gap: 10px; margin: 15px 0;">
                        <button type="button" id="startCameraBtn" class="btn btn-outline-primary" style="border-radius: 30px; padding: 10px 20px; min-width: 140px;">
                            <ion-icon name="camera-outline" style="vertical-align: middle;"></ion-icon>
                            <span style="vertical-align: middle;"> Buka Kamera</span>
                        </button>
                        <button type="button" id="capturePhotoBtn" class="btn btn-success" style="border-radius: 30px; padding: 10px 20px; min-width: 140px; display: none;">
                            <ion-icon name="aperture-outline" style="vertical-align: middle;"></ion-icon>
                            <span style="vertical-align: middle;"> Ambil Gambar</span>
                        </button>
                        <button type="button" id="retryPhotoBtn" class="btn btn-warning" style="border-radius: 30px; padding: 10px 20px; min-width: 140px; display: none;">
                            <ion-icon name="refresh-outline" style="vertical-align: middle;"></ion-icon>
                            <span style="vertical-align: middle;"> Ulangi</span>
                        </button>
                    </div>
                </div>
            </div>

            {{-- Card Detail Laporan --}}
            <div class="card mb-3" style="border-radius: 15px; border: none; box-shadow: 0 6px 15px rgba(0,0,0,0.05);">
                <div class="card-body" style="padding: 20px;">
                    <h5 style="font-weight: 600; color: #343a40; margin-bottom: 15px;">
                        <ion-icon name="document-text-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                        Langkah 3: Isi Detail Laporan
                    </h5>
                    <div class="form-group mb-3">
                        <label style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Tanggal Laporan <span class="required-asterisk">*</span></label>
                        <input type="date" name="tgl_laporan" id="tgl_laporan" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px;" required>
                    </div>

                    <div class="form-group mb-3">
                        <label style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Jam Laporan <span class="required-asterisk">*</span></label>
                        <input type="time" name="jam" id="jam_laporan" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px;" required>
                    </div>

                    <div class="form-group mb-3">
                        <label style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Jenis Laporan <span class="required-asterisk">*</span></label>
                        <select name="jenis_laporan" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px;" required>
                            <option value="">-- Pilih Jenis Laporan --</option>
                            <option value="harian">Harian</option>
                            <option value="kegiatan">Kegiatan</option>
                            <option value="masalah">Masalah</option>
                        </select>
                    </div>

                    <div class="form-group mb-3">
                        <label style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Keterangan <span class="required-asterisk">*</span></label>
                        <textarea name="keterangan" class="form-control" rows="3" style="border-radius: 10px; border: 1px solid #e0e0e0; padding: 10px 15px;" required></textarea>
                    </div>

                    <div class="form-group mb-3">
                        <label style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Lokasi <span class="required-asterisk">*</span></label>
                        <input type="text" name="lokasi" id="lokasi" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px;" required>
                        <small class="text-muted" id="locationHelp">Koordinat: <span id="coordinatesDisplay">Belum tersedia</span></small>
                    </div>

                    <button type="submit" id="submitBtn" class="btn btn-primary btn-block" style="border-radius: 10px; height: 45px; font-weight: 500; background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); border: none; box-shadow: 0 4px 15px rgba(78, 115, 223, 0.3);" disabled>
                        <ion-icon name="send-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon> Kirim Laporan
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
@endsection

@push('myscript')
<script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    /* Styling for the red asterisk */
    .required-asterisk {
        color: red;
        margin-left: 2px; /* Small space between label and asterisk */
        font-weight: bold;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Hanya jalankan skrip jika data penting dari controller tersedia
        @if (isset($faceDescriptor) && $faceDescriptor !== 'null' && isset($karyawan))

        // --- DEKLARASI VARIABEL DAN ELEMEN DOM ---
        const video = document.getElementById('videoElement');
        const canvas = document.getElementById('canvasElement');
        const verificationStatus = document.getElementById('verificationStatus');
        const faceImageInput = document.getElementById('face_image');
        const faceDescriptorInput = document.getElementById('face_descriptor');
        const submitBtn = document.getElementById('submitBtn');
        const fotoInput = document.getElementById('fotoInput');
        const startCameraBtn = document.getElementById('startCameraBtn');
        const capturePhotoBtn = document.getElementById('capturePhotoBtn');
        const retryPhotoBtn = document.getElementById('retryPhotoBtn');
        const photoCamera = document.getElementById('photoCamera');
        const photoCanvas = document.getElementById('photoCanvas');
        const photoPreview = document.getElementById('photoPreview');
        const photoPreviewContainer = document.getElementById('photoPreviewContainer');
        const cameraContainer = document.querySelector('.camera-container');
        const photoTimestamp = document.getElementById('photoTimestamp');
        const photoLocation = document.getElementById('photoLocation');
        const coordinatesDisplay = document.getElementById('coordinatesDisplay');
        const laporanForm = document.getElementById('laporanForm');
        
        let faceStream = null;
        let photoStream = null;
        let isFaceVerified = false;
        let faceDetectionInterval;
        let verificationSucceeded = false; // Penanda untuk mengunci status verifikasi
        
        const faceApiThreshold = 0.5; // Threshold yang lebih ketat untuk akurasi
        const storedDescriptor = new Float32Array(Object.values(JSON.parse('{!! $faceDescriptor !!}')));

        // --- FUNGSI-FUNGSI HELPER ---

        function stopStream(stream) {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
            }
        }

        function updateLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(position => {
                    const { latitude, longitude } = position.coords;
                    const locationString = `Lat: ${latitude.toFixed(5)}, Lng: ${longitude.toFixed(5)}`;
                    document.getElementById('lokasi').value = locationString;
                    coordinatesDisplay.textContent = locationString;
                    photoLocation.textContent = `Lokasi: ${latitude.toFixed(3)}, ${longitude.toFixed(3)}`;
                });
            }
        }

        function updateTimestamp() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit', second: '2-digit' });
            const dateString = now.toLocaleDateString('id-ID', { day: '2-digit', month: 'short', year: 'numeric' });
            photoTimestamp.textContent = `${dateString} ${timeString}`;
        }

        function checkFormCompletion() {
            const isFormComplete = isFaceVerified &&
                fotoInput.value &&
                document.getElementById('tgl_laporan').value &&
                document.getElementById('jam_laporan').value &&
                document.querySelector('select[name="jenis_laporan"]').value &&
                document.querySelector('textarea[name="keterangan"]').value &&
                document.getElementById('lokasi').value;
            submitBtn.disabled = !isFormComplete;
        }

        // --- LOGIKA UTAMA APLIKASI ---

        async function initFaceCamera() {
            try {
                verificationStatus.innerHTML = `<div class="alert alert-info small p-2">Mempersiapkan kamera verifikasi...</div>`;
                stopStream(faceStream);
                faceStream = await navigator.mediaDevices.getUserMedia({ video: { width: 320, height: 240, facingMode: 'user' }, audio: false });
                video.srcObject = faceStream;
                video.onloadedmetadata = () => {
                    verificationStatus.innerHTML = `<div class="alert alert-primary small p-2">Sistem siap. Posisikan wajah Anda.</div>`;
                    startFaceDetection();
                };
            } catch (error) {
                verificationStatus.innerHTML = `<div class="alert alert-danger">Kamera Error: ${error.message}</div>`;
            }
        }

        function startFaceDetection() {
            const displaySize = { width: video.videoWidth, height: video.videoHeight };
            faceapi.matchDimensions(canvas, displaySize);

            faceDetectionInterval = setInterval(async () => {
                if (verificationSucceeded) return; // Jika sudah berhasil, hentikan proses

                const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();
                
                if (detection) {
                    const distance = faceapi.euclideanDistance(storedDescriptor, detection.descriptor);
                    if (distance < faceApiThreshold) {
                        verificationSucceeded = true; // Kunci status menjadi berhasil
                        clearInterval(faceDetectionInterval);

                        verificationStatus.innerHTML = `<div class="alert alert-success p-2 small"><strong>Verifikasi Berhasil!</strong> Silakan lanjutkan.</div>`;
                        video.style.border = '3px solid #1cc88a';
                        
                        const canvasForSaving = document.createElement('canvas');
                        canvasForSaving.width = video.videoWidth;
                        canvasForSaving.height = video.videoHeight;
                        canvasForSaving.getContext('2d').drawImage(video, 0, 0);
                        
                        faceImageInput.value = canvasForSaving.toDataURL('image/jpeg');
                        faceDescriptorInput.value = JSON.stringify(Array.from(detection.descriptor));
                        
                        isFaceVerified = true;
                        checkFormCompletion();
                        stopStream(faceStream);
                        faceStream = null;
                    } else {
                        if (!verificationSucceeded) verificationStatus.innerHTML = `<div class="alert alert-warning p-2 small">Wajah tidak dikenali. Coba lagi.</div>`;
                    }
                } else {
                    if (!verificationSucceeded) verificationStatus.innerHTML = `<div class="alert alert-secondary p-2 small">Arahkan wajah ke kamera...</div>`;
                }
            }, 1000);
        }

        startCameraBtn.addEventListener('click', async function() {
            try {
                stopStream(photoStream);
                photoStream = await navigator.mediaDevices.getUserMedia({ video: { width: 640, height: 480, facingMode: 'environment' }, audio: false });
                photoCamera.srcObject = photoStream;
                cameraContainer.style.display = 'block';
                startCameraBtn.style.display = 'none';
                capturePhotoBtn.style.display = 'inline-block';
                retryPhotoBtn.style.display = 'none';
                updateLocation();
                setInterval(updateTimestamp, 1000);
            } catch (error) {
                Swal.fire({ icon: 'error', title: 'Gagal Akses Kamera Belakang', text: 'Pastikan izin kamera telah diberikan dan tidak ada aplikasi lain yang menggunakan kamera.' });
            }
        });

        capturePhotoBtn.addEventListener('click', function() {
            photoCanvas.width = photoCamera.videoWidth;
            photoCanvas.height = photoCamera.videoHeight;
            const ctx = photoCanvas.getContext('2d');
            ctx.drawImage(photoCamera, 0, 0, photoCanvas.width, photoCanvas.height);
            
            const timestampText = photoTimestamp.textContent;
            const locationText = photoLocation.textContent;
            ctx.font = "14px Poppins";
            ctx.fillStyle = "rgba(255, 255, 255, 0.8)";
            ctx.fillText(timestampText, 10, photoCanvas.height - 30);
            ctx.fillText(locationText, 10, photoCanvas.height - 10);
            
            const photoDataUrl = photoCanvas.toDataURL('image/jpeg', 0.8);
            photoPreview.src = photoDataUrl;
            fotoInput.value = photoDataUrl;

            cameraContainer.style.display = 'none';
            photoPreviewContainer.style.display = 'block';
            capturePhotoBtn.style.display = 'none';
            retryPhotoBtn.style.display = 'inline-block';
            
            stopStream(photoStream);
            photoStream = null;
            
            checkFormCompletion();
        });

        retryPhotoBtn.addEventListener('click', function() {
            photoPreviewContainer.style.display = 'none';
            startCameraBtn.style.display = 'inline-block';
            retryPhotoBtn.style.display = 'none';
            fotoInput.value = '';
            checkFormCompletion();
        });

        laporanForm.addEventListener('submit', function(e) {
            e.preventDefault();
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Mengirim...';

            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: new FormData(this),
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success', title: 'Berhasil!', text: response.message, timer: 2000, showConfirmButton: false
                        }).then(() => { window.location.href = response.redirect_url; });
                    } else {
                        throw new Error(response.message || 'Gagal mengirim laporan');
                    }
                },
                error: function(jqXHR) {
                    let errorMsg = jqXHR.responseJSON ? jqXHR.responseJSON.message : "Terjadi kesalahan.";
                    Swal.fire({ icon: 'error', title: 'Error', text: errorMsg });
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<ion-icon name="send-outline"></ion-icon> Kirim Laporan';
                },
                complete: function() {
                    // Logic is handled in success/error now
                }
            });
        });
        
        // Initial setup
        const now = new Date();
        document.getElementById('tgl_laporan').value = now.toISOString().split('T')[0];
        document.getElementById('jam_laporan').value = String(now.getHours()).padStart(2, '0') + ':' + String(now.getMinutes()).padStart(2, '0');
        laporanForm.querySelectorAll('input, select, textarea').forEach(el => el.addEventListener('input', checkFormCompletion));
        window.addEventListener('beforeunload', () => { stopStream(faceStream); stopStream(photoStream); });

        // Inisialisasi awal model face-api
        Promise.all([
            faceapi.nets.tinyFaceDetector.loadFromUri('{{ asset("models") }}'),
            faceapi.nets.faceLandmark68Net.loadFromUri('{{ asset("models") }}'),
            faceapi.nets.faceRecognitionNet.loadFromUri('{{ asset("models") }}')
        ]).then(initFaceCamera).catch(err => {
            verificationStatus.innerHTML = `<div class="alert alert-danger">Gagal memuat model. Periksa koneksi dan muat ulang.</div>`;
        });

        updateLocation();

        @else
            $('#verificationStatus').html(`<div class="alert alert-danger">Anda tidak dapat membuat laporan karena data wajah atau lokasi kantor belum diatur. Harap hubungi admin.</div>`);
            laporanForm.querySelectorAll('input, select, textarea, button').forEach(el => el.disabled = true);
        @endif
    });
</script>
@endpush

resources\views\presensi\create.blade.php
{{-- File: resources/views/presensi/create.blade.php --}}
@extends('layouts.presensi')

@section('header')
<!-- App Header -->
<div class="appHeader bg-primary text-light">
    <div class="left">
        <a href="javascript:;" class="headerButton goBack">
            <ion-icon name="chevron-back-outline"></ion-icon>
        </a>
    </div>
    <div class="pageTitle">E-Presensi</div>
    <div class="right"></div>
</div>
<!-- * App Header -->

<style>
    .presensi-content {
        padding-bottom: 80px;
    }
    .webcam-container {
        position: relative;
        width: 100%;
        margin: auto;
        border-radius: 15px;
        overflow: hidden;
        background: #000;
        border: 3px solid #ddd;
        transition: border-color 0.3s ease;
    }
    #videoElement { width: 100%; display: block; }
    #canvasElement { position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; }
    .btn-verify { transition: all 0.3s ease; position: relative; }
    .btn-verify:disabled { opacity: 0.7; }
    .btn-verify .spinner { display: none; position: absolute; right: 10px; }
    .btn-verify.loading .spinner { display: inline-block; }
    #map { height: 300px; width: 100%; border-radius: 15px; margin-top: 15px; }
    .distance-indicator { position: absolute; bottom: 10px; left: 10px; background: rgba(0, 0, 0, 0.7); color: white; padding: 5px 10px; border-radius: 10px; font-size: 12px; z-index: 1000; }
    .info-card { margin-top: 15px; }
    .success-modal { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 9999; opacity: 0; visibility: hidden; transition: all 0.3s ease; }
    .success-modal.active { opacity: 1; visibility: visible; }
    .success-modal-content { background-color: white; padding: 25px; border-radius: 15px; text-align: center; max-width: 320px; width: 90%; box-shadow: 0 10px 25px rgba(0,0,0,0.2); animation: modalFadeIn 0.4s ease; }
    .success-modal-icon { font-size: 60px; color: #28a745; margin-bottom: 20px; animation: iconBounce 0.6s ease; }
    .success-modal-message { font-size: 18px; margin-bottom: 25px; font-weight: 500; color: #333; line-height: 1.4; }
    .success-modal-btn { background: #28a745; color: white; border: none; padding: 10px 20px; border-radius: 50px; font-weight: 500; width: 100%; transition: all 0.3s ease; }
    .success-modal-btn:hover { background: #218838; transform: translateY(-2px); }
    @keyframes modalFadeIn { from { transform: translateY(20px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
    @keyframes iconBounce { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.2); } }
</style>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
@endsection

@section('content')
<div class="presensi-content">
    <div class="row" style="margin-top: 70px">
        <div class="col">
            @if (!empty($pesanJadwal))
                <div class="alert alert-danger m-2">
                    <h4><ion-icon name="close-circle-outline"></ion-icon> Presensi Tidak Tersedia</h4>
                    <p class="mb-0">{{ $pesanJadwal }}</p>
                </div>
            @elseif (session('error_presensi_create'))
                 <div class="alert alert-danger m-2">
                    <h4><ion-icon name="alert-circle-outline"></ion-icon> Gagal Memuat Presensi</h4>
                    <p class="mb-0">{{ session('error_presensi_create') }}</p>
                </div>
            @else
                <input type="hidden" id="lokasi">
                <input type="hidden" id="nik" value="{{ Auth::guard('karyawan')->user()->nik }}">
                
                <div class="text-center mb-2">
                    @if ($presensiAktif)
                        <h5 style="font-weight: 600;">Absen Pulang</h5>
                    @else
                        <h5 style="font-weight: 600;">Absen Masuk</h5>
                    @endif
                    <div id="verificationStatus" class="text-center mt-2">
                        <small class="text-muted">Posisikan wajah Anda pada kamera</small>
                    </div>
                </div>
                
                <div class="webcam-container mb-3">
                    <video id="videoElement" autoplay playsinline></video>
                    <canvas id="canvasElement"></canvas>
                    <div class="distance-indicator" id="distance-indicator" style="display: none;">
                        Jarak: <span id="distance-value">0</span>m
                    </div>
                </div>
                
                <div class="text-center mb-3">
                    <button id="verifyBtn" class="btn btn-primary btn-block btn-verify" disabled>
                        <ion-icon name="camera-outline"></ion-icon>
                        <span id="verifyText">{{ $presensiAktif ? 'ABSEN PULANG' : 'ABSEN MASUK' }}</span>
                        <span class="spinner spinner-border spinner-border-sm"></span>
                    </button>
                </div>
                
                <div id="errorAlert" class="alert alert-danger d-none"></div>
                
                <div class="alert alert-info">
                    <small>
                        <ion-icon name="information-circle-outline"></ion-icon>
                        Untuk absen, pastikan wajah terlihat jelas dan berada dalam radius {{ $user->office_radius ?? 55 }} meter dari kantor.
                    </small>
                </div>
                
                <div class="row mt-2">
                    <div class="col">
                        <div id="map"></div>
                    </div>
                </div>
                
                <div class="card info-card">
                    <div class="card-body">
                        <h5>Petunjuk:</h5>
                        <ul class="mb-0">
                            <li>Hadapkan wajah ke kamera</li>
                            <li>Pastikan pencahayaan cukup</li>
                            <li>Tombol absen akan aktif jika wajah terverifikasi dan Anda berada di dalam radius kantor.</li>
                        </ul>
                    </div>
                </div>
            @endif
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="success-modal" id="successModal">
    <div class="success-modal-content">
        <div class="success-modal-icon">
            <ion-icon name="checkmark-circle"></ion-icon>
        </div>
        <div class="success-modal-message" id="successMessage"></div>
        <button class="success-modal-btn" id="modalCloseBtn">OK</button>
    </div>
</div>
@endsection

@push('myscript')
<script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (document.getElementById('videoElement')) {
            @if (!empty($user->office_location) && isset($faceDescriptor))
                const video = document.getElementById('videoElement');
                const canvas = document.getElementById('canvasElement');
                const webcamContainer = document.querySelector('.webcam-container');
                const verifyBtn = document.getElementById('verifyBtn');
                const verifyText = document.getElementById('verifyText');
                const errorAlert = document.getElementById('errorAlert');
                const lokasiInput = document.getElementById('lokasi');
                const distanceIndicator = document.getElementById('distance-indicator');
                const distanceValue = document.getElementById('distance-value');
                const successModal = document.getElementById('successModal');
                const successMessage = document.getElementById('successMessage');
                const modalCloseBtn = document.getElementById('modalCloseBtn');
                const verificationStatus = document.getElementById('verificationStatus');
                
                let faceStream;
                let faceDetectionInterval;
                let map, userMarker, officeCircle;
                let distance = Infinity;
                let isFaceVerified = false;
                
                const officeLat = {{ $user->office_location['coordinates'][1] }};
                const officeLng = {{ $user->office_location['coordinates'][0] }};
                const maxRadius = {{ $user->office_radius }};
                const faceApiThreshold = 0.5;
                const storedDescriptor = new Float32Array(Object.values(JSON.parse('{!! $faceDescriptor !!}')));

                function stopStream(stream) {
                    if (stream) {
                        stream.getTracks().forEach(track => track.stop());
                    }
                }

                function calculateDistance(lat1, lon1, lat2, lon2) {
                    const R = 6371e3;
                    const φ1 = lat1 * Math.PI / 180;
                    const φ2 = lat2 * Math.PI / 180;
                    const Δφ = (lat2 - lat1) * Math.PI / 180;
                    const Δλ = (lon2 - lon1) * Math.PI / 180;
                    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ/2) * Math.sin(Δλ/2);
                    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
                    return R * c;
                }

                function updateDistanceUI(dist) {
                    distanceValue.textContent = dist.toFixed(0);
                    distanceIndicator.style.backgroundColor = dist <= maxRadius ? 'rgba(40, 167, 69, 0.7)' : 'rgba(220, 53, 69, 0.7)';
                    if (officeCircle) {
                        officeCircle.setStyle({
                            color: dist <= maxRadius ? '#4e73df' : '#dc3545',
                            fillColor: dist <= maxRadius ? '#4e73df' : '#dc3545'
                        });
                    }
                }
                
                function showError(message) {
                    errorAlert.textContent = message;
                    errorAlert.classList.remove('d-none');
                    setTimeout(() => errorAlert.classList.add('d-none'), 5000);
                }

                async function loadModels() {
                    try {
                        verificationStatus.innerHTML = `<div class="alert alert-info small p-2">Memuat model deteksi wajah...</div>`;
                        const modelPath = '{{ asset("models") }}';
                        await Promise.all([
                            faceapi.nets.tinyFaceDetector.loadFromUri(modelPath),
                            faceapi.nets.faceLandmark68Net.loadFromUri(modelPath),
                            faceapi.nets.faceRecognitionNet.loadFromUri(modelPath)
                        ]);
                        await startVideo();
                        initMap();
                    } catch (error) {
                        console.error("Model loading error:", error);
                        verificationStatus.innerHTML = '';
                        showError("Gagal memuat model. Periksa koneksi dan muat ulang halaman.");
                    }
                }

                async function startVideo() {
                    try {
                        if (faceStream) stopStream(faceStream);
                        faceStream = await navigator.mediaDevices.getUserMedia({ 
                            video: { width: { ideal: 640 }, height: { ideal: 480 }, facingMode: 'user' }, 
                            audio: false 
                        });
                        video.srcObject = faceStream;
                        video.onloadedmetadata = () => {
                            canvas.width = video.videoWidth;
                            canvas.height = video.videoHeight;
                            verificationStatus.innerHTML = `<div class="alert alert-primary small p-2">Sistem siap. Posisikan wajah Anda.</div>`;
                            startFaceDetection();
                        };
                    } catch (error) {
                        showError("Tidak dapat mengakses kamera. Pastikan izin telah diberikan.");
                    }
                }

                function initMap() {
                    if (!navigator.geolocation) {
                        showError("Browser tidak mendukung geolocation.");
                        return;
                    }
                    
                    map = L.map('map').setView([officeLat, officeLng], 17);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
                    
                    L.marker([officeLat, officeLng]).addTo(map).bindPopup("Lokasi Kantor").openPopup();
                    officeCircle = L.circle([officeLat, officeLng], {
                        radius: maxRadius
                    }).addTo(map);

                    distanceIndicator.style.display = 'block';

                    navigator.geolocation.watchPosition(
                        position => {
                            const userLat = position.coords.latitude;
                            const userLng = position.coords.longitude;
                            lokasiInput.value = `${userLat},${userLng}`;
                            distance = calculateDistance(userLat, userLng, officeLat, officeLng);

                            if (!userMarker) {
                                userMarker = L.marker([userLat, userLng]).addTo(map).bindPopup("Lokasi Anda");
                            } else {
                                userMarker.setLatLng([userLat, userLng]);
                            }
                            
                            updateDistanceUI(distance);
                            checkConditionsAndEnableButton();
                        },
                        () => { showError("Tidak dapat mendapatkan lokasi. Pastikan GPS aktif."); },
                        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }
                    );
                }

                function startFaceDetection() {
                    const displaySize = { width: video.videoWidth, height: video.videoHeight };
                    faceapi.matchDimensions(canvas, displaySize);
                    
                    faceDetectionInterval = setInterval(async () => {
                        if (isFaceVerified) return;

                        const detection = await faceapi.detectSingleFace(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptor();
                        const ctx = canvas.getContext('2d');
                        ctx.clearRect(0, 0, canvas.width, canvas.height);
                        
                        if (detection) {
                            const distanceMatch = faceapi.euclideanDistance(storedDescriptor, detection.descriptor);
                            const isMatch = distanceMatch < faceApiThreshold;
                            
                            if (isMatch) {
                                isFaceVerified = true;
                                verificationStatus.innerHTML = `<div class="alert alert-success p-2 small"><strong>Verifikasi Berhasil!</strong></div>`;
                                webcamContainer.style.borderColor = '#1cc88a';
                                checkConditionsAndEnableButton();
                            } else {
                                if (!isFaceVerified) verificationStatus.innerHTML = `<div class="alert alert-warning p-2 small">Wajah tidak dikenali. Coba lagi.</div>`;
                            }
                        } else {
                            if (!isFaceVerified) verificationStatus.innerHTML = `<div class="alert alert-secondary p-2 small">Arahkan wajah ke kamera...</div>`;
                        }
                    }, 1000);
                }

                function checkConditionsAndEnableButton() {
                    const originalText = '{{ ($presensiAktif) ? "ABSEN PULANG" : "ABSEN MASUK" }}';
                    if (isFaceVerified && distance <= maxRadius) {
                        verifyBtn.disabled = false;
                        verifyText.textContent = originalText;
                    } else {
                        verifyBtn.disabled = true;
                        if (!isFaceVerified) {
                            verifyText.textContent = "Verifikasi Wajah...";
                        } else if (distance > maxRadius) {
                            verifyText.textContent = "Anda di Luar Jangkauan";
                        } else {
                            verifyText.textContent = originalText;
                        }
                    }
                }

                verifyBtn.addEventListener('click', async () => {
                    if (!isFaceVerified) { showError("Verifikasi wajah belum berhasil."); return; }
                    if (distance > maxRadius) { showError(`Anda berada ${distance.toFixed(0)}m dari kantor (Maksimal: ${maxRadius}m).`); return; }
                    
                    verifyBtn.disabled = true;
                    verifyBtn.classList.add('loading');
                    verifyText.textContent = "Mengirim data...";
                    
                    clearInterval(faceDetectionInterval);
                    
                    const canvasForSaving = document.createElement('canvas');
                    canvasForSaving.width = video.videoWidth;
                    canvasForSaving.height = video.videoHeight;
                    canvasForSaving.getContext('2d').drawImage(video, 0, 0);
                    const imageData = canvasForSaving.toDataURL('image/jpeg');

                    stopStream(faceStream);
                    
                    try {
                        const response = await fetch("{{ route('presensi.store') }}", {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json', 'X-CSRF-TOKEN': '{{ csrf_token() }}', 'Accept': 'application/json' },
                            body: JSON.stringify({ image: imageData, lokasi: lokasiInput.value, nik: "{{ $user->nik }}" })
                        });
                        
                        const data = await response.json();
                        if (!response.ok) throw new Error(data.error || "Gagal mengirim data presensi.");
                        showSuccessModal(data.success, data.redirect_url);
                    } catch (error) {
                        showError(error.message);
                        verifyBtn.classList.remove('loading');
                        isFaceVerified = false; // Reset verification status on error
                        startVideo(); 
                    }
                });

                function showSuccessModal(message, redirectUrl) {
                    successMessage.textContent = message;
                    successModal.classList.add('active');
                    
                    const closeAndRedirect = () => {
                        successModal.classList.remove('active');
                        window.location.href = redirectUrl || '/dashboard';
                    };
                    
                    modalCloseBtn.onclick = closeAndRedirect;
                    setTimeout(closeAndRedirect, 3000);
                }
                
                loadModels();
                
                window.addEventListener('beforeunload', () => stopStream(faceStream));
            @else
                showError("Data wajah atau lokasi kantor tidak ditemukan. Hubungi admin.");
                if(document.getElementById('verifyBtn')) {
                    document.getElementById('verifyBtn').setAttribute('disabled', true);
                }
                if(document.getElementById('verifyText')) {
                    document.getElementById('verifyText').textContent = 'Tidak Dapat Absen';
                }
            @endif
        }
    });
</script>
@endpush


resources\views\presensi\detail_karyawan.blade.php
@extends('admin.layouts.app')

@section('title', 'Detail Presensi Karyawan: ' . $karyawan->nama_lengkap)

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Detail Presensi: {{ $karyawan->nama_lengkap }}</h1>
            <p class="mb-0 text-muted">NIK: {{ $karyawan->nik }} - Jabatan: {{ $karyawan->jabatan }}</p>
        </div>
        <a href="{{ route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekap
        </a>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Periode</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.presensi.detail_karyawan', $karyawan->nik) }}">
                <div class="row align-items-end">
                    <div class="col-md-4 mb-3">
                        <label for="bulan" class="form-label">Bulan:</label>
                        <select name="bulan" id="bulan" class="form-select form-select-sm">
                            @for ($b = 1; $b <= 12; $b++)
                                <option value="{{ str_pad($b, 2, '0', STR_PAD_LEFT) }}" {{ $bulan == str_pad($b, 2, '0', STR_PAD_LEFT) ? 'selected' : '' }}>
                                    {{ $namaBulan[$b] }}
                                </option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="tahun" class="form-label">Tahun:</label>
                        <select name="tahun" id="tahun" class="form-select form-select-sm">
                            @for ($t = date('Y'); $t >= date('Y') - 5; $t--)
                                <option value="{{ $t }}" {{ $tahun == $t ? 'selected' : '' }}>{{ $t }}</option>
                            @endfor
                        </select>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-funnel-fill"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Histori Presensi ({{ $namaBulan[(int)$bulan] }} {{ $tahun }})</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Tanggal</th>
                            <th>Hari</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($historiPresensi as $index => $data)
                        <tr>
                            <td>{{ $index + 1 }}</td>
                            <td>{{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('D MMM YYYY') }}</td>
                            <td>{{ \Carbon\Carbon::parse($data->tgl_presensi)->isoFormat('dddd') }}</td>
                            <td class="{{ $data->jam_in > '07:00:00' && $data->jam_in ? 'table-warning' : '' }}">{{ $data->jam_in ?? '-' }}</td>
                            <td>
                                @if($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Foto Masuk" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_in ?? '-' }}</small></td>
                            <td>{{ $data->jam_out ?? '-' }}</td>
                            <td>
                                @if($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Foto Pulang" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_out ?? '-' }}</small></td>
                            <td>
                                <a href="{{ route('admin.presensi.edit', $data->_id) }}" class="btn btn-warning btn-sm py-0 px-1" title="Edit Presensi">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="10" class="text-center">Tidak ada data presensi untuk periode ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\presensi\edit-office-location.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light">
    <div class="left">
        <a href="{{ route('dashboard') }}" class="headerButton goBack">
            <ion-icon name="chevron-back-outline"></ion-icon>
        </a>
    </div>
    <div class="pageTitle">Edit Lokasi Kantor</div>
    <div class="right"></div>
</div>
@endsection

@section('content')
<div class="row" style="margin-top: 70px; margin-bottom: 70px;">
    <div class="col">
        <div class="card">
            <div class="card-body">
                @if(session('success'))
                <div class="alert alert-success">
                    {{ session('success') }}
                </div>
                @endif
                
                <form action="{{ route('presensi.update-office-location') }}" method="POST" id="officeLocationForm">
                    @csrf
                    
                    <div class="form-group">
                        <label>Lokasi Kantor Saat Ini</label>
                        <div id="map" style="height: 300px; border-radius: 10px;"></div>
                        <small class="text-muted">Geser map dan klik untuk mengubah lokasi kantor</small>
                        <input type="hidden" id="latitude" name="latitude" value="{{ $karyawan->office_location['coordinates'][1] ?? '' }}">
                        <input type="hidden" id="longitude" name="longitude" value="{{ $karyawan->office_location['coordinates'][0] ?? '' }}">
                    </div>
                    
                    <div class="form-group">
                        <label>Radius (meter)</label>
                        <input type="number" class="form-control" name="radius" id="radius" 
                            value="{{ $karyawan->office_radius ?? 55 }}" min="10" max="500">
                        <small class="text-muted">Jarak maksimum dari kantor untuk bisa melakukan presensi</small>
                    </div>
                    
                    <div class="form-group basic">
                        <button type="submit" class="btn btn-primary btn-block">
                            <ion-icon name="save-outline"></ion-icon> Simpan Perubahan
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@endsection

@push('myscript')
<!-- Leaflet JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<script>
$(document).ready(function() {
    // Inisialisasi map dengan lokasi kantor saat ini
    var currentLat = {{ $karyawan->office_location['coordinates'][1] ?? -2.5489 }};
    var currentLng = {{ $karyawan->office_location['coordinates'][0] ?? 118.0149 }};
    
    var map = L.map('map').setView([currentLat, currentLng], 15);
    
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Tambahkan marker
    var marker = L.marker([currentLat, currentLng], {
        draggable: true
    }).addTo(map);
    
    // Update marker position when map is clicked
    map.on('click', function(e) {
        marker.setLatLng(e.latlng);
        updateLocation(e.latlng);
    });
    
    // Update marker position when dragged
    marker.on('dragend', function(e) {
        updateLocation(marker.getLatLng());
    });
    
    function updateLocation(latlng) {
        $('#latitude').val(latlng.lat);
        $('#longitude').val(latlng.lng);
    }
    
    // Form validation
    $('#officeLocationForm').submit(function(e) {
        if (!$('#latitude').val() || !$('#longitude').val()) {
            e.preventDefault();
            alert('Silahkan tentukan lokasi kantor pada peta');
            return false;
        }
        
        var radius = $('#radius').val();
        if (!radius || radius < 10 || radius > 500) {
            e.preventDefault();
            alert('Radius harus antara 10-500 meter');
            return false;
        }
    });
});
</script>
@endpush

resources\views\presensi\edit.blade.php
@extends('admin.layouts.app')

@section('title', 'Edit Data Presensi')

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Edit Data Presensi</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                Karyawan: {{ $presensi->karyawan->nama_lengkap ?? $presensi->nik }}
                - Tanggal: {{ \Carbon\Carbon::parse($presensi->tgl_presensi)->isoFormat('D MMMM YYYY') }}
            </h6>
        </div>
        <div class="card-body">
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif

            <form action="{{ route('admin.presensi.update', $presensi->_id) }}" method="POST">
                @csrf
                @method('PUT')

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="nik_display" class="form-label">NIK</label>
                        <input type="text" id="nik_display" class="form-control" value="{{ $presensi->nik }}" readonly>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="nama_display" class="form-label">Nama Karyawan</label>
                        <input type="text" id="nama_display" class="form-control" value="{{ $presensi->karyawan->nama_lengkap ?? 'N/A' }}" readonly>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="tgl_presensi_edit" class="form-label">Tanggal Presensi <span class="text-danger">*</span></label>
                    <input type="date" class="form-control @error('tgl_presensi_edit') is-invalid @enderror" id="tgl_presensi_edit" name="tgl_presensi_edit" value="{{ old('tgl_presensi_edit', \Carbon\Carbon::parse($presensi->tgl_presensi)->format('Y-m-d')) }}" required>
                    @error('tgl_presensi_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="jam_in_edit" class="form-label">Jam Masuk (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_in_edit') is-invalid @enderror" id="jam_in_edit" name="jam_in_edit" value="{{ old('jam_in_edit', $presensi->jam_in) }}">
                        @error('jam_in_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        @if($presensi->foto_in)
                        <small class="form-text text-muted">Foto Masuk: <a href="{{ asset('storage/' . $presensi->foto_in) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Masuk: {{ $presensi->lokasi_in ?? '-' }}</small>
                        @endif
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="jam_out_edit" class="form-label">Jam Pulang (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_out_edit') is-invalid @enderror" id="jam_out_edit" name="jam_out_edit" value="{{ old('jam_out_edit', $presensi->jam_out) }}">
                        @error('jam_out_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                         @if($presensi->foto_out)
                        <small class="form-text text-muted">Foto Pulang: <a href="{{ asset('storage/' . $presensi->foto_out) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Pulang: {{ $presensi->lokasi_out ?? '-' }}</small>
                        @endif
                    </div>
                </div>
                
                <div class="alert alert-warning small mt-3">
                    <strong>Perhatian:</strong> Mengubah data presensi akan tercatat. Pastikan perubahan yang dilakukan sudah benar dan dapat dipertanggungjawabkan. Foto dan lokasi asli tidak dapat diubah melalui form ini.
                </div>


                <div class="mt-4">
                    <a href="{{ url()->previous() != url()->current() ? url()->previous() : route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

resources\views\presensi\editprofile.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="{{ route('profile') }}" class="headerButton" style="color: white;">
            <ion-icon name="chevron-back-outline" style="font-size: 20px;"></ion-icon>
        </a>
    </div>
    <div class="pageTitle text-center" style="font-weight: 600; letter-spacing: 0.5px;">Edit Profile</div>
    <div class="right"></div>
</div>
@endsection

@section('content')
<div class="row" style="margin-top: -2rem; padding-bottom: 80px;">
    <div class="col">
        @php
            $messagesuccess = Session::get('success');
            $messageerror = Session::get('error');
        @endphp
        @if($messagesuccess)
        <div class="alert alert-success" style="margin: 15px; border-radius: 10px; background: rgba(40, 167, 69, 0.1); border: 1px solid rgba(40, 167, 69, 0.3); color: #28a745; padding: 10px 15px;">
            <ion-icon name="checkmark-circle" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
            {{ $messagesuccess }}
        </div>
        @endif
        @if($messageerror)
        <div class="alert alert-danger" style="margin: 15px; border-radius: 10px; background: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.3); color: #dc3545; padding: 10px 15px;">
            <ion-icon name="close-circle" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
            {{ $messageerror }}
        </div>
        @endif
    </div>
</div>

<div class="section mt-1" style="padding: 0 15px; margin-bottom: 30px;">
    <div class="card" style="border-radius: 15px; border: none; box-shadow: 0 6px 15px rgba(0,0,0,0.05);">
        <div class="card-body" style="padding: 20px 20px 30px;">
            <form action="{{ route('updateprofile') }}" method="POST" enctype="multipart/form-data" id="profileForm">
                @csrf
                
                <!-- Profile Picture Upload -->
                <div class="form-group text-center mb-4">
                    <div class="avatar" style="margin-bottom: 20px;">
                        @php
                            $user = Auth::guard('karyawan')->user();
                            $foto = $user->foto ?? null;
                        @endphp
                        <img 
                            src="{{ !empty($foto) ? asset('storage/' . $foto) : asset('assets/img/sample/avatar/avatar1.jpg') }}" 
                            alt="avatar" 
                            class="imaged w120 rounded-circle shadow" 
                            style="border: 3px solid #4e73df; padding: 4px; box-shadow: 0 6px 20px rgba(78, 115, 223, 0.3);">
                    </div>
                    <div class="file-upload-wrapper" style="position: relative; overflow: hidden; display: inline-block; width: 100%;">
                        <button type="button" class="btn btn-outline-primary btn-block" style="border-radius: 10px; height: 45px; border: 1px dashed #4e73df; background-color: rgba(78, 115, 223, 0.05); position: relative;">
                            <ion-icon name="camera-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                            <span id="file-name" style="font-size: 14px;">Ubah Foto Profil</span>
                        </button>
                        <input type="file" name="foto" id="foto" accept=".png, .jpg, .jpeg" style="position: absolute; font-size: 100px; opacity: 0; right: 0; top: 0; height: 100%; width: 100%; cursor: pointer;">
                    </div>
                    <small class="text-muted" style="font-size: 12px; display: block; margin-top: 5px;">Format: JPG/PNG (Max 2MB)</small>
                </div>
                
                <!-- Nama Lengkap -->
                <div class="form-group mb-3">
                    <label for="nama_lengkap" style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Nama Lengkap</label>
                    <div class="input-with-clear" style="position: relative;">
                        <input type="text" class="form-control" value="{{ $user->nama_lengkap }}" name="nama_lengkap" id="nama_lengkap" placeholder="Nama Lengkap" autocomplete="off" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px; padding-right: 40px;">
                        <span class="clear-field" data-target="#nama_lengkap" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;">
                            <ion-icon name="close-circle" style="color: #6c757d; font-size: 18px;"></ion-icon>
                        </span>
                    </div>
                </div>
                
                <!-- Email -->
                <div class="form-group mb-3">
                    <label for="email" style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Email</label>
                    <div class="input-with-clear" style="position: relative;">
                        <input type="email" class="form-control" value="{{ $user->email ?? '' }}" name="email" id="email" placeholder="Email" autocomplete="off" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px; padding-right: 40px;">
                        <span class="clear-field" data-target="#email" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;">
                            <ion-icon name="close-circle" style="color: #6c757d; font-size: 18px;"></ion-icon>
                        </span>
                    </div>
                </div>
                
                <!-- No HP -->
                <div class="form-group mb-3">
                    <label for="no_hp" style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">No. HP</label>
                    <div class="input-with-clear" style="position: relative;">
                        <input type="text" class="form-control" value="{{ $user->no_hp }}" name="no_hp" id="no_hp" placeholder="No. HP" autocomplete="off" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px; padding-right: 40px;">
                        <span class="clear-field" data-target="#no_hp" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;">
                            <ion-icon name="close-circle" style="color: #6c757d; font-size: 18px;"></ion-icon>
                        </span>
                    </div>
                </div>
                
                <!-- Password -->
                <div class="form-group mb-4">
                    <label for="password" style="font-size: 14px; color: #6c757d; margin-bottom: 5px; display: block;">Password (Kosongkan jika tidak diubah)</label>
                    <div class="input-with-toggle" style="position: relative;">
                        <input type="password" class="form-control" name="password" id="password" placeholder="Password" autocomplete="new-password" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding: 0 15px; padding-right: 40px;">
                        <span class="toggle-password" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;">
                            <ion-icon name="eye-off-outline" style="color: #6c757d; font-size: 18px;"></ion-icon>
                        </span>
                    </div>
                    <small class="text-muted" style="font-size: 12px;">Minimal 6 karakter</small>
                </div>
                
                <!-- Submit Button -->
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block" style="border-radius: 10px; height: 45px; font-weight: 500; background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); border: none; box-shadow: 0 4px 15px rgba(78, 115, 223, 0.3); transition: all 0.3s ease; margin-top: 10px;">
                        <ion-icon name="refresh-outline" style="vertical-align: middle; margin-right: 8px;"></ion-icon> Update Profile
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection

@push('myscript')
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function() {
        // Show selected file name
        $('#foto').change(function() {
            var fileName = $(this).val().split('\\').pop();
            $('#file-name').text(fileName || 'Ubah Foto Profil');
            
            // Preview the selected image
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('.avatar img').attr('src', e.target.result);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
        
        // Clear field functionality
        $(".clear-field").click(function() {
            var target = $(this).data('target');
            $(target).val('').focus();
        });
        
        // Toggle password visibility
        $(".toggle-password").click(function() {
            var passwordInput = $("#password");
            var icon = $(this).find("ion-icon");
            
            if (passwordInput.attr("type") === "password") {
                passwordInput.attr("type", "text");
                icon.attr("name", "eye-outline");
            } else {
                passwordInput.attr("type", "password");
                icon.attr("name", "eye-off-outline");
            }
        });
        
        // Form validation
        $("#profileForm").submit(function(e) {
            var nama = $("#nama_lengkap").val();
            var email = $("#email").val();
            var nohp = $("#no_hp").val();
            
            if (nama == "") {
                Swal.fire({
                    title: 'Perhatian!',
                    text: 'Nama lengkap harus diisi',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                e.preventDefault();
                return false;
            }
            
            if (email == "") {
                Swal.fire({
                    title: 'Perhatian!',
                    text: 'Email harus diisi',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                e.preventDefault();
                return false;
            }
            
            if (nohp == "") {
                Swal.fire({
                    title: 'Perhatian!',
                    text: 'Nomor HP harus diisi',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                e.preventDefault();
                return false;
            }
            
            // Validate email format
            var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                Swal.fire({
                    title: 'Perhatian!',
                    text: 'Format email tidak valid',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                e.preventDefault();
                return false;
            }
        });
        
        // Button hover effect
        $(".btn-primary").hover(
            function() {
                $(this).css({
                    'transform': 'translateY(-2px)',
                    'box-shadow': '0 8px 20px rgba(78, 115, 223, 0.4)'
                });
            },
            function() {
                $(this).css({
                    'transform': 'translateY(0)',
                    'box-shadow': '0 4px 15px rgba(78, 115, 223, 0.3)'
                });
            }
        );
        
        // Clear field hover effect
        $(".clear-field").hover(
            function() {
                $(this).find("ion-icon").css('color', '#e74a3b');
            },
            function() {
                $(this).find("ion-icon").css('color', '#6c757d');
            }
        );
        
        // Toggle password hover effect
        $(".toggle-password").hover(
            function() {
                $(this).find("ion-icon").css('color', '#4e73df');
            },
            function() {
                $(this).find("ion-icon").css('color', '#6c757d');
            }
        );
    });
</script>
@endpush

@push('styles')
<style>
    /* Avatar styles */
    .avatar {
        margin: 0 auto;
        width: 120px;
        height: 120px;
    }
    
    .avatar img {
        transition: all 0.3s ease;
    }
    
    .avatar img:hover {
        transform: scale(1.05);
    }
    
    /* File upload button */
    .btn-outline-primary:hover {
        background-color: rgba(78, 115, 223, 0.1) !important;
    }
    
    /* Input focus effect */
    .form-control:focus {
        border-color: #4e73df !important;
        box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25) !important;
    }
    
    /* Input with clear/toggle */
    .input-with-clear,
    .input-with-toggle {
        position: relative;
    }
    
    /* Safe area for mobile devices */
    @supports (padding-bottom: env(safe-area-inset-bottom)) {
        body {
            padding-bottom: env(safe-area-inset-bottom);
        }
    }
    
    /* Ensure proper spacing at bottom */
    html, body {
        overflow-x: hidden;
        height: 100%;
    }
    
    /* Responsive adjustments */
    @media (max-width: 576px) {
        .appHeader {
            padding-top: 15px;
            padding-bottom: 15px;
        }
        
        .pageTitle {
            font-size: 18px;
        }
        
        /* Additional bottom spacing for mobile */
        .row {
            padding-bottom: 100px !important;
        }
        
        .card-body {
            padding-bottom: 40px !important;
        }
    }
</style>
@endpush

resources\views\presensi\gethistori.blade.php
@if ($histori->isEmpty())
    <div class="empty-histori">
        <ion-icon name="calendar-outline" style="color: #4e73df;"></ion-icon>
        <h5 style="color: #4e73df; text-shadow: 0 2px 4px rgba(78, 115, 223, 0.15);">Belum Ada Presensi</h5>
        <p style="color: #6c757d;">Tidak ditemukan data presensi untuk periode ini</p>
    </div>
@else
    @foreach ($histori as $d)
    <div class="card presensi-card">
        <div class="card-body">
            <div class="date-header">
                <div class="date-text">
                    <ion-icon name="calendar-outline" style="color: #4e73df;"></ion-icon>
                    <span style="color: #2e3a4d; font-weight: 700;">{{ date('d M Y', strtotime($d->tgl_presensi)) }}</span>
                </div>
                <div class="status-badge {{ $d->jam_out ? 'status-complete' : ($d->jam_in ? 'status-incomplete' : 'status-missing') }}">
                    {{ $d->jam_out ? 'Lengkap' : ($d->jam_in ? 'Belum Pulang' : 'Tidak Absen') }}
                </div>
            </div>
            
            <div class="day-info" style="color: #6c757d;">
                <ion-icon name="time-outline" style="color: #6c757d;"></ion-icon>
                <span>{{ date('l', strtotime($d->tgl_presensi)) }}</span>
            </div>
            
            @if($d->jam_in)
            <div class="time-entry">
                <div class="time-row">
                    <ion-icon name="enter-outline" class="time-icon in" style="color: #1cc88a;"></ion-icon>
                    <span class="time-text" style="color: #1cc88a; font-weight: 600; text-shadow: 0 2px 4px rgba(28, 200, 138, 0.1);">
                        Masuk: <span style="font-weight: 700;">{{ $d->jam_in }}</span>
                    </span>
                </div>
            </div>
            @endif
            
            @if($d->jam_out)
            <div class="time-entry">
                <div class="time-row">
                    <ion-icon name="exit-outline" class="time-icon out" style="color: #4e73df;"></ion-icon>
                    <span class="time-text" style="color: #4e73df; font-weight: 600; text-shadow: 0 2px 4px rgba(78, 115, 223, 0.1);">
                        Pulang: <span style="font-weight: 700;">{{ $d->jam_out }}</span>
                    </span>
                </div>
            </div>
            @endif
            
            @if(!$d->jam_in && !$d->jam_out)
            <div class="time-entry missing">
                <div class="time-row">
                    <ion-icon name="close-circle-outline" class="time-icon" style="color: #e74a3b;"></ion-icon>
                    <span class="time-text" style="color: #e74a3b; font-weight: 600;">
                        Tidak ada data presensi
                    </span>
                </div>
            </div>
            @endif
        </div>
    </div>
    @endforeach
@endif

resources\views\presensi\harian.blade.php
@extends('admin.layouts.app')

@section('title', 'Laporan Presensi Harian')

@push('styles')
<style>
    .table-sm th, .table-sm td {
        font-size: 0.85rem;
        padding: 0.4rem;
    }
    .img-thumbnail-xs {
        width: 40px;
        height: 40px;
        object-fit: cover;
    }
</style>
@endpush

@section('content')
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 mb-0 text-gray-800">Laporan Presensi Harian</h1>
        <a href="{{ route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i> Kembali ke Rekap
        </a>
    </div>


    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Filter Tanggal</h6>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('admin.presensi.harian') }}">
                <div class="row align-items-end">
                    <div class="col-md-4 mb-3">
                        <label for="tanggal" class="form-label">Pilih Tanggal:</label>
                        <input type="date" name="tanggal" id="tanggal" class="form-control form-control-sm" value="{{ $tanggal }}">
                    </div>
                    <div class="col-md-3 mb-3">
                        <button type="submit" class="btn btn-primary btn-sm"><i class="bi bi-funnel-fill"></i> Tampilkan</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Presensi Tanggal: {{ \Carbon\Carbon::parse($tanggal)->isoFormat('dddd, D MMMM YYYY') }}</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-sm" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>NIK</th>
                            <th>Nama Karyawan</th>
                            <th>Jabatan</th>
                            <th>Jam Masuk</th>
                            <th>Foto Masuk</th>
                            <th>Lokasi Masuk</th>
                            <th>Jam Pulang</th>
                            <th>Foto Pulang</th>
                            <th>Lokasi Pulang</th>
                            <th>Aksi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @forelse ($presensiHarian as $index => $data)
                        <tr>
                            <td>{{ $index + 1 }}</td>
                            <td>{{ $data->nik }}</td>
                            <td>{{ $data->karyawan->nama_lengkap ?? 'N/A' }}</td>
                            <td>{{ $data->karyawan->jabatan ?? 'N/A' }}</td>
                            <td class="{{ $data->jam_in > '07:00:00' && $data->jam_in ? 'table-warning' : '' }}">{{ $data->jam_in ?? '-' }}</td>
                            <td>
                                @if($data->foto_in)
                                <a href="{{ asset('storage/' . $data->foto_in) }}" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_in) }}" alt="Foto Masuk" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_in ?? '-' }}</small></td>
                            <td>{{ $data->jam_out ?? '-' }}</td>
                            <td>
                                @if($data->foto_out)
                                <a href="{{ asset('storage/' . $data->foto_out) }}" target="_blank">
                                    <img src="{{ asset('storage/' . $data->foto_out) }}" alt="Foto Pulang" class="img-thumbnail-xs">
                                </a>
                                @else
                                -
                                @endif
                            </td>
                            <td><small>{{ $data->lokasi_out ?? '-' }}</small></td>
                            <td>
                                <a href="{{ route('admin.presensi.edit', $data->_id) }}" class="btn btn-warning btn-sm py-0 px-1" title="Edit Presensi">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </td>
                        </tr>
                        @empty
                        <tr>
                            <td colspan="11" class="text-center">Tidak ada data presensi untuk tanggal ini.</td>
                        </tr>
                        @endforelse
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@endsection

resources\views\presensi\histori.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="javascript:;" class="headerButton goBack" style="color: white;">
            <ion-icon name="chevron-back-outline" style="font-size: 20px;"></ion-icon>
        </a>
    </div>
    <div class="pageTitle text-center" style="font-weight: 600; letter-spacing: 0.5px;">Histori Presensi</div>
    <div class="right"></div>
</div>
@endsection

@section('content')
<div class="section full" style="padding-top: 80px; padding-bottom: 100px;">
    <!-- Filter Section -->
    <div class="card" style="border-radius: 12px; border: none; box-shadow: 0 4px 15px rgba(0,0,0,0.05); margin: 15px;">
        <div class="card-body" style="padding: 20px;">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="form-group">
                        <label for="bulan" style="font-size: 13px; color: #6c757d; margin-bottom: 5px;">Bulan</label>
                        <select name="bulan" id="bulan" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding-left: 15px;">
                            <option value="">Pilih Bulan</option>
                            @for ($i=1; $i<=12; $i++) 
                                <option value="{{ $i }}" {{ date("m") == $i ? 'selected' : '' }}>{{ $namabulan[$i] }}</option>
                            @endfor
                        </select>
                    </div>
                </div>
                <div class="col-12 mb-3">
                    <div class="form-group">
                        <label for="tahun" style="font-size: 13px; color: #6c757d; margin-bottom: 5px;">Tahun</label>
                        <select name="tahun" id="tahun" class="form-control" style="border-radius: 10px; height: 45px; border: 1px solid #e0e0e0; padding-left: 15px;">
                            <option value="">Pilih Tahun</option>
                            @php
                            $tahunmulai = 2024;
                            $tahunskrg = date("Y");
                            @endphp
                            @for ($tahun = $tahunmulai; $tahun <= $tahunskrg; $tahun++) 
                                <option value="{{ $tahun }}" {{ date("Y") == $tahun ? 'selected' : '' }}>{{ $tahun }}</option> 
                            @endfor
                        </select>
                    </div>
                </div>
                <div class="col-12">
                    <button class="btn btn-primary btn-block" id="getdata" style="border-radius: 10px; height: 45px; font-weight: 500; background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); border: none; box-shadow: 0 4px 15px rgba(78, 115, 223, 0.3);">
                        <ion-icon name="search-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon> Cari Data
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Animation -->
    <div id="loading" class="text-center" style="display:none; margin: 30px 0;">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem; border-width: 0.25em;" role="status">
            <span class="sr-only">Loading...</span>
        </div>
        <p style="margin-top: 15px; color: #6c757d; font-weight: 500;">Memuat data...</p>
    </div>

    <!-- Histori Container -->
    <div id="histori-container" style="padding: 0 15px;">
        <div id="showhistori"></div>
    </div>
</div>
@endsection

@push('myscript')
<script>
    $(document).ready(function(){
        // Hover effect for search button
        $("#getdata").hover(
            function() {
                $(this).css({
                    'transform': 'translateY(-2px)',
                    'box-shadow': '0 8px 20px rgba(78, 115, 223, 0.4)'
                });
            },
            function() {
                $(this).css({
                    'transform': 'translateY(0)',
                    'box-shadow': '0 4px 15px rgba(78, 115, 223, 0.3)'
                });
            }
        );

        $("#getdata").click(function(e){
            e.preventDefault();
            var bulan = $('#bulan').val();
            var tahun = $('#tahun').val();

            if(bulan == "") {
                Swal.fire({
                    title: 'Peringatan!',
                    text: 'Bulan harus dipilih',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                return false;
            }

            if(tahun == "") {
                Swal.fire({
                    title: 'Peringatan!',
                    text: 'Tahun harus dipilih',
                    icon: 'warning',
                    confirmButtonColor: '#4e73df'
                });
                return false;
            }

            // Show loading animation
            $("#loading").fadeIn(200);
            $("#showhistori").fadeOut(100);

            $.ajax({
                type: 'POST',
                url: "{{ route('presensi.gethistori') }}",
                data: {
                    _token: "{{ csrf_token() }}",
                    bulan: bulan,
                    tahun: tahun
                },
                cache: false,
                success: function(respond) {
                    // Hide loading and show data with animation
                    $("#loading").fadeOut(200, function() {
                        $("#showhistori").hide().html(respond).fadeIn(300);
                        
                        // Add animation to each history item
                        $(".presensi-card").each(function(index) {
                            $(this).css({
                                'opacity': '0',
                                'transform': 'translateY(20px)'
                            }).delay(index * 150).animate({
                                'opacity': '1',
                                'transform': 'translateY(0)'
                            }, 300);
                        });
                    });
                },
                error: function(xhr) {
                    $("#loading").fadeOut(200);
                    Swal.fire({
                        title: 'Error!',
                        text: xhr.responseJSON?.message || "Terjadi kesalahan saat memuat data",
                        icon: 'error',
                        confirmButtonColor: '#4e73df'
                    });
                }
            });
        });
    });
</script>
@endpush

@push('styles')
<style>
    /* Enhanced Card Styles */
    .presensi-card {
        border-radius: 12px;
        border: none;
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        margin-bottom: 18px;
        overflow: hidden;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        background: white;
        border-left: 4px solid #4e73df;
    }
    
    .presensi-card:hover {
        transform: translateY(-5px) scale(1.01) !important;
        box-shadow: 0 12px 30px rgba(78, 115, 223, 0.15) !important;
    }
    
    .presensi-card .card-body {
        padding: 18px;
    }
    
    /* Vibrant Status Badge */
    .status-badge {
        background: linear-gradient(135deg, #4e73df 0%, #224abe 100%);
        color: white;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        letter-spacing: 0.3px;
        box-shadow: 0 2px 8px rgba(78, 115, 223, 0.2);
    }
    
    .status-complete {
        background: linear-gradient(135deg, #1cc88a 0%, #17a673 100%);
        box-shadow: 0 2px 8px rgba(28, 200, 138, 0.2);
    }
    
    .status-incomplete {
        background: linear-gradient(135deg, #f6c23e 0%, #dda20a 100%);
        box-shadow: 0 2px 8px rgba(246, 194, 62, 0.2);
    }
    
    .status-missing {
        background: linear-gradient(135deg, #e74a3b 0%, #be2617 100%);
        box-shadow: 0 2px 8px rgba(231, 74, 59, 0.2);
    }
    
    /* Attractive Date Header */
    .date-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 12px;
        padding-bottom: 10px;
        border-bottom: 1px dashed #e0e0e0;
    }
    
    .date-text {
        font-weight: 700;
        font-size: 15px;
        color: #2e3a4d;
        display: flex;
        align-items: center;
    }
    
    .date-text ion-icon {
        margin-right: 8px;
        font-size: 18px;
        color: #4e73df;
    }
    
    /* Beautiful Time Blocks */
    .time-info {
        display: flex;
        align-items: center;
        margin: 12px 0;
        padding: 12px;
        background: #f8f9fc;
        border-radius: 8px;
        transition: all 0.2s ease;
    }
    
    .time-info:hover {
        background: #f1f5ff;
        transform: translateX(3px);
    }
    
    .time-info ion-icon {
        font-size: 20px;
        margin-right: 12px;
        min-width: 24px;
        text-align: center;
    }
    
    .time-in ion-icon {
        color: #1cc88a;
    }
    
    .time-out ion-icon {
        color: #4e73df;
    }
    
    .time-missing ion-icon {
        color: #e74a3b;
    }
    
    .time-label {
        font-size: 13px;
        color: #6c757d;
        margin-right: 5px;
        font-weight: 500;
    }
    
    .time-value {
        font-weight: 600;
        color: #4e73df;
        letter-spacing: 0.3px;
    }
    
    .time-in .time-value {
        color: #1cc88a;
    }
    
    .time-out .time-value {
        color: #4e73df;
    }
    
    /* Elegant Empty State */
    .empty-histori {
        text-align: center;
        padding: 40px 20px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.05);
    }
    
    .empty-histori ion-icon {
        font-size: 60px;
        color: #d1d5e0;
        margin-bottom: 15px;
    }
    
    .empty-histori h5 {
        font-weight: 600;
        color: #4e73df;
        margin-bottom: 5px;
    }
    
    .empty-histori p {
        color: #6c757d;
        margin-top: 0;
        font-size: 14px;
    }
    
    /* Responsive Design */
    @media (max-width: 576px) {
        .presensi-card {
            margin-bottom: 15px;
        }
        
        .time-info {
            padding: 10px;
        }
        
        .time-info ion-icon {
            font-size: 18px;
        }
    }
</style>
@endpush

resources\views\presensi\lapor.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="#" onclick="goBackOrFallback()" class="headerButton goBack" style="color: white;">
            <ion-icon name="chevron-back-outline" style="font-size: 20px;"></ion-icon>
        </a>
    </div>
    <div class="pageTitle text-center" style="font-weight: 600; letter-spacing: 0.5px;">Daftar Laporan Saya</div>
    <div class="right">
        <a href="{{ route('laporan.create') }}" class="headerButton" style="color: white;">
            <ion-icon name="add-circle-outline" style="font-size: 24px;"></ion-icon>
        </a>
    </div>
</div>
@endsection

@section('content')
<div class="section full mt-2" style="padding-bottom: 70px;">
    <div class="section-title">Laporan Anda</div>
    <div class="wide-block p-0">

        @if (session('success'))
            <div class="alert alert-success m-2">
                {{ session('success') }}
            </div>
        @endif
        @if (session('error'))
            <div class="alert alert-danger m-2">
                {{ session('error') }}
            </div>
        @endif

        @if($laporan->isEmpty())
        <div class="text-center p-4 mt-3">
            <img src="{{ asset('assets/img/sample/photos/no-data.png') }}" alt="Tidak ada data" class="imaged w160 mb-2" style="max-width: 120px;" onerror="this.onerror=null;this.src='https://placehold.co/120x120/EBF4FF/0D6EFD?text=No+Data';">
            <h4 class="mt-2" style="font-weight: 500; color: #555;">Belum Ada Laporan</h4>
            <p class="text-muted small">Anda belum membuat laporan apapun. Klik tombol '+' di kanan atas untuk membuat laporan baru.</p>
        </div>
        @else
        <ul class="listview image-listview flush">
            @foreach ($laporan as $item)
            <li>
                <a href="#" class="item show-laporan-detail"
                    data-id="{{ $item->_id }}"
                    data-jenis-laporan="{{ $item->jenis_laporan }}"
                    data-tanggal-jam="{{ $item->tanggal_formatted }}, {{ $item->jam }}"
                    data-lokasi="{{ $item->lokasi }}"
                    data-keterangan="{{ $item->keterangan }}"
                    data-foto-url="{{ $item->foto_url ?? '' }}"
                    data-face-verification-url="{{ $item->face_verification_url ?? '' }}"
                    data-status-admin="{{ $item->status_admin ?? '' }}"
                    data-catatan-admin="{{ $item->catatan_admin ?? '' }}"
                    data-tanggal-peninjauan-admin="{{ $item->tanggal_peninjauan_admin ? \Carbon\Carbon::parse($item->tanggal_peninjauan_admin)->isoFormat('D MMM YY, HH:mm') : '' }}">
                    <div class="icon-box {{ $item->jenis_laporan == 'masalah' ? 'bg-danger' : ($item->jenis_laporan == 'kegiatan' ? 'bg-success' : 'bg-primary') }} text-light">
                        @if($item->jenis_laporan == 'harian')
                            <ion-icon name="document-text-outline"></ion-icon>
                        @elseif($item->jenis_laporan == 'kegiatan')
                            <ion-icon name="briefcase-outline"></ion-icon>
                        @elseif($item->jenis_laporan == 'masalah')
                            <ion-icon name="warning-outline"></ion-icon>
                        @else
                            <ion-icon name="document-outline"></ion-icon>
                        @endif
                    </div>
                    <div class="in">
                        <div>
                            <strong>{{ ucfirst($item->jenis_laporan) }}: {{ \Illuminate\Support\Str::limit($item->keterangan, 40) }}</strong>
                            <div class="text-muted small">
                                {{ $item->tanggal_formatted }} - {{ $item->jam }}
                            </div>
                            @if($item->status_admin)
                                <span class="badge
                                    @if($item->status_admin == 'Diterima') bg-success
                                    @elseif($item->status_admin == 'Ditolak') bg-danger
                                    @elseif($item->status_admin == 'Perlu Revisi') bg-warning text-dark
                                    @else bg-secondary @endif mt-1">
                                    {{ $item->status_admin }}
                                </span>
                            @else
                                <span class="badge bg-secondary mt-1">Belum Ditinjau</span>
                            @endif
                        </div>
                        {{-- <span class="text-muted"> --}}
                            {{-- <ion-icon name="chevron-forward-outline"></ion-icon> --}}
                        {{-- </span> --}}
                        {{-- Hapus span di atas agar chevron tidak ganda, karena framework UI biasanya sudah menambahkannya secara otomatis untuk tautan daftar. --}}
                    </div>
                </a>
            </li>
            @endforeach
        </ul>
        @endif
    </div>
</div>

<!-- Detail Laporan Modal -->
<div class="modal fade dialogbox" id="detailLaporanModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="detailLaporanModalTitle">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" role="document">
        <div class="modal-content" style="border-radius: 16px; overflow: hidden; border: none; box-shadow: 0 10px 30px rgba(0,0,0,0.15);">
            
            <!-- Modal Header dengan ikon x -->
            <div class="modal-header" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); border-bottom: none; padding: 20px;">
                <h5 class="modal-title text-white" style="font-weight: 600; font-size: 1.3em;">
                    <ion-icon name="document-text-outline" class="me-2"></ion-icon>
                    Detail Laporan
                </h5>
                <a href="#" class="text-white close-modal-btn" style="font-size: 1.5em; text-decoration: none;">
                    <ion-icon name="close-outline"></ion-icon>
                </a>
            </div>
            
            <!-- Modal Body -->
            <div class="modal-body" style="padding: 0;">
                <!-- Main Content -->
                <div style="padding: 20px;">
                    <!-- Report Type Badge -->
                    <div id="reportTypeBadge" class="mb-3" style="display: inline-block; padding: 6px 12px; border-radius: 20px; font-weight: 500; font-size: 0.85em;"></div>
                    
                    <!-- Detail Cards -->
                    <div class="detail-card mb-3" style="background: #f8fafc; border-radius: 12px; padding: 15px;">
                        <div class="detail-row mb-2">
                            <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500; margin-bottom: 4px;">Tanggal & Jam</div>
                            <div class="detail-value" id="modalTanggalJam" style="font-weight: 500; color: #2d3748;"></div>
                        </div>
                        
                        <div class="detail-row mb-2">
                            <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500; margin-bottom: 4px;">Lokasi</div>
                            <div class="detail-value" id="modalLokasi" style="font-weight: 500; color: #2d3748;">
                                <ion-icon name="location-outline" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                                <span id="locationText"></span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Description Card -->
                    <div class="detail-card mb-3" style="background: #f8fafc; border-radius: 12px; padding: 15px;">
                        <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500; margin-bottom: 8px;">Keterangan</div>
                        <div class="detail-value" id="modalKeterangan" style="line-height: 1.6; white-space: pre-wrap;"></div>
                    </div>
                    
                    <!-- Photo Evidence Section -->
                    <div id="modalFotoBuktiContainer" style="display: none; margin-bottom: 20px;">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500;">Foto Bukti</div>
                            <a href="#" id="fullscreenPhotoBtn" style="font-size: 0.8em; color: #4e73df; text-decoration: none;">
                                <ion-icon name="expand-outline" style="vertical-align: middle;"></ion-icon> Lihat penuh
                            </a>
                        </div>
                        <img id="modalFotoBukti" src="" alt="Foto Bukti" style="width: 100%; border-radius: 12px; border: 1px solid #e2e8f0; cursor: pointer;" class="shadow-sm">
                    </div>
                    
                    <!-- Face Verification Section -->
                    <div id="modalFotoVerifikasiContainer" style="display: none; margin-bottom: 20px;">
                        <div class="detail-label mb-2" style="color: #718096; font-size: 0.85em; font-weight: 500;">Verifikasi Wajah</div>
                        <div style="text-align: center;">
                            <img id="modalFotoVerifikasi" src="" alt="Foto Verifikasi" style="max-height: 150px; border-radius: 12px; border: 1px solid #e2e8f0;" class="shadow-sm">
                        </div>
                    </div>
                    
                    <!-- Admin Review Section -->
                    <div id="adminSection" style="display: none;">
                        <hr style="border-color: #e2e8f0; margin: 20px 0;">
                        
                        <h6 style="font-weight: 600; color: #4a5568; margin-bottom: 15px; display: flex; align-items: center;">
                            <ion-icon name="shield-checkmark-outline" class="me-2" style="color: #4e73df;"></ion-icon>
                            Tinjauan Admin
                        </h6>
                        
                        <div class="detail-card mb-3" style="background: #f8fafc; border-radius: 12px; padding: 15px;">
                            <div class="detail-row mb-2">
                                <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500; margin-bottom: 4px;">Status</div>
                                <div class="detail-value">
                                    <span id="modalStatusAdminBadge" style="display: inline-flex; align-items: center; gap: 6px; padding: 5px 10px; border-radius: 20px; font-size: 0.85em; font-weight: 500;"></span>
                                </div>
                            </div>
                            
                            <div class="detail-row" id="modalCatatanAdminContainer" style="display: none;">
                                <div class="detail-label" style="color: #718096; font-size: 0.85em; font-weight: 500; margin-bottom: 4px;">Catatan</div>
                                <div class="detail-value" id="modalCatatanAdmin" style="line-height: 1.6; white-space: pre-wrap; background: white; padding: 10px; border-radius: 8px; border: 1px solid #e2e8f0;"></div>
                            </div>
                        </div>
                        
                        <div id="modalTanggalTinjauAdminContainer" style="text-align: right;">
                            <small class="text-muted" id="modalTanggalTinjauAdmin" style="font-size: 0.8em;"></small>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Modal Footer -->
            <div class="modal-footer" style="border-top: 1px solid #e2e8f0; padding: 15px 20px;">
                <button type="button" id="printReportBtn" class="btn btn-primary btn-sm" style="border-radius: 8px; padding: 8px 16px; font-weight: 500;">
                    <ion-icon name="print-outline" class="me-1"></ion-icon> Cetak
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Fullscreen Photo Modal -->
<div class="modal fade" id="fullscreenPhotoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content" style="background: transparent; border: none;">
            <div class="modal-header" style="border: none; position: absolute; top: 10px; right: 10px; z-index: 1;">
                <button type="button" class="btn btn-sm btn-dark rounded-circle" data-bs-dismiss="modal" aria-label="Close" style="width: 36px; height: 36px; display: flex; align-items: center; justify-content: center;">
                    <ion-icon name="close-outline" style="font-size: 1.2em;"></ion-icon>
                </button>
            </div>
            <div class="modal-body p-0" style="display: flex; align-items: center; justify-content: center;">
                <img id="fullscreenPhoto" src="" alt="Foto Bukti" style="max-width: 100%; max-height: 90vh; border-radius: 8px;">
            </div>
        </div>
    </div>
</div>

@push('myscript')
<script>
    $(document).ready(function() {
        // Tracking halaman sebelumnya
        let previousPage = sessionStorage.getItem('previousPage');
        const currentPage = window.location.href;
        
        // Simpan halaman saat ini sebagai referensi
        if (!previousPage || previousPage === currentPage) {
            sessionStorage.setItem('previousPage', document.referrer || '/dashboard');
        }

        // Fungsi handle back button dengan kontrol lebih ketat
        $(document).on('click', '.goBack', function(e) {
            e.preventDefault();
            
            // 1. Coba kembali ke halaman spesifik yang kita track
            const trackedPrevious = sessionStorage.getItem('previousPage');
            if (trackedPrevious && 
                trackedPrevious !== currentPage &&
                trackedPrevious.includes(window.location.hostname) &&
                !trackedPrevious.includes('laporan/create')) {
                window.location.href = trackedPrevious;
                return;
            }
            
            // 2. Coba history.back() dengan timeout kontrol
            if (window.history.length > 1) {
                const currentState = window.history.state;
                window.history.back();
                
                // Jika tidak berpindah setelah 300ms, gunakan fallback
                setTimeout(() => {
                    if (window.history.state === currentState) {
                        proceedToFallback();
                    }
                }, 300);
                return;
            }
            
            // 3. Fallback ke halaman yang aman
            proceedToFallback();
        });

        function proceedToFallback() {
            // Cek referrer yang valid
            const validReferrer = document.referrer && 
                                document.referrer.includes(window.location.hostname) &&
                                !document.referrer.includes('laporan/create') &&
                                document.referrer !== currentPage;
            
            if (validReferrer) {
                window.location.href = document.referrer;
                return;
            }
            
            // Cek apakah ada halaman sebelumnya di sessionStorage
            const lastValidPage = sessionStorage.getItem('lastValidPage') || '/dashboard';
            if (lastValidPage !== currentPage) {
                window.location.href = lastValidPage;
                return;
            }
            
            // Ultimate fallback
            window.location.href = '/dashboard';
        }

        // Simpan halaman valid terakhir
        $(window).on('beforeunload', function() {
            // Hanya simpan jika bukan halaman create laporan
            if (!window.location.href.includes('laporan/create')) {
                sessionStorage.setItem('lastValidPage', window.location.href);
            }
        });

        // Inisialisasi modal dan lainnya
        var detailModal = new bootstrap.Modal(document.getElementById('detailLaporanModal'));
        
        function closeDetailModal() {
            detailModal.hide();
        }
        
        $(document).on('click', '.close-modal-btn', function(e) {
            e.preventDefault();
            closeDetailModal();
        });

        // Event listener untuk detail laporan
        $(document).on('click', '.show-laporan-detail', function(e) {
            e.preventDefault();
            
            const jenisLaporan = $(this).data('jenis-laporan');
            const tanggalJam = $(this).data('tanggal-jam');
            const lokasi = $(this).data('lokasi');
            const keterangan = $(this).data('keterangan');
            const fotoUrl = $(this).data('foto-url');
            const faceVerificationUrl = $(this).data('face-verification-url');
            const statusAdmin = $(this).data('status-admin');
            const catatanAdmin = $(this).data('catatan-admin');
            const tanggalPeninjauanAdmin = $(this).data('tanggal-peninjauan-admin');
            
            // Set report type badge
            let badgeText = '';
            let badgeColor = '';
            let badgeIcon = '';
            
            switch(jenisLaporan) {
                case 'harian':
                    badgeText = 'Laporan Harian';
                    badgeColor = 'background: rgba(78, 115, 223, 0.1); color: #4e73df;';
                    badgeIcon = 'document-text-outline';
                    break;
                case 'kegiatan':
                    badgeText = 'Laporan Kegiatan';
                    badgeColor = 'background: rgba(28, 200, 138, 0.1); color: #1cc88a;';
                    badgeIcon = 'calendar-outline';
                    break;
                case 'masalah':
                    badgeText = 'Laporan Masalah';
                    badgeColor = 'background: rgba(231, 74, 59, 0.1); color: #e74a3b;';
                    badgeIcon = 'alert-circle-outline';
                    break;
                default:
                    badgeText = 'Laporan';
                    badgeColor = 'background: rgba(108, 117, 125, 0.1); color: #6c757d;';
                    badgeIcon = 'document-outline';
            }
            
            $('#reportTypeBadge').html(`
                <ion-icon name="${badgeIcon}" style="vertical-align: middle; margin-right: 5px;"></ion-icon>
                ${badgeText}
            `).attr('style', badgeColor + ' border-radius: 20px; padding: 6px 12px;');
            
            // Isi konten detail
            $('#modalTanggalJam').text(tanggalJam);
            $('#modalLokasi').text(lokasi);
            $('#locationText').text(lokasi);
            $('#modalKeterangan').text(keterangan);
            
            // Foto Bukti
            if (fotoUrl && fotoUrl !== 'null') {
                $('#modalFotoBuktiContainer').show();
                $('#modalFotoBukti').attr('src', fotoUrl);
                $('#fullscreenPhotoBtn').off('click').on('click', function(e) {
                    e.preventDefault();
                    $('#fullscreenPhoto').attr('src', fotoUrl);
                    new bootstrap.Modal(document.getElementById('fullscreenPhotoModal')).show();
                });
                $('#modalFotoBukti').off('click').on('click', function() {
                    $('#fullscreenPhoto').attr('src', fotoUrl);
                    new bootstrap.Modal(document.getElementById('fullscreenPhotoModal')).show();
                });
            } else {
                $('#modalFotoBuktiContainer').hide();
            }
            
            // Face Verification
            if (faceVerificationUrl && faceVerificationUrl !== 'null') {
                $('#modalFotoVerifikasiContainer').show();
                $('#modalFotoVerifikasi').attr('src', faceVerificationUrl);
            } else {
                $('#modalFotoVerifikasiContainer').hide();
            }
            
            // Bagian Admin
            if (statusAdmin) {
                $('#adminSection').show();
                
                let badgeHtml = '';
                let badgeStyle = '';
                
                if (statusAdmin === 'Diterima') {
                    badgeHtml = `<ion-icon name="checkmark-circle-outline"></ion-icon> ${statusAdmin}`;
                    badgeStyle = 'background: rgba(28, 200, 138, 0.1); color: #1cc88a;';
                } else if (statusAdmin === 'Ditolak') {
                    badgeHtml = `<ion-icon name="close-circle-outline"></ion-icon> ${statusAdmin}`;
                    badgeStyle = 'background: rgba(231, 74, 59, 0.1); color: #e74a3b;';
                } else if (statusAdmin === 'Perlu Revisi') {
                    badgeHtml = `<ion-icon name="alert-circle-outline"></ion-icon> ${statusAdmin}`;
                    badgeStyle = 'background: rgba(246, 194, 62, 0.1); color: #f6c23e;';
                } else {
                    badgeHtml = `<ion-icon name="time-outline"></ion-icon> ${statusAdmin}`;
                    badgeStyle = 'background: rgba(108, 117, 125, 0.1); color: #6c757d;';
                }
                
                $('#modalStatusAdminBadge').html(badgeHtml).attr('style', badgeStyle);
                
                if (catatanAdmin) {
                    $('#modalCatatanAdminContainer').show();
                    $('#modalCatatanAdmin').text(catatanAdmin);
                } else {
                    $('#modalCatatanAdminContainer').hide();
                }
                
                if (tanggalPeninjauanAdmin) {
                    $('#modalTanggalTinjauAdminContainer').show();
                    $('#modalTanggalTinjauAdmin').text('Ditinjau pada: ' + tanggalPeninjauanAdmin);
                } else {
                    $('#modalTanggalTinjauAdminContainer').hide();
                }
            } else {
                $('#adminSection').hide();
            }
            
            // Tampilkan modal
            detailModal.show();
            
            // Scroll to top
            $('#detailLaporanModal .modal-body').scrollTop(0);
        });
        
        // Print button functionality
        $('#printReportBtn').on('click', function() {
            window.print();
        });
    });
</script>
@endpush

resources\views\presensi\profile.blade.php
@extends('layouts.presensi')

@section('header')
<div class="appHeader bg-primary text-light" style="background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); box-shadow: 0 4px 20px rgba(78, 115, 223, 0.3);">
    <div class="left">
        <a href="#" onclick="window.history.back(); return false;" class="headerButton goBack" style="color: white;">
            <ion-icon name="chevron-back-outline" style="font-size: 20px;"></ion-icon>
        </a>
    </div>
    <div class="pageTitle text-center" style="font-weight: 600; letter-spacing: 0.5px;">Profile</div>
    <div class="right"></div>
</div>
@endsection

@section('content')
<div class="section mt-2 text-center" style="padding-top: 90px;">
    <div class="avatar" style="margin-bottom: 1.5rem;">
    @php
        $user = Auth::guard('karyawan')->user();
        $foto = $user->foto ?? null;
    @endphp

    <div class="avatar" style="margin-bottom: 1.5rem;">
        <img 
            src="{{ !empty($foto) ? asset('storage/' . $foto) : asset('assets/img/sample/avatar/avatar1.jpg') }}" 
            alt="avatar" 
            class="imaged w120 rounded-circle shadow"
            style="border: 3px solid #4e73df; padding: 4px; box-shadow: 0 6px 20px rgba(78, 115, 223, 0.3); transition: all 0.3s ease;">
    </div>

    <h3 style="font-weight: 600; color: #343a40; margin-bottom: 5px;">{{ $user->nama_lengkap }}</h3>
    <p style="color: #6c757d; margin-bottom: 10px; font-size: 16px;">{{ $user->jabatan }}</p>
    
    <div class="profile-info" style="background: rgba(78, 115, 223, 0.05); border-radius: 15px; padding: 15px; max-width: 300px; margin: 0 auto 20px; text-align: left;">
        <div style="display: flex; align-items: center; margin-bottom: 10px;">
            <ion-icon name="call-outline" style="color: #4e73df; font-size: 18px; margin-right: 10px;"></ion-icon>
            <span style="color: #495057;">{{ $user->no_hp }}</span>
        </div>
        <div style="display: flex; align-items: center;">
            <ion-icon name="mail-outline" style="color: #4e73df; font-size: 18px; margin-right: 10px;"></ion-icon>
            <span style="color: #495057;">{{ $user->email ?? 'Email belum diisi' }}</span>
        </div>
    </div>

    <div class="mt-3">
        <a href="/editprofile" class="btn btn-primary" style="border-radius: 30px; padding: 12px 30px; font-weight: 500; background: linear-gradient(135deg, #4e73df 0%, #224abe 100%); border: none; box-shadow: 0 4px 15px rgba(78, 115, 223, 0.3); transition: all 0.3s ease;">
            <ion-icon name="create-outline" style="vertical-align: middle; margin-right: 8px;"></ion-icon> Edit Profile
        </a>
    </div>
</div>
@endsection

@push('myscript')
<script>
    $(document).ready(function() {
        // Fungsi back yang lebih reliable
        $(document).on('click', '.goBack', function(e) {
            e.preventDefault();
            
            // Cek apakah ada history sebelumnya dalam session yang sama
            if (performance.navigation.type === performance.navigation.TYPE_NAVIGATE) {
                // Jika pengguna datang dari navigasi dalam aplikasi
                if (window.history.length > 1) {
                    window.history.back();
                    return;
                }
            }
            
            // Fallback: Coba cek referrer
            if (document.referrer && 
                document.referrer.indexOf(window.location.hostname) !== -1 &&
                !document.referrer.includes('dashboard')) {
                window.location = document.referrer;
                return;
            }
            
            // Ultimate fallback ke dashboard
            window.location.href = '/dashboard';
        });
    });
</script>
@endpush

@push('styles')
<style>
    /* Avatar hover effect */
    .avatar img:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 25px rgba(78, 115, 223, 0.4) !important;
    }
    
    /* Button hover effect */
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(78, 115, 223, 0.4) !important;
    }
    
    /* Profile info card */
    .profile-info {
        transition: all 0.3s ease;
    }
    
    .profile-info:hover {
        background: rgba(78, 115, 223, 0.1) !important;
        transform: translateY(-3px);
    }
    
    /* Responsive adjustments */
    @media (max-width: 576px) {
        .appHeader {
            padding-top: 15px;
            padding-bottom: 15px;
        }
        
        .pageTitle {
            font-size: 18px;
        }
    }
</style>
@endpush

resources\views\admin\presensi\edit.blade.php
@extends('admin.layouts.app')

@section('title', 'Edit Data Presensi')

@section('content')
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Edit Data Presensi</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                {{-- PERBAIKAN: Menambahkan pengecekan untuk memastikan $presensi->karyawan ada --}}
                Karyawan: {{ $presensi->karyawan->nama_lengkap ?? $presensi->nik }}
                <br> Tanggal: {{ \Carbon\Carbon::parse($presensi->tgl_presensi)->isoFormat('D MMMM YYYY') }}
            </h6>
        </div>
        <div class="card-body">
            @if ($errors->any())
                <div class="alert alert-danger">
                    <ul>
                        @foreach ($errors->all() as $error)
                            <li>{{ $error }}</li>
                        @endforeach
                    </ul>
                </div>
            @endif

            <form action="{{ route('admin.presensi.update', $presensi->_id) }}" method="POST">
                @csrf
                @method('PUT')

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="nik_display" class="form-label">NIK</label>
                        <input type="text" id="nik_display" class="form-control" value="{{ $presensi->nik }}" readonly>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="nama_display" class="form-label">Nama Karyawan</label>
                        {{-- PERBAIKAN: Menambahkan pengecekan yang sama di sini --}}
                        <input type="text" id="nama_display" class="form-control" value="{{ $presensi->karyawan->nama_lengkap ?? 'Karyawan Tidak Ditemukan' }}" readonly>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="tgl_presensi_edit" class="form-label">Tanggal Presensi <span class="text-danger">*</span></label>
                    <input type="date" class="form-control @error('tgl_presensi_edit') is-invalid @enderror" id="tgl_presensi_edit" name="tgl_presensi_edit" value="{{ old('tgl_presensi_edit', \Carbon\Carbon::parse($presensi->tgl_presensi)->format('Y-m-d')) }}" required>
                    @error('tgl_presensi_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="jam_in_edit" class="form-label">Jam Masuk (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_in_edit') is-invalid @enderror" id="jam_in_edit" name="jam_in_edit" value="{{ old('jam_in_edit', $presensi->jam_in) }}">
                        @error('jam_in_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                        @if($presensi->foto_in)
                        <small class="form-text text-muted">Foto Masuk: <a href="{{ asset('storage/' . $presensi->foto_in) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Masuk: {{ $presensi->lokasi_in ?? '-' }}</small>
                        @endif
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="jam_out_edit" class="form-label">Jam Pulang (HH:MM:SS)</label>
                        <input type="time" step="1" class="form-control @error('jam_out_edit') is-invalid @enderror" id="jam_out_edit" name="jam_out_edit" value="{{ old('jam_out_edit', $presensi->jam_out) }}">
                        @error('jam_out_edit') <div class="invalid-feedback">{{ $message }}</div> @enderror
                         @if($presensi->foto_out)
                        <small class="form-text text-muted">Foto Pulang: <a href="{{ asset('storage/' . $presensi->foto_out) }}" target="_blank">Lihat</a></small><br>
                        <small class="form-text text-muted">Lokasi Pulang: {{ $presensi->lokasi_out ?? '-' }}</small>
                        @endif
                    </div>
                </div>
                
                <div class="alert alert-warning small mt-3">
                    <strong>Perhatian:</strong> Mengubah data presensi akan tercatat. Pastikan perubahan yang dilakukan sudah benar dan dapat dipertanggungjawabkan. Foto dan lokasi asli tidak dapat diubah melalui form ini.
                </div>


                <div class="mt-4">
                    <a href="{{ url()->previous() != url()->current() ? url()->previous() : route('admin.presensi.rekapitulasi') }}" class="btn btn-secondary">Batal</a>
                    <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                </div>
            </form>
        </div>
    </div>
</div>
@endsection